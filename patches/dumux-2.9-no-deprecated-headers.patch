diff --git a/dumux/CMakeLists.txt b/dumux/CMakeLists.txt
index 93fa9f1..8901582 100644
--- a/dumux/CMakeLists.txt
+++ b/dumux/CMakeLists.txt
@@ -1,5 +1,4 @@
 add_subdirectory("common")
-add_subdirectory("decoupled")
 add_subdirectory("freeflow")
 add_subdirectory("geomechanics")
 add_subdirectory("implicit")
diff --git a/dumux/decoupled/1p/1pindices.hh b/dumux/decoupled/1p/1pindices.hh
deleted file mode 100644
index d0171c9..0000000
--- a/dumux/decoupled/1p/1pindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DECOUPLED_1P_INDICES_HH_OLD
-#define DUMUX_DECOUPLED_1P_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/indices.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/indices.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/1pproperties.hh b/dumux/decoupled/1p/1pproperties.hh
deleted file mode 100644
index 60db181..0000000
--- a/dumux/decoupled/1p/1pproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1PPROPERTIES_HH_OLD
-#define DUMUX_1PPROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/properties.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/CMakeLists.txt b/dumux/decoupled/1p/CMakeLists.txt
deleted file mode 100644
index e8af6fb..0000000
--- a/dumux/decoupled/1p/CMakeLists.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-add_subdirectory("diffusion")
-
-#install headers
-install(FILES
-1pindices.hh
-1pproperties.hh
-celldata1p.hh
-fluxdata1p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/1p)
diff --git a/dumux/decoupled/1p/celldata1p.hh b/dumux/decoupled/1p/celldata1p.hh
deleted file mode 100644
index 37403a1..0000000
--- a/dumux/decoupled/1p/celldata1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CELLDATA1P_HH_OLD
-#define DUMUX_CELLDATA1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/celldata.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/celldata.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/CMakeLists.txt b/dumux/decoupled/1p/diffusion/CMakeLists.txt
deleted file mode 100644
index 48614ea..0000000
--- a/dumux/decoupled/1p/diffusion/CMakeLists.txt
+++ /dev/null
@@ -1,7 +0,0 @@
-add_subdirectory("fv")
-
-#install headers
-install(FILES
-diffusionproblem1p.hh
-diffusionproperties1p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/1p/diffusion)
diff --git a/dumux/decoupled/1p/diffusion/diffusionproblem1p.hh b/dumux/decoupled/1p/diffusion/diffusionproblem1p.hh
deleted file mode 100644
index 756c0c6..0000000
--- a/dumux/decoupled/1p/diffusion/diffusionproblem1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DIFFUSIONPROBLEM_1P_HH_OLD
-#define DUMUX_DIFFUSIONPROBLEM_1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/problem.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/problem.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/diffusionproperties1p.hh b/dumux/decoupled/1p/diffusion/diffusionproperties1p.hh
deleted file mode 100644
index 126ed84..0000000
--- a/dumux/decoupled/1p/diffusion/diffusionproperties1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DIFFUSION_PROPERTIES_1P_HH_OLD
-#define DUMUX_DIFFUSION_PROPERTIES_1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/properties.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/fv/CMakeLists.txt b/dumux/decoupled/1p/diffusion/fv/CMakeLists.txt
deleted file mode 100644
index 8c8ac19..0000000
--- a/dumux/decoupled/1p/diffusion/fv/CMakeLists.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-
-#install headers
-install(FILES
-fvpressure1p.hh
-fvpressureproperties1p.hh
-fvpressurevelocity1p.hh
-fvpressurevelocityproperties1p.hh
-fvvelocity1p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/1p/diffusion/fv)
diff --git a/dumux/decoupled/1p/diffusion/fv/fvpressure1p.hh b/dumux/decoupled/1p/diffusion/fv/fvpressure1p.hh
deleted file mode 100644
index b31e1d6..0000000
--- a/dumux/decoupled/1p/diffusion/fv/fvpressure1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURE1P_HH_OLD
-#define DUMUX_FVPRESSURE1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressure.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressure.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/fv/fvpressureproperties1p.hh b/dumux/decoupled/1p/diffusion/fv/fvpressureproperties1p.hh
deleted file mode 100644
index 3861cb5..0000000
--- a/dumux/decoupled/1p/diffusion/fv/fvpressureproperties1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREPORPERTIES1P_DECOUPLED_HH_OLD
-#define DUMUX_FVPRESSUREPORPERTIES1P_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressureproperties.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/fv/fvpressurevelocity1p.hh b/dumux/decoupled/1p/diffusion/fv/fvpressurevelocity1p.hh
deleted file mode 100644
index c3872df..0000000
--- a/dumux/decoupled/1p/diffusion/fv/fvpressurevelocity1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREVELOCITY1P_HH_OLD
-#define DUMUX_FVPRESSUREVELOCITY1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressurevelocity.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressurevelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/fv/fvpressurevelocityproperties1p.hh b/dumux/decoupled/1p/diffusion/fv/fvpressurevelocityproperties1p.hh
deleted file mode 100644
index be6e9b3..0000000
--- a/dumux/decoupled/1p/diffusion/fv/fvpressurevelocityproperties1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREVELOCITYPORPERTIES1P_DECOUPLED_HH_OLD
-#define DUMUX_FVPRESSUREVELOCITYPORPERTIES1P_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressurevelocityproperties.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/pressurevelocityproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/diffusion/fv/fvvelocity1p.hh b/dumux/decoupled/1p/diffusion/fv/fvvelocity1p.hh
deleted file mode 100644
index f09fc83..0000000
--- a/dumux/decoupled/1p/diffusion/fv/fvvelocity1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVVELOCITY1P_HH_OLD
-#define DUMUX_FVVELOCITY1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/velocity.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/diffusion/cellcentered/velocity.hh>
-
-#endif
diff --git a/dumux/decoupled/1p/fluxdata1p.hh b/dumux/decoupled/1p/fluxdata1p.hh
deleted file mode 100644
index f991378..0000000
--- a/dumux/decoupled/1p/fluxdata1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FLUXDATA1P_HH_OLD
-#define DUMUX_FLUXDATA1P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/sequential/fluxdata.hh instead
-
-#include <dumux/porousmediumflow/1p/sequential/fluxdata.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/2pindices.hh b/dumux/decoupled/2p/2pindices.hh
deleted file mode 100644
index 9658406..0000000
--- a/dumux/decoupled/2p/2pindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DECOUPLED_2P_INDICES_HH_OLD
-#define DUMUX_DECOUPLED_2P_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/indices.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/indices.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/2pproperties.hh b/dumux/decoupled/2p/2pproperties.hh
deleted file mode 100644
index d2c1b04..0000000
--- a/dumux/decoupled/2p/2pproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PPROPERTIES_DECOUPLED_HH_OLD
-#define DUMUX_2PPROPERTIES_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/properties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/CMakeLists.txt b/dumux/decoupled/2p/CMakeLists.txt
deleted file mode 100644
index 96253fb..0000000
--- a/dumux/decoupled/2p/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-add_subdirectory("diffusion")
-add_subdirectory("impes")
-add_subdirectory("transport")
-
-#install headers
-install(FILES
-2pindices.hh
-2pproperties.hh
-celldata2padaptive.hh
-celldata2p.hh
-fluxdata2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p)
diff --git a/dumux/decoupled/2p/celldata2p.hh b/dumux/decoupled/2p/celldata2p.hh
deleted file mode 100644
index 86e89e5..0000000
--- a/dumux/decoupled/2p/celldata2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELEMENTDATA2P_HH_OLD
-#define DUMUX_ELEMENTDATA2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/celldata.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/celldata.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/celldata2padaptive.hh b/dumux/decoupled/2p/celldata2padaptive.hh
deleted file mode 100644
index d75c357..0000000
--- a/dumux/decoupled/2p/celldata2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELEMENTDATA2P_ADAPTIVE_HH_OLD
-#define DUMUX_ELEMENTDATA2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/celldataadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/celldataadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/CMakeLists.txt b/dumux/decoupled/2p/diffusion/CMakeLists.txt
deleted file mode 100644
index 4b8712b..0000000
--- a/dumux/decoupled/2p/diffusion/CMakeLists.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-add_subdirectory("fv")
-add_subdirectory("fvmpfa")
-add_subdirectory("mimetic")
-
-#install headers
-install(FILES
-diffusionproblem2p.hh
-diffusionproperties2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/diffusion)
diff --git a/dumux/decoupled/2p/diffusion/diffusionproblem2p.hh b/dumux/decoupled/2p/diffusion/diffusionproblem2p.hh
deleted file mode 100644
index 1f52406..0000000
--- a/dumux/decoupled/2p/diffusion/diffusionproblem2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DIFFUSIONPROBLEM_2P_HH_OLD
-#define DUMUX_DIFFUSIONPROBLEM_2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/problem.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/problem.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/diffusionproperties2p.hh b/dumux/decoupled/2p/diffusion/diffusionproperties2p.hh
deleted file mode 100644
index 345905f..0000000
--- a/dumux/decoupled/2p/diffusion/diffusionproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DIFFUSION_PROPERTIES_2P_HH_OLD
-#define DUMUX_DIFFUSION_PROPERTIES_2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/properties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/CMakeLists.txt b/dumux/decoupled/2p/diffusion/fv/CMakeLists.txt
deleted file mode 100644
index 33b1ecb..0000000
--- a/dumux/decoupled/2p/diffusion/fv/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-
-#install headers
-install(FILES
-fvpressure2padaptive.hh
-fvpressure2p.hh
-fvpressureproperties2padaptive.hh
-fvpressureproperties2p.hh
-fvpressurevelocity2p.hh
-fvpressurevelocityproperties2p.hh
-fvvelocity2padaptive.hh
-fvvelocity2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/diffusion/fv)
diff --git a/dumux/decoupled/2p/diffusion/fv/fvpressure2p.hh b/dumux/decoupled/2p/diffusion/fv/fvpressure2p.hh
deleted file mode 100644
index fa4e0d7..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvpressure2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURE2P_HH_OLD
-#define DUMUX_FVPRESSURE2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressure.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressure.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvpressure2padaptive.hh b/dumux/decoupled/2p/diffusion/fv/fvpressure2padaptive.hh
deleted file mode 100644
index baa73e8..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvpressure2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURE2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVPRESSURE2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressureadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressureadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvpressureproperties2p.hh b/dumux/decoupled/2p/diffusion/fv/fvpressureproperties2p.hh
deleted file mode 100644
index 658f3f0..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvpressureproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREPORPERTIES2P_DECOUPLED_HH_OLD
-#define DUMUX_FVPRESSUREPORPERTIES2P_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressureproperties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvpressureproperties2padaptive.hh b/dumux/decoupled/2p/diffusion/fv/fvpressureproperties2padaptive.hh
deleted file mode 100644
index 5ab1c7f..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvpressureproperties2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREPORPERTIES2P_ADAPTIVE_DECOUPLED_HH_OLD
-#define DUMUX_FVPRESSUREPORPERTIES2P_ADAPTIVE_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressurepropertiesadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressurepropertiesadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvpressurevelocity2p.hh b/dumux/decoupled/2p/diffusion/fv/fvpressurevelocity2p.hh
deleted file mode 100644
index f709eeb..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvpressurevelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREVELOCITY2P_HH_OLD
-#define DUMUX_FVPRESSUREVELOCITY2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressurevelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressurevelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvpressurevelocityproperties2p.hh b/dumux/decoupled/2p/diffusion/fv/fvpressurevelocityproperties2p.hh
deleted file mode 100644
index 347edd7..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvpressurevelocityproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSUREVELOCITYPORPERTIES2P_DECOUPLED_HH_OLD
-#define DUMUX_FVPRESSUREVELOCITYPORPERTIES2P_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressurevelocityproperties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/pressurevelocityproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvvelocity2p.hh b/dumux/decoupled/2p/diffusion/fv/fvvelocity2p.hh
deleted file mode 100644
index caa4ced..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvvelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVVELOCITY2P_HH_OLD
-#define DUMUX_FVVELOCITY2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/velocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/velocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fv/fvvelocity2padaptive.hh b/dumux/decoupled/2p/diffusion/fv/fvvelocity2padaptive.hh
deleted file mode 100644
index d78b3f4..0000000
--- a/dumux/decoupled/2p/diffusion/fv/fvvelocity2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVVELOCITY2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVVELOCITY2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/velocityadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/cellcentered/velocityadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/CMakeLists.txt b/dumux/decoupled/2p/diffusion/fvmpfa/CMakeLists.txt
deleted file mode 100644
index 6a6fefa..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/CMakeLists.txt
+++ /dev/null
@@ -1,2 +0,0 @@
-add_subdirectory("lmethod")
-add_subdirectory("omethod")
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/CMakeLists.txt b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/CMakeLists.txt
deleted file mode 100644
index af11414..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/CMakeLists.txt
+++ /dev/null
@@ -1,24 +0,0 @@
-
-#install headers
-install(FILES
-fvmpfal2dpressure2padaptive.hh
-fvmpfal2dpressure2p.hh
-fvmpfal2dpressureproperties2padaptive.hh
-fvmpfal2dpressureproperties2p.hh
-fvmpfal2dpressurevelocity2padaptive.hh
-fvmpfal2dpressurevelocity2p.hh
-fvmpfal2dtransmissibilitycalculator.hh
-fvmpfal2dvelocity2padaptive.hh
-fvmpfal2dvelocity2p.hh
-fvmpfal3dinteractionvolumecontaineradaptive.hh
-fvmpfal3dinteractionvolumecontainer.hh
-fvmpfal3dpressure2padaptive.hh
-fvmpfal3dpressure2p.hh
-fvmpfal3dpressureproperties2padaptive.hh
-fvmpfal3dpressureproperties2p.hh
-fvmpfal3dpressurevelocity2padaptive.hh
-fvmpfal3dpressurevelocity2p.hh
-fvmpfal3dtransmissibilitycalculator.hh
-fvmpfal3dvelocity2padaptive.hh
-fvmpfal3dvelocity2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/diffusion/fvmpfa/lmethod)
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressure2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressure2p.hh
deleted file mode 100644
index 5202d78..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressure2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2DPRESSURE2P_HH_OLD
-#define DUMUX_FVMPFAL2DPRESSURE2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressure.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressure.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressure2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressure2padaptive.hh
deleted file mode 100644
index 0908fbd..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressure2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2DPRESSURE2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL2DPRESSURE2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressureadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressureadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressureproperties2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressureproperties2p.hh
deleted file mode 100644
index 14cbc86..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressureproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2DPROPERTIES2P_HH_OLD
-#define DUMUX_FVMPFAL2DPROPERTIES2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressureproperties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressureproperties2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressureproperties2padaptive.hh
deleted file mode 100644
index 9afa305..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressureproperties2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2DPROPERTIES2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL2DPROPERTIES2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressurepropertiesadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressurepropertiesadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressurevelocity2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressurevelocity2p.hh
deleted file mode 100644
index d5b1b0d..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressurevelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPFAL2DPRESSUREVELOCITY2P_HH_OLD
-#define DUMUX_MPFAL2DPRESSUREVELOCITY2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressurevelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressurevelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressurevelocity2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressurevelocity2padaptive.hh
deleted file mode 100644
index c783820..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dpressurevelocity2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPFAL2DPRESSUREVELOCITIES2P_ADAPTIVE_HH_OLD
-#define DUMUX_MPFAL2DPRESSUREVELOCITIES2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressurevelocityadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dpressurevelocityadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dtransmissibilitycalculator.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dtransmissibilitycalculator.hh
deleted file mode 100644
index 4d92d5f..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dtransmissibilitycalculator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2D_TRANSMISSIBILITYCALCULATOR_HH_OLD
-#define DUMUX_FVMPFAL2D_TRANSMISSIBILITYCALCULATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dtransmissibilitycalculator.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dtransmissibilitycalculator.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dvelocity2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dvelocity2p.hh
deleted file mode 100644
index ff01257..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dvelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2DVELOCITY2P_HH_OLD
-#define DUMUX_FVMPFAL2DVELOCITY2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dvelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dvelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dvelocity2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dvelocity2padaptive.hh
deleted file mode 100644
index 2d240aa..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal2dvelocity2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2DVELOCITY2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL2DVELOCITY2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dvelocityadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/2dvelocityadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dinteractionvolumecontainer.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dinteractionvolumecontainer.hh
deleted file mode 100644
index cdb6c73..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dinteractionvolumecontainer.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3D_INTERACTIONVOLUMECONTAINER_HH_OLD
-#define DUMUX_FVMPFAL3D_INTERACTIONVOLUMECONTAINER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dinteractionvolumecontainer.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dinteractionvolumecontainer.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dinteractionvolumecontaineradaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dinteractionvolumecontaineradaptive.hh
deleted file mode 100644
index ef1339a..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dinteractionvolumecontaineradaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3D_INTERACTIONVOLUMECONTAINER_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL3D_INTERACTIONVOLUMECONTAINER_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dinteractionvolumecontaineradaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dinteractionvolumecontaineradaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressure2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressure2p.hh
deleted file mode 100644
index 951e77b..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressure2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2PFABOUND3DPRESSURE2P_HH_OLD
-#define DUMUX_FVMPFAL2PFABOUND3DPRESSURE2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressure.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressure.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressure2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressure2padaptive.hh
deleted file mode 100644
index 7967c4a..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressure2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2PFABOUND3DPRESSURE2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL2PFABOUND3DPRESSURE2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressureadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressureadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressureproperties2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressureproperties2p.hh
deleted file mode 100644
index cf2cdc1..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressureproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3DPROPERTIES2P_HH_OLD
-#define DUMUX_FVMPFAL3DPROPERTIES2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressureproperties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressureproperties2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressureproperties2padaptive.hh
deleted file mode 100644
index 9252a81..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressureproperties2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3DPROPERTIES2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL3DPROPERTIES2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressurepropertiesadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressurepropertiesadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressurevelocity2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressurevelocity2p.hh
deleted file mode 100644
index d4f01b6..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressurevelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2PFABOUND3DVELOCITIES2P_HH_OLD
-#define DUMUX_FVMPFAL2PFABOUND3DVELOCITIES2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressurevelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressurevelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressurevelocity2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressurevelocity2padaptive.hh
deleted file mode 100644
index 45b03fb..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dpressurevelocity2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFALPRESSUREVELOCITY2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFALPRESSUREVELOCITY2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressurevelocityadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dpressurevelocityadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dtransmissibilitycalculator.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dtransmissibilitycalculator.hh
deleted file mode 100644
index 6966a78..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dtransmissibilitycalculator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3D_TRANSMISSIBILITYCALCULATOR_HH_OLD
-#define DUMUX_FVMPFAL3D_TRANSMISSIBILITYCALCULATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dtransmissibilitycalculator.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dtransmissibilitycalculator.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dvelocity2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dvelocity2p.hh
deleted file mode 100644
index 3435f6e..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dvelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL2PVELOCITY2P_HH_OLD
-#define DUMUX_FVMPFAL2PVELOCITY2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dvelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dvelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dvelocity2padaptive.hh b/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dvelocity2padaptive.hh
deleted file mode 100644
index 57d6acf..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/lmethod/fvmpfal3dvelocity2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3DVELOCITY2P_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL3DVELOCITY2P_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dvelocityadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/lmethod/3dvelocityadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/CMakeLists.txt b/dumux/decoupled/2p/diffusion/fvmpfa/omethod/CMakeLists.txt
deleted file mode 100644
index 8bfdcdf..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/CMakeLists.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-
-#install headers
-install(FILES
-fvmpfao2dpressure2p.hh
-fvmpfao2dpressureproperties2p.hh
-fvmpfao2dpressurevelocity2p.hh
-fvmpfao2dvelocity2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/diffusion/fvmpfa/omethod)
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressure2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressure2p.hh
deleted file mode 100644
index 1ab5a30..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressure2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAO2DPRESSURE2P_HH_OLD
-#define DUMUX_FVMPFAO2DPRESSURE2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dpressure.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dpressure.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressureproperties2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressureproperties2p.hh
deleted file mode 100644
index 571a11a..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressureproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAO2DPROPERTIES2P_HH_OLD
-#define DUMUX_FVMPFAO2DPROPERTIES2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dpressureproperties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dpressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressurevelocity2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressurevelocity2p.hh
deleted file mode 100644
index ed89857..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dpressurevelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPFAO2DPRESSUREVELOCITIES2P_HH_OLD
-#define DUMUX_MPFAO2DPRESSUREVELOCITIES2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dpressurevelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dpressurevelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dvelocity2p.hh b/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dvelocity2p.hh
deleted file mode 100644
index d1fef90..0000000
--- a/dumux/decoupled/2p/diffusion/fvmpfa/omethod/fvmpfao2dvelocity2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAO2DVELOCITY2P_HH_OLD
-#define DUMUX_FVMPFAO2DVELOCITY2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dvelocity.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mpfa/omethod/2dvelocity.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/CMakeLists.txt b/dumux/decoupled/2p/diffusion/mimetic/CMakeLists.txt
deleted file mode 100644
index e94dbd1..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/CMakeLists.txt
+++ /dev/null
@@ -1,15 +0,0 @@
-
-#install headers
-install(FILES
-croperator2padaptive.hh
-croperator2p.hh
-localstiffness.hh
-mimetic2padaptive.hh
-mimetic2p.hh
-mimeticoperator2padaptive.hh
-mimeticoperator2p.hh
-mimeticpressure2padaptive.hh
-mimeticpressure2p.hh
-mimeticpressureproperties2padaptive.hh
-mimeticpressureproperties2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/diffusion/mimetic)
diff --git a/dumux/decoupled/2p/diffusion/mimetic/croperator2p.hh b/dumux/decoupled/2p/diffusion/mimetic/croperator2p.hh
deleted file mode 100644
index 81a2da1..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/croperator2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CROPERATOR2P_HH_OLD
-#define DUMUX_CROPERATOR2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/croperator.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/croperator.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/croperator2padaptive.hh b/dumux/decoupled/2p/diffusion/mimetic/croperator2padaptive.hh
deleted file mode 100644
index 2c68165..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/croperator2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CROPERATOR2PADAPTIVE_HH_OLD
-#define DUMUX_CROPERATOR2PADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/croperatoradaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/croperatoradaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/localstiffness.hh b/dumux/decoupled/2p/diffusion/mimetic/localstiffness.hh
deleted file mode 100644
index 1c91e1d..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/localstiffness.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_LOCAL_STIFFNESS_HH_OLD
-#define DUMUX_LOCAL_STIFFNESS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/localstiffness.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/localstiffness.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimetic2p.hh b/dumux/decoupled/2p/diffusion/mimetic/mimetic2p.hh
deleted file mode 100644
index 8c0b387..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimetic2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETIC2P_HH_OLD
-#define DUMUX_MIMETIC2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/mimetic.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/mimetic.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimetic2padaptive.hh b/dumux/decoupled/2p/diffusion/mimetic/mimetic2padaptive.hh
deleted file mode 100644
index 0e52fb9..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimetic2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETIC2PADAPTIVE_HH_OLD
-#define DUMUX_MIMETIC2PADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/mimeticadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/mimeticadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimeticoperator2p.hh b/dumux/decoupled/2p/diffusion/mimetic/mimeticoperator2p.hh
deleted file mode 100644
index a9ce207..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimeticoperator2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICOPERATOR2P_HH_OLD
-#define DUMUX_MIMETICOPERATOR2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/operator.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/operator.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimeticoperator2padaptive.hh b/dumux/decoupled/2p/diffusion/mimetic/mimeticoperator2padaptive.hh
deleted file mode 100644
index fab5987..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimeticoperator2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICOPERATOR2PADAPTIVE_HH_OLD
-#define DUMUX_MIMETICOPERATOR2PADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/operatoradaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/operatoradaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressure2p.hh b/dumux/decoupled/2p/diffusion/mimetic/mimeticpressure2p.hh
deleted file mode 100644
index 899f4af..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressure2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICPRESSURE2P_HH_OLD
-#define DUMUX_MIMETICPRESSURE2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressure.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressure.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressure2padaptive.hh b/dumux/decoupled/2p/diffusion/mimetic/mimeticpressure2padaptive.hh
deleted file mode 100644
index 7753872..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressure2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICPRESSURE2PADAPTIVE_HH_OLD
-#define DUMUX_MIMETICPRESSURE2PADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressureadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressureadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressureproperties2p.hh b/dumux/decoupled/2p/diffusion/mimetic/mimeticpressureproperties2p.hh
deleted file mode 100644
index a2270f1..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressureproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICPROPERTIES2P_DECOUPLED_HH_OLD
-#define DUMUX_MIMETICPROPERTIES2P_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressureproperties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressureproperties2padaptive.hh b/dumux/decoupled/2p/diffusion/mimetic/mimeticpressureproperties2padaptive.hh
deleted file mode 100644
index 25a94cb..0000000
--- a/dumux/decoupled/2p/diffusion/mimetic/mimeticpressureproperties2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICPROPERTIES2PADAPTIVE_DECOUPLED_HH_OLD
-#define DUMUX_MIMETICPROPERTIES2PADAPTIVE_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressurepropertiesadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/diffusion/mimetic/pressurepropertiesadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/fluxdata2p.hh b/dumux/decoupled/2p/fluxdata2p.hh
deleted file mode 100644
index 7641d3a..0000000
--- a/dumux/decoupled/2p/fluxdata2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FLUXDATA2P_HH_OLD
-#define DUMUX_FLUXDATA2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/fluxdata.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/fluxdata.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/impes/CMakeLists.txt b/dumux/decoupled/2p/impes/CMakeLists.txt
deleted file mode 100644
index c76c8ae..0000000
--- a/dumux/decoupled/2p/impes/CMakeLists.txt
+++ /dev/null
@@ -1,10 +0,0 @@
-
-#install headers
-install(FILES
-gridadaptionindicator2p.hh
-gridadaptionindicator2plocalflux.hh
-gridadaptionindicator2plocal.hh
-impesproblem2p.hh
-impesproperties2padaptive.hh
-impesproperties2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/impes)
diff --git a/dumux/decoupled/2p/impes/gridadaptionindicator2p.hh b/dumux/decoupled/2p/impes/gridadaptionindicator2p.hh
deleted file mode 100644
index d426e6e..0000000
--- a/dumux/decoupled/2p/impes/gridadaptionindicator2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPTIONINDICATOR2P_HH_OLD
-#define DUMUX_GRIDADAPTIONINDICATOR2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/impes/gridadaptionindicator.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/impes/gridadaptionindicator.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/impes/gridadaptionindicator2plocal.hh b/dumux/decoupled/2p/impes/gridadaptionindicator2plocal.hh
deleted file mode 100644
index 0044739..0000000
--- a/dumux/decoupled/2p/impes/gridadaptionindicator2plocal.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPTIONINDICATOR2PLOCAL_HH_OLD
-#define DUMUX_GRIDADAPTIONINDICATOR2PLOCAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/impes/gridadaptionindicatorlocal.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/impes/gridadaptionindicatorlocal.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/impes/gridadaptionindicator2plocalflux.hh b/dumux/decoupled/2p/impes/gridadaptionindicator2plocalflux.hh
deleted file mode 100644
index 8f4efdd..0000000
--- a/dumux/decoupled/2p/impes/gridadaptionindicator2plocalflux.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPTIONINDICATOR2PLOCALFLUX_HH_OLD
-#define DUMUX_GRIDADAPTIONINDICATOR2PLOCALFLUX_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/impes/gridadaptionindicatorlocalflux.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/impes/gridadaptionindicatorlocalflux.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/impes/impesproblem2p.hh b/dumux/decoupled/2p/impes/impesproblem2p.hh
deleted file mode 100644
index e0d7725..0000000
--- a/dumux/decoupled/2p/impes/impesproblem2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPESPROBLEM_2P_HH_OLD
-#define DUMUX_IMPESPROBLEM_2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/impes/problem.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/impes/problem.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/impes/impesproperties2p.hh b/dumux/decoupled/2p/impes/impesproperties2p.hh
deleted file mode 100644
index 3f153d5..0000000
--- a/dumux/decoupled/2p/impes/impesproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPES2P_PROPERTIES_HH_OLD
-#define DUMUX_IMPES2P_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/impes/properties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/impes/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/impes/impesproperties2padaptive.hh b/dumux/decoupled/2p/impes/impesproperties2padaptive.hh
deleted file mode 100644
index 713dae8..0000000
--- a/dumux/decoupled/2p/impes/impesproperties2padaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPES2PADAPTIVE_PROPERTIES_HH_OLD
-#define DUMUX_IMPES2PADAPTIVE_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/impes/propertiesadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/impes/propertiesadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/CMakeLists.txt b/dumux/decoupled/2p/transport/CMakeLists.txt
deleted file mode 100644
index fbb60dd..0000000
--- a/dumux/decoupled/2p/transport/CMakeLists.txt
+++ /dev/null
@@ -1,7 +0,0 @@
-add_subdirectory("fv")
-
-#install headers
-install(FILES
-transportproblem2p.hh
-transportproperties2p.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/transport)
diff --git a/dumux/decoupled/2p/transport/fv/CMakeLists.txt b/dumux/decoupled/2p/transport/fv/CMakeLists.txt
deleted file mode 100644
index f3e7b72..0000000
--- a/dumux/decoupled/2p/transport/fv/CMakeLists.txt
+++ /dev/null
@@ -1,13 +0,0 @@
-
-#install headers
-install(FILES
-capillarydiffusion.hh
-convectivepart.hh
-diffusivepart.hh
-evalcflfluxcoats.hh
-evalcflfluxdefault.hh
-evalcflflux.hh
-fvsaturation2p.hh
-fvtransportproperties2p.hh
-gravitypart.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p/transport/fv)
diff --git a/dumux/decoupled/2p/transport/fv/capillarydiffusion.hh b/dumux/decoupled/2p/transport/fv/capillarydiffusion.hh
deleted file mode 100644
index eecdd09..0000000
--- a/dumux/decoupled/2p/transport/fv/capillarydiffusion.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CAPILLARYDIFFUSION_HH_OLD
-#define DUMUX_CAPILLARYDIFFUSION_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/capillarydiffusion.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/capillarydiffusion.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/convectivepart.hh b/dumux/decoupled/2p/transport/fv/convectivepart.hh
deleted file mode 100644
index 2f61f06..0000000
--- a/dumux/decoupled/2p/transport/fv/convectivepart.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CONVECTIVEPART_HH_OLD
-#define DUMUX_CONVECTIVEPART_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/convectivepart.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/convectivepart.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/diffusivepart.hh b/dumux/decoupled/2p/transport/fv/diffusivepart.hh
deleted file mode 100644
index 8a66780..0000000
--- a/dumux/decoupled/2p/transport/fv/diffusivepart.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DIFFUSIVEPART_HH_OLD
-#define DUMUX_DIFFUSIVEPART_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/diffusivepart.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/diffusivepart.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/evalcflflux.hh b/dumux/decoupled/2p/transport/fv/evalcflflux.hh
deleted file mode 100644
index f762513..0000000
--- a/dumux/decoupled/2p/transport/fv/evalcflflux.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EVALCFLFLUX_HH_OLD
-#define DUMUX_EVALCFLFLUX_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/evalcflflux.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/evalcflflux.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/evalcflfluxcoats.hh b/dumux/decoupled/2p/transport/fv/evalcflfluxcoats.hh
deleted file mode 100644
index 83f72c9..0000000
--- a/dumux/decoupled/2p/transport/fv/evalcflfluxcoats.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EVALCFLFLUX_COATS_HH_OLD
-#define DUMUX_EVALCFLFLUX_COATS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/evalcflfluxcoats.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/evalcflfluxcoats.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/evalcflfluxdefault.hh b/dumux/decoupled/2p/transport/fv/evalcflfluxdefault.hh
deleted file mode 100644
index fdf6b36..0000000
--- a/dumux/decoupled/2p/transport/fv/evalcflfluxdefault.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EVALCFLFLUX_DEFAULT_HH_OLD
-#define DUMUX_EVALCFLFLUX_DEFAULT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/evalcflfluxdefault.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/evalcflfluxdefault.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/fvsaturation2p.hh b/dumux/decoupled/2p/transport/fv/fvsaturation2p.hh
deleted file mode 100644
index 53e6d50..0000000
--- a/dumux/decoupled/2p/transport/fv/fvsaturation2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVSATURATION2P_HH_OLD
-#define DUMUX_FVSATURATION2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/saturation.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/saturation.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/fvtransportproperties2p.hh b/dumux/decoupled/2p/transport/fv/fvtransportproperties2p.hh
deleted file mode 100644
index 712f5d8..0000000
--- a/dumux/decoupled/2p/transport/fv/fvtransportproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV_TRANSPORT_PROPERTIES_2P_HH_OLD
-#define DUMUX_FV_TRANSPORT_PROPERTIES_2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/properties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/fv/gravitypart.hh b/dumux/decoupled/2p/transport/fv/gravitypart.hh
deleted file mode 100644
index 2688256..0000000
--- a/dumux/decoupled/2p/transport/fv/gravitypart.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRAVITYPART_HH_OLD
-#define DUMUX_GRAVITYPART_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/cellcentered/gravitypart.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/cellcentered/gravitypart.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/transportproblem2p.hh b/dumux/decoupled/2p/transport/transportproblem2p.hh
deleted file mode 100644
index abe4d0c..0000000
--- a/dumux/decoupled/2p/transport/transportproblem2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TRANSPORTPROBLEM_2P_HH_OLD
-#define DUMUX_TRANSPORTPROBLEM_2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/problem.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/problem.hh>
-
-#endif
diff --git a/dumux/decoupled/2p/transport/transportproperties2p.hh b/dumux/decoupled/2p/transport/transportproperties2p.hh
deleted file mode 100644
index 6692606..0000000
--- a/dumux/decoupled/2p/transport/transportproperties2p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TRANSPORT_PROPERTIES_2P_HH_OLD
-#define DUMUX_TRANSPORT_PROPERTIES_2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/sequential/transport/properties.hh instead
-
-#include <dumux/porousmediumflow/2p/sequential/transport/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/2p2cadaptiveproperties.hh b/dumux/decoupled/2p2c/2p2cadaptiveproperties.hh
deleted file mode 100644
index da0bd7d..0000000
--- a/dumux/decoupled/2p2c/2p2cadaptiveproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2CADAPTIVE_PROPERTIES_HH_OLD
-#define DUMUX_2P2CADAPTIVE_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/adaptiveproperties.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/adaptiveproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/2p2cfluidstate.hh b/dumux/decoupled/2p2c/2p2cfluidstate.hh
deleted file mode 100644
index 653d937..0000000
--- a/dumux/decoupled/2p2c/2p2cfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_FLUID_STATE_HH_OLD
-#warning "dumux/porousmediumflow/2p2c/sequential/fluidstate.hh is deprecated, use dumux/material/fluidstates/2p2c.hh instead."_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fluidstate.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fluidstate.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/2p2cproblem.hh b/dumux/decoupled/2p2c/2p2cproblem.hh
deleted file mode 100644
index 707b788..0000000
--- a/dumux/decoupled/2p2c/2p2cproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPETPROBLEM_2P2C_HH_OLD
-#define DUMUX_IMPETPROBLEM_2P2C_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/problem.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/problem.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/2p2cproperties.hh b/dumux/decoupled/2p2c/2p2cproperties.hh
deleted file mode 100644
index e04d3f3..0000000
--- a/dumux/decoupled/2p2c/2p2cproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2CPROPERTIES_HH_OLD
-#define DUMUX_2P2CPROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/properties.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/CMakeLists.txt b/dumux/decoupled/2p2c/CMakeLists.txt
deleted file mode 100644
index b07b9f2..0000000
--- a/dumux/decoupled/2p2c/CMakeLists.txt
+++ /dev/null
@@ -1,24 +0,0 @@
-
-#install headers
-install(FILES
-2p2cadaptiveproperties.hh
-2p2cfluidstate.hh
-2p2cproblem.hh
-2p2cproperties.hh
-celldata2p2cadaptive.hh
-celldata2p2c.hh
-celldata2p2cmultiphysics.hh
-fluxdata2p2c.hh
-fv2dpressure2p2cadaptive.hh
-fv2dtransport2p2cadaptive.hh
-fv3dpressure2p2cadaptive.hh
-fv3dtransport2p2cadaptive.hh
-fvmpfal3d2p2cinteractionvolumecontaineradaptive.hh
-fvpressure2p2c.hh
-fvpressure2p2cmultiphysics.hh
-fvpressurecompositional.hh
-fvtransport2p2c.hh
-fvtransport2p2cmultiphysics.hh
-pseudo1p2cfluidstate.hh
-variableclass2p2cadaptive.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/2p2c)
diff --git a/dumux/decoupled/2p2c/celldata2p2c.hh b/dumux/decoupled/2p2c/celldata2p2c.hh
deleted file mode 100644
index 69499dc..0000000
--- a/dumux/decoupled/2p2c/celldata2p2c.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELEMENTDATA2P2C_HH_OLD
-#define DUMUX_ELEMENTDATA2P2C_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/celldata.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/celldata.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/celldata2p2cadaptive.hh b/dumux/decoupled/2p2c/celldata2p2cadaptive.hh
deleted file mode 100644
index 7061758..0000000
--- a/dumux/decoupled/2p2c/celldata2p2cadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELEMENTDATA2P2C_ADAPTIVE_HH_OLD
-#define DUMUX_ELEMENTDATA2P2C_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/celldataadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/celldataadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/celldata2p2cmultiphysics.hh b/dumux/decoupled/2p2c/celldata2p2cmultiphysics.hh
deleted file mode 100644
index 20dfa4c..0000000
--- a/dumux/decoupled/2p2c/celldata2p2cmultiphysics.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELEMENTDATA2P2C_MULTYPHYSICS_HH_OLD
-#define DUMUX_ELEMENTDATA2P2C_MULTYPHYSICS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/celldatamultiphysics.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/celldatamultiphysics.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fluxdata2p2c.hh b/dumux/decoupled/2p2c/fluxdata2p2c.hh
deleted file mode 100644
index cf91319..0000000
--- a/dumux/decoupled/2p2c/fluxdata2p2c.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FLUXDATA2P2C_HH_OLD
-#define DUMUX_FLUXDATA2P2C_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fluxdata.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fluxdata.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fv2dpressure2p2cadaptive.hh b/dumux/decoupled/2p2c/fv2dpressure2p2cadaptive.hh
deleted file mode 100644
index 41347ea..0000000
--- a/dumux/decoupled/2p2c/fv2dpressure2p2cadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV2DPRESSURE2P2C_ADAPTIVE_HH_OLD
-#define DUMUX_FV2DPRESSURE2P2C_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fv2dpressureadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fv2dpressureadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fv2dtransport2p2cadaptive.hh b/dumux/decoupled/2p2c/fv2dtransport2p2cadaptive.hh
deleted file mode 100644
index 2c4359c..0000000
--- a/dumux/decoupled/2p2c/fv2dtransport2p2cadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV2DTRANSPORT2P2C_ADAPTIVE_HH_OLD
-#define DUMUX_FV2DTRANSPORT2P2C_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fv2dtransportadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fv2dtransportadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fv3dpressure2p2cadaptive.hh b/dumux/decoupled/2p2c/fv3dpressure2p2cadaptive.hh
deleted file mode 100644
index 7fc0358..0000000
--- a/dumux/decoupled/2p2c/fv3dpressure2p2cadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV3DPRESSURE2P2C_ADAPTIVE_HH_OLD
-#define DUMUX_FV3DPRESSURE2P2C_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fv3dpressureadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fv3dpressureadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fv3dtransport2p2cadaptive.hh b/dumux/decoupled/2p2c/fv3dtransport2p2cadaptive.hh
deleted file mode 100644
index 4b8552e..0000000
--- a/dumux/decoupled/2p2c/fv3dtransport2p2cadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV3DTRANSPORT2P2C_ADAPTIVE_HH_OLD
-#define DUMUX_FV3DTRANSPORT2P2C_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fv3dtransportadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fv3dtransportadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fvmpfal3d2p2cinteractionvolumecontaineradaptive.hh b/dumux/decoupled/2p2c/fvmpfal3d2p2cinteractionvolumecontaineradaptive.hh
deleted file mode 100644
index e4b678f..0000000
--- a/dumux/decoupled/2p2c/fvmpfal3d2p2cinteractionvolumecontaineradaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3D_2P2CINTERACTIONVOLUMECONTAINER_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL3D_2P2CINTERACTIONVOLUMECONTAINER_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fvmpfal3dinteractionvolumecontaineradaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fvmpfal3dinteractionvolumecontaineradaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fvpressure2p2c.hh b/dumux/decoupled/2p2c/fvpressure2p2c.hh
deleted file mode 100644
index e34d041..0000000
--- a/dumux/decoupled/2p2c/fvpressure2p2c.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURE2P2C_HH_OLD
-#define DUMUX_FVPRESSURE2P2C_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fvpressure.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fvpressure.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fvpressure2p2cmultiphysics.hh b/dumux/decoupled/2p2c/fvpressure2p2cmultiphysics.hh
deleted file mode 100644
index 13994b8..0000000
--- a/dumux/decoupled/2p2c/fvpressure2p2cmultiphysics.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURE2P2C_MULTIPHYSICS_HH_OLD
-#define DUMUX_FVPRESSURE2P2C_MULTIPHYSICS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fvpressuremultiphysics.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fvpressuremultiphysics.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fvpressurecompositional.hh b/dumux/decoupled/2p2c/fvpressurecompositional.hh
deleted file mode 100644
index d4deb21..0000000
--- a/dumux/decoupled/2p2c/fvpressurecompositional.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURECOMPOSITIONAL_HH_OLD
-#define DUMUX_FVPRESSURECOMPOSITIONAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fvpressurecompositional.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fvpressurecompositional.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fvtransport2p2c.hh b/dumux/decoupled/2p2c/fvtransport2p2c.hh
deleted file mode 100644
index 7c782ef..0000000
--- a/dumux/decoupled/2p2c/fvtransport2p2c.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVTRANSPORT2P2C_HH_OLD
-#define DUMUX_FVTRANSPORT2P2C_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fvtransport.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fvtransport.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/fvtransport2p2cmultiphysics.hh b/dumux/decoupled/2p2c/fvtransport2p2cmultiphysics.hh
deleted file mode 100644
index 9fc5c91..0000000
--- a/dumux/decoupled/2p2c/fvtransport2p2cmultiphysics.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVTRANSPORT2P2C_MULTIPHYSICS_HH_OLD
-#define DUMUX_FVTRANSPORT2P2C_MULTIPHYSICS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/fvtransportmultiphysics.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/fvtransportmultiphysics.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/pseudo1p2cfluidstate.hh b/dumux/decoupled/2p2c/pseudo1p2cfluidstate.hh
deleted file mode 100644
index 3b81225..0000000
--- a/dumux/decoupled/2p2c/pseudo1p2cfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_PSEUDO1P2C_FLUID_STATE_HH_OLD
-#warning "dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh is deprecated, use dumux/material/fluidstates/pseudo1p2c.hh instead."_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh>
-
-#endif
diff --git a/dumux/decoupled/2p2c/variableclass2p2cadaptive.hh b/dumux/decoupled/2p2c/variableclass2p2cadaptive.hh
deleted file mode 100644
index b40646b..0000000
--- a/dumux/decoupled/2p2c/variableclass2p2cadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_VARIABLECLASS2P2C_ADAPTIVE_HH_OLD
-#define DUMUX_VARIABLECLASS2P2C_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/sequential/variableclassadaptive.hh instead
-
-#include <dumux/porousmediumflow/2p2c/sequential/variableclassadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/CMakeLists.txt b/dumux/decoupled/CMakeLists.txt
deleted file mode 100644
index daf5d2b..0000000
--- a/dumux/decoupled/CMakeLists.txt
+++ /dev/null
@@ -1,4 +0,0 @@
-add_subdirectory("1p")
-add_subdirectory("2p")
-add_subdirectory("2p2c")
-add_subdirectory("common")
diff --git a/dumux/decoupled/common/CMakeLists.txt b/dumux/decoupled/common/CMakeLists.txt
deleted file mode 100644
index 017b4ab..0000000
--- a/dumux/decoupled/common/CMakeLists.txt
+++ /dev/null
@@ -1,19 +0,0 @@
-add_subdirectory("fv")
-add_subdirectory("mimetic")
-
-#install headers
-install(FILES
-decoupledproperties.hh
-gridadapt.hh
-gridadaptinitializationindicatordefault.hh
-gridadaptinitializationindicator.hh
-gridadaptproperties.hh
-impet.hh
-impetproblem.hh
-impetproperties.hh
-onemodelproblem.hh
-pressureproperties.hh
-transportproperties.hh
-variableclassadaptive.hh
-variableclass.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/common)
diff --git a/dumux/decoupled/common/decoupledproperties.hh b/dumux/decoupled/common/decoupledproperties.hh
deleted file mode 100644
index b5a8bdd..0000000
--- a/dumux/decoupled/common/decoupledproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_DECOUPLED_PROPERTIES_HH_OLD
-#define DUMUX_DECOUPLED_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/properties.hh instead
-
-#include <dumux/porousmediumflow/sequential/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/CMakeLists.txt b/dumux/decoupled/common/fv/CMakeLists.txt
deleted file mode 100644
index 7ee82dc..0000000
--- a/dumux/decoupled/common/fv/CMakeLists.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-add_subdirectory("mpfa")
-
-#install headers
-install(FILES
-fvpressure.hh
-fvtransport.hh
-fvvelocitydefault.hh
-fvvelocity.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/common/fv)
diff --git a/dumux/decoupled/common/fv/fvpressure.hh b/dumux/decoupled/common/fv/fvpressure.hh
deleted file mode 100644
index 42c1eae..0000000
--- a/dumux/decoupled/common/fv/fvpressure.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVPRESSURE_HH_OLD
-#define DUMUX_FVPRESSURE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/pressure.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/pressure.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/fvtransport.hh b/dumux/decoupled/common/fv/fvtransport.hh
deleted file mode 100644
index 947a877..0000000
--- a/dumux/decoupled/common/fv/fvtransport.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVTRANSPORT_HH_OLD
-#define DUMUX_FVTRANSPORT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/transport.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/transport.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/fvvelocity.hh b/dumux/decoupled/common/fv/fvvelocity.hh
deleted file mode 100644
index 06cd7b6..0000000
--- a/dumux/decoupled/common/fv/fvvelocity.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVVELOCITY_HH_OLD
-#define DUMUX_FVVELOCITY_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/velocity.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/velocity.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/fvvelocitydefault.hh b/dumux/decoupled/common/fv/fvvelocitydefault.hh
deleted file mode 100644
index 1221b2f..0000000
--- a/dumux/decoupled/common/fv/fvvelocitydefault.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_VELOCITYDEFAULT_HH_OLD
-#define DUMUX_VELOCITYDEFAULT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/velocitydefault.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/velocitydefault.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/mpfa/CMakeLists.txt b/dumux/decoupled/common/fv/mpfa/CMakeLists.txt
deleted file mode 100644
index c87f75b..0000000
--- a/dumux/decoupled/common/fv/mpfa/CMakeLists.txt
+++ /dev/null
@@ -1,10 +0,0 @@
-
-#install headers
-install(FILES
-fvmpfaproperties.hh
-fvmpfavelocityintransport.hh
-mpfalinteractionvolume3dadaptive.hh
-mpfalinteractionvolume3d.hh
-mpfalinteractionvolume.hh
-mpfaointeractionvolume.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/common/fv/mpfa)
diff --git a/dumux/decoupled/common/fv/mpfa/fvmpfaproperties.hh b/dumux/decoupled/common/fv/mpfa/fvmpfaproperties.hh
deleted file mode 100644
index fccda66..0000000
--- a/dumux/decoupled/common/fv/mpfa/fvmpfaproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAPROPERTIES_HH_OLD
-#define DUMUX_FVMPFAPROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/mpfa/properties.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/mpfa/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/mpfa/fvmpfavelocityintransport.hh b/dumux/decoupled/common/fv/mpfa/fvmpfavelocityintransport.hh
deleted file mode 100644
index 2fa0ed5..0000000
--- a/dumux/decoupled/common/fv/mpfa/fvmpfavelocityintransport.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAVELOCITYINTRANSPORT_HH_OLD
-#define DUMUX_FVMPFAVELOCITYINTRANSPORT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/mpfa/velocityintransport.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/mpfa/velocityintransport.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume.hh b/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume.hh
deleted file mode 100644
index 7003c9b..0000000
--- a/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFALINTERACTIONVOLUME_HH_OLD
-#define DUMUX_FVMPFALINTERACTIONVOLUME_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/mpfa/linteractionvolume.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/mpfa/linteractionvolume.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume3d.hh b/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume3d.hh
deleted file mode 100644
index 272bed1..0000000
--- a/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume3d.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3DINTERACTIONVOLUME_HH_OLD
-#define DUMUX_FVMPFAL3DINTERACTIONVOLUME_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/mpfa/linteractionvolume3d.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/mpfa/linteractionvolume3d.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume3dadaptive.hh b/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume3dadaptive.hh
deleted file mode 100644
index c5bfbc5..0000000
--- a/dumux/decoupled/common/fv/mpfa/mpfalinteractionvolume3dadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAL3DINTERACTIONVOLUME_ADAPTIVE_HH_OLD
-#define DUMUX_FVMPFAL3DINTERACTIONVOLUME_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/mpfa/linteractionvolume3dadaptive.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/mpfa/linteractionvolume3dadaptive.hh>
-
-#endif
diff --git a/dumux/decoupled/common/fv/mpfa/mpfaointeractionvolume.hh b/dumux/decoupled/common/fv/mpfa/mpfaointeractionvolume.hh
deleted file mode 100644
index e90a701..0000000
--- a/dumux/decoupled/common/fv/mpfa/mpfaointeractionvolume.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FVMPFAOINTERACTIONVOLUME_HH_OLD
-#define DUMUX_FVMPFAOINTERACTIONVOLUME_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/cellcentered/mpfa/ointeractionvolume.hh instead
-
-#include <dumux/porousmediumflow/sequential/cellcentered/mpfa/ointeractionvolume.hh>
-
-#endif
diff --git a/dumux/decoupled/common/gridadapt.hh b/dumux/decoupled/common/gridadapt.hh
deleted file mode 100644
index d7df2a1..0000000
--- a/dumux/decoupled/common/gridadapt.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPT_HH_OLD
-#define DUMUX_GRIDADAPT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/gridadapt.hh instead
-
-#include <dumux/porousmediumflow/sequential/gridadapt.hh>
-
-#endif
diff --git a/dumux/decoupled/common/gridadaptinitializationindicator.hh b/dumux/decoupled/common/gridadaptinitializationindicator.hh
deleted file mode 100644
index 9cc606e..0000000
--- a/dumux/decoupled/common/gridadaptinitializationindicator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPTINITIALIZATIONINDICATOR_HH_OLD
-#define DUMUX_GRIDADAPTINITIALIZATIONINDICATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/gridadaptinitializationindicator.hh instead
-
-#include <dumux/porousmediumflow/sequential/gridadaptinitializationindicator.hh>
-
-#endif
diff --git a/dumux/decoupled/common/gridadaptinitializationindicatordefault.hh b/dumux/decoupled/common/gridadaptinitializationindicatordefault.hh
deleted file mode 100644
index a895de8..0000000
--- a/dumux/decoupled/common/gridadaptinitializationindicatordefault.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPTINITIALIZATIONINDICATORDEFAULT_HH_OLD
-#define DUMUX_GRIDADAPTINITIALIZATIONINDICATORDEFAULT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/gridadaptinitializationindicatordefault.hh instead
-
-#include <dumux/porousmediumflow/sequential/gridadaptinitializationindicatordefault.hh>
-
-#endif
diff --git a/dumux/decoupled/common/gridadaptproperties.hh b/dumux/decoupled/common/gridadaptproperties.hh
deleted file mode 100644
index e7c5a7c..0000000
--- a/dumux/decoupled/common/gridadaptproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GRIDADAPT_PROPERTIES_HH_OLD
-#define DUMUX_GRIDADAPT_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/gridadaptproperties.hh instead
-
-#include <dumux/porousmediumflow/sequential/gridadaptproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/impet.hh b/dumux/decoupled/common/impet.hh
deleted file mode 100644
index 7f0c6f5..0000000
--- a/dumux/decoupled/common/impet.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPET_HH_OLD
-#define DUMUX_IMPET_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/impet.hh instead
-
-#include <dumux/porousmediumflow/sequential/impet.hh>
-
-#endif
diff --git a/dumux/decoupled/common/impetproblem.hh b/dumux/decoupled/common/impetproblem.hh
deleted file mode 100644
index 94b9f69..0000000
--- a/dumux/decoupled/common/impetproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPETPROBLEM_HH_OLD
-#define DUMUX_IMPETPROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/impetproblem.hh instead
-
-#include <dumux/porousmediumflow/sequential/impetproblem.hh>
-
-#endif
diff --git a/dumux/decoupled/common/impetproperties.hh b/dumux/decoupled/common/impetproperties.hh
deleted file mode 100644
index 0924ef4..0000000
--- a/dumux/decoupled/common/impetproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPET_PROPERTIES_HH_OLD
-#define DUMUX_IMPET_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/impetproperties.hh instead
-
-#include <dumux/porousmediumflow/sequential/impetproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/mimetic/CMakeLists.txt b/dumux/decoupled/common/mimetic/CMakeLists.txt
deleted file mode 100644
index 27554b0..0000000
--- a/dumux/decoupled/common/mimetic/CMakeLists.txt
+++ /dev/null
@@ -1,5 +0,0 @@
-
-#install headers
-install(FILES
-mimeticproperties.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/decoupled/common/mimetic)
diff --git a/dumux/decoupled/common/mimetic/mimeticproperties.hh b/dumux/decoupled/common/mimetic/mimeticproperties.hh
deleted file mode 100644
index 6587df6..0000000
--- a/dumux/decoupled/common/mimetic/mimeticproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MIMETICPROPERTIES_DECOUPLED_HH_OLD
-#define DUMUX_MIMETICPROPERTIES_DECOUPLED_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/mimetic/properties.hh instead
-
-#include <dumux/porousmediumflow/sequential/mimetic/properties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/onemodelproblem.hh b/dumux/decoupled/common/onemodelproblem.hh
deleted file mode 100644
index 51905ae..0000000
--- a/dumux/decoupled/common/onemodelproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ONE_MODEL_PROBLEM_HH_OLD
-#define DUMUX_ONE_MODEL_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/onemodelproblem.hh instead
-
-#include <dumux/porousmediumflow/sequential/onemodelproblem.hh>
-
-#endif
diff --git a/dumux/decoupled/common/pressureproperties.hh b/dumux/decoupled/common/pressureproperties.hh
deleted file mode 100644
index 67045a5..0000000
--- a/dumux/decoupled/common/pressureproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_PRESSURE_PROPERTIES_HH_OLD
-#define DUMUX_PRESSURE_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/pressureproperties.hh instead
-
-#include <dumux/porousmediumflow/sequential/pressureproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/transportproperties.hh b/dumux/decoupled/common/transportproperties.hh
deleted file mode 100644
index 73bd030..0000000
--- a/dumux/decoupled/common/transportproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TRANSPORT_PROPERTIES_HH_OLD
-#define DUMUX_TRANSPORT_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/transportproperties.hh instead
-
-#include <dumux/porousmediumflow/sequential/transportproperties.hh>
-
-#endif
diff --git a/dumux/decoupled/common/variableclass.hh b/dumux/decoupled/common/variableclass.hh
deleted file mode 100644
index 5c2e1b0..0000000
--- a/dumux/decoupled/common/variableclass.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_VARIABLECLASS_HH_OLD
-#define DUMUX_VARIABLECLASS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/variableclass.hh instead
-
-#include <dumux/porousmediumflow/sequential/variableclass.hh>
-
-#endif
diff --git a/dumux/decoupled/common/variableclassadaptive.hh b/dumux/decoupled/common/variableclassadaptive.hh
deleted file mode 100644
index 5daa40d..0000000
--- a/dumux/decoupled/common/variableclassadaptive.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_VARIABLECLASS_ADAPTIVE_HH_OLD
-#define DUMUX_VARIABLECLASS_ADAPTIVE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/sequential/variableclassadaptive.hh instead
-
-#include <dumux/porousmediumflow/sequential/variableclassadaptive.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/CMakeLists.txt b/dumux/freeflow/stokes/CMakeLists.txt
index 99e79cd..2145537 100644
--- a/dumux/freeflow/stokes/CMakeLists.txt
+++ b/dumux/freeflow/stokes/CMakeLists.txt
@@ -1,16 +1,6 @@
 
 #install headers
 install(FILES
-stokesfluxvariables.hh
-stokesindices.hh
-stokeslocaljacobian.hh
-stokeslocalresidual.hh
-stokesmodel.hh
-stokesnewtoncontroller.hh
-stokesproblem.hh
-stokesproperties.hh
-stokespropertydefaults.hh
-stokesvolumevariables.hh
 fluxvariables.hh
 indices.hh
 localjacobian.hh
diff --git a/dumux/freeflow/stokes/stokesfluxvariables.hh b/dumux/freeflow/stokes/stokesfluxvariables.hh
deleted file mode 100644
index 911ca10..0000000
--- a/dumux/freeflow/stokes/stokesfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_FLUX_VARIABLES_HH_OLD
-#define DUMUX_STOKES_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/fluxvariables.hh instead
-
-#include <dumux/freeflow/stokes/fluxvariables.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokesindices.hh b/dumux/freeflow/stokes/stokesindices.hh
deleted file mode 100644
index 0f66821..0000000
--- a/dumux/freeflow/stokes/stokesindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_INDICES_HH_OLD
-#define DUMUX_STOKES_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/indices.hh instead
-
-#include <dumux/freeflow/stokes/indices.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokeslocaljacobian.hh b/dumux/freeflow/stokes/stokeslocaljacobian.hh
deleted file mode 100644
index 29fd616..0000000
--- a/dumux/freeflow/stokes/stokeslocaljacobian.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_LOCAL_JACOBIAN_HH_OLD
-#define DUMUX_STOKES_LOCAL_JACOBIAN_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/localjacobian.hh instead
-
-#include <dumux/freeflow/stokes/localjacobian.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokeslocalresidual.hh b/dumux/freeflow/stokes/stokeslocalresidual.hh
deleted file mode 100644
index 83241d6..0000000
--- a/dumux/freeflow/stokes/stokeslocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_LOCAL_RESIDUAL_BASE_HH_OLD
-#define DUMUX_STOKES_LOCAL_RESIDUAL_BASE_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/localresidual.hh instead
-
-#include <dumux/freeflow/stokes/localresidual.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokesmodel.hh b/dumux/freeflow/stokes/stokesmodel.hh
deleted file mode 100644
index cea3289..0000000
--- a/dumux/freeflow/stokes/stokesmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_MODEL_HH_OLD
-#define DUMUX_STOKES_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/model.hh instead
-
-#include <dumux/freeflow/stokes/model.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokesnewtoncontroller.hh b/dumux/freeflow/stokes/stokesnewtoncontroller.hh
deleted file mode 100644
index dfd34f4..0000000
--- a/dumux/freeflow/stokes/stokesnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_STOKES_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/newtoncontroller.hh instead
-
-#include <dumux/freeflow/stokes/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokesproblem.hh b/dumux/freeflow/stokes/stokesproblem.hh
deleted file mode 100644
index a0aab07..0000000
--- a/dumux/freeflow/stokes/stokesproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_PROBLEM_HH_OLD
-#define DUMUX_STOKES_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/problem.hh instead
-
-#include <dumux/freeflow/stokes/problem.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokesproperties.hh b/dumux/freeflow/stokes/stokesproperties.hh
deleted file mode 100644
index b72c13f..0000000
--- a/dumux/freeflow/stokes/stokesproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESPROPERTIES_HH_OLD
-#define DUMUX_STOKESPROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/properties.hh instead
-
-#include <dumux/freeflow/stokes/properties.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokespropertydefaults.hh b/dumux/freeflow/stokes/stokespropertydefaults.hh
deleted file mode 100644
index 0ec5813..0000000
--- a/dumux/freeflow/stokes/stokespropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_STOKES_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/propertydefaults.hh instead
-
-#include <dumux/freeflow/stokes/propertydefaults.hh>
-
-#endif
diff --git a/dumux/freeflow/stokes/stokesvolumevariables.hh b/dumux/freeflow/stokes/stokesvolumevariables.hh
deleted file mode 100644
index 8e03da9..0000000
--- a/dumux/freeflow/stokes/stokesvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKES_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_STOKES_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokes/volumevariables.hh instead
-
-#include <dumux/freeflow/stokes/volumevariables.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/CMakeLists.txt b/dumux/freeflow/stokesnc/CMakeLists.txt
index 7f9e9ab..6224786 100644
--- a/dumux/freeflow/stokesnc/CMakeLists.txt
+++ b/dumux/freeflow/stokesnc/CMakeLists.txt
@@ -1,13 +1,6 @@
 
 #install headers
 install(FILES
-stokesncfluxvariables.hh
-stokesncindices.hh
-stokesnclocalresidual.hh
-stokesncmodel.hh
-stokesncproperties.hh
-stokesncpropertydefaults.hh
-stokesncvolumevariables.hh
 fluxvariables.hh
 indices.hh
 localresidual.hh
diff --git a/dumux/freeflow/stokesnc/stokesncfluxvariables.hh b/dumux/freeflow/stokesnc/stokesncfluxvariables.hh
deleted file mode 100644
index c524f0d..0000000
--- a/dumux/freeflow/stokesnc/stokesncfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_FLUX_VARIABLES_HH_OLD
-#define DUMUX_STOKESNC_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/fluxvariables.hh instead
-
-#include <dumux/freeflow/stokesnc/fluxvariables.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/stokesncindices.hh b/dumux/freeflow/stokesnc/stokesncindices.hh
deleted file mode 100644
index 0c24b32..0000000
--- a/dumux/freeflow/stokesnc/stokesncindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_INDICES_HH_OLD
-#define DUMUX_STOKESNC_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/indices.hh instead
-
-#include <dumux/freeflow/stokesnc/indices.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/stokesnclocalresidual.hh b/dumux/freeflow/stokesnc/stokesnclocalresidual.hh
deleted file mode 100644
index 96af18b..0000000
--- a/dumux/freeflow/stokesnc/stokesnclocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_STOKESNC_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/localresidual.hh instead
-
-#include <dumux/freeflow/stokesnc/localresidual.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/stokesncmodel.hh b/dumux/freeflow/stokesnc/stokesncmodel.hh
deleted file mode 100644
index bf191d5..0000000
--- a/dumux/freeflow/stokesnc/stokesncmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_MODEL_HH_OLD
-#define DUMUX_STOKESNC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/model.hh instead
-
-#include <dumux/freeflow/stokesnc/model.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/stokesncproperties.hh b/dumux/freeflow/stokesnc/stokesncproperties.hh
deleted file mode 100644
index 8f3ed1e..0000000
--- a/dumux/freeflow/stokesnc/stokesncproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_PROPERTIES_HH_OLD
-#define DUMUX_STOKESNC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/properties.hh instead
-
-#include <dumux/freeflow/stokesnc/properties.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/stokesncpropertydefaults.hh b/dumux/freeflow/stokesnc/stokesncpropertydefaults.hh
deleted file mode 100644
index 5523de8..0000000
--- a/dumux/freeflow/stokesnc/stokesncpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_STOKESNC_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/propertydefaults.hh instead
-
-#include <dumux/freeflow/stokesnc/propertydefaults.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesnc/stokesncvolumevariables.hh b/dumux/freeflow/stokesnc/stokesncvolumevariables.hh
deleted file mode 100644
index 8b6b578..0000000
--- a/dumux/freeflow/stokesnc/stokesncvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNC_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_STOKESNC_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesnc/volumevariables.hh instead
-
-#include <dumux/freeflow/stokesnc/volumevariables.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/CMakeLists.txt b/dumux/freeflow/stokesncni/CMakeLists.txt
index 3741216..25fe5ca 100644
--- a/dumux/freeflow/stokesncni/CMakeLists.txt
+++ b/dumux/freeflow/stokesncni/CMakeLists.txt
@@ -1,13 +1,6 @@
 
 #install headers
 install(FILES
-stokesncnifluxvariables.hh
-stokesncniindices.hh
-stokesncnilocalresidual.hh
-stokesncnimodel.hh
-stokesncniproperties.hh
-stokesncnipropertydefaults.hh
-stokesncnivolumevariables.hh
 fluxvariables.hh
 indices.hh
 localresidual.hh
diff --git a/dumux/freeflow/stokesncni/stokesncnifluxvariables.hh b/dumux/freeflow/stokesncni/stokesncnifluxvariables.hh
deleted file mode 100644
index bd99450..0000000
--- a/dumux/freeflow/stokesncni/stokesncnifluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_FLUX_VARIABLES_HH_OLD
-#define DUMUX_STOKESNCNI_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/fluxvariables.hh instead
-
-#include <dumux/freeflow/stokesncni/fluxvariables.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/stokesncniindices.hh b/dumux/freeflow/stokesncni/stokesncniindices.hh
deleted file mode 100644
index e527eb2..0000000
--- a/dumux/freeflow/stokesncni/stokesncniindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_INDICES_HH_OLD
-#define DUMUX_STOKESNCNI_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/indices.hh instead
-
-#include <dumux/freeflow/stokesncni/indices.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/stokesncnilocalresidual.hh b/dumux/freeflow/stokesncni/stokesncnilocalresidual.hh
deleted file mode 100644
index e91d0e3..0000000
--- a/dumux/freeflow/stokesncni/stokesncnilocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_STOKESNCNI_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/localresidual.hh instead
-
-#include <dumux/freeflow/stokesncni/localresidual.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/stokesncnimodel.hh b/dumux/freeflow/stokesncni/stokesncnimodel.hh
deleted file mode 100644
index 0f2d54e..0000000
--- a/dumux/freeflow/stokesncni/stokesncnimodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_MODEL_HH_OLD
-#define DUMUX_STOKESNCNI_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/model.hh instead
-
-#include <dumux/freeflow/stokesncni/model.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/stokesncniproperties.hh b/dumux/freeflow/stokesncni/stokesncniproperties.hh
deleted file mode 100644
index 6a20ea4..0000000
--- a/dumux/freeflow/stokesncni/stokesncniproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_PROPERTIES_HH_OLD
-#define DUMUX_STOKESNCNI_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/properties.hh instead
-
-#include <dumux/freeflow/stokesncni/properties.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/stokesncnipropertydefaults.hh b/dumux/freeflow/stokesncni/stokesncnipropertydefaults.hh
deleted file mode 100644
index d2add95..0000000
--- a/dumux/freeflow/stokesncni/stokesncnipropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_STOKESNCNI_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/propertydefaults.hh instead
-
-#include <dumux/freeflow/stokesncni/propertydefaults.hh>
-
-#endif
diff --git a/dumux/freeflow/stokesncni/stokesncnivolumevariables.hh b/dumux/freeflow/stokesncni/stokesncnivolumevariables.hh
deleted file mode 100644
index fbe0188..0000000
--- a/dumux/freeflow/stokesncni/stokesncnivolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_STOKESNCNI_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/stokesncni/volumevariables.hh instead
-
-#include <dumux/freeflow/stokesncni/volumevariables.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeq/CMakeLists.txt b/dumux/freeflow/zeroeq/CMakeLists.txt
index cb4ec38..ec40c05 100644
--- a/dumux/freeflow/zeroeq/CMakeLists.txt
+++ b/dumux/freeflow/zeroeq/CMakeLists.txt
@@ -1,12 +1,6 @@
 
 #install headers
 install(FILES
-zeroeqfluxvariables.hh
-zeroeqindices.hh
-zeroeqmodel.hh
-zeroeqproblem.hh
-zeroeqproperties.hh
-zeroeqpropertydefaults.hh
 fluxvariables.hh
 indices.hh
 model.hh
diff --git a/dumux/freeflow/zeroeq/zeroeqfluxvariables.hh b/dumux/freeflow/zeroeq/zeroeqfluxvariables.hh
deleted file mode 100644
index dac3755..0000000
--- a/dumux/freeflow/zeroeq/zeroeqfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQ_FLUX_VARIABLES_HH_OLD
-#define DUMUX_ZEROEQ_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeq/fluxvariables.hh instead
-
-#include <dumux/freeflow/zeroeq/fluxvariables.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeq/zeroeqindices.hh b/dumux/freeflow/zeroeq/zeroeqindices.hh
deleted file mode 100644
index f693758..0000000
--- a/dumux/freeflow/zeroeq/zeroeqindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQ_INDICES_HH_OLD
-#define DUMUX_ZEROEQ_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeq/indices.hh instead
-
-#include <dumux/freeflow/zeroeq/indices.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeq/zeroeqmodel.hh b/dumux/freeflow/zeroeq/zeroeqmodel.hh
deleted file mode 100644
index d3fe0da..0000000
--- a/dumux/freeflow/zeroeq/zeroeqmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQ_MODEL_HH_OLD
-#define DUMUX_ZEROEQ_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeq/model.hh instead
-
-#include <dumux/freeflow/zeroeq/model.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeq/zeroeqproblem.hh b/dumux/freeflow/zeroeq/zeroeqproblem.hh
deleted file mode 100644
index 2807e59..0000000
--- a/dumux/freeflow/zeroeq/zeroeqproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQ_PROBLEM_HH_OLD
-#define DUMUX_ZEROEQ_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeq/problem.hh instead
-
-#include <dumux/freeflow/zeroeq/problem.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeq/zeroeqproperties.hh b/dumux/freeflow/zeroeq/zeroeqproperties.hh
deleted file mode 100644
index d3d2d8d..0000000
--- a/dumux/freeflow/zeroeq/zeroeqproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQ_PROPERTIES_HH_OLD
-#define DUMUX_ZEROEQ_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeq/properties.hh instead
-
-#include <dumux/freeflow/zeroeq/properties.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeq/zeroeqpropertydefaults.hh b/dumux/freeflow/zeroeq/zeroeqpropertydefaults.hh
deleted file mode 100644
index 3d4daaf..0000000
--- a/dumux/freeflow/zeroeq/zeroeqpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQ_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_ZEROEQ_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeq/propertydefaults.hh instead
-
-#include <dumux/freeflow/zeroeq/propertydefaults.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqnc/CMakeLists.txt b/dumux/freeflow/zeroeqnc/CMakeLists.txt
index 9d63c29..9204038 100644
--- a/dumux/freeflow/zeroeqnc/CMakeLists.txt
+++ b/dumux/freeflow/zeroeqnc/CMakeLists.txt
@@ -1,11 +1,6 @@
 
 #install headers
 install(FILES
-zeroeqncfluxvariables.hh
-zeroeqncindices.hh
-zeroeqncmodel.hh
-zeroeqncproperties.hh
-zeroeqncpropertydefaults.hh
 fluxvariables.hh
 indices.hh
 model.hh
diff --git a/dumux/freeflow/zeroeqnc/zeroeqncfluxvariables.hh b/dumux/freeflow/zeroeqnc/zeroeqncfluxvariables.hh
deleted file mode 100644
index 1ddd1dd..0000000
--- a/dumux/freeflow/zeroeqnc/zeroeqncfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNC_FLUX_VARIABLES_HH_OLD
-#define DUMUX_ZEROEQNC_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqnc/fluxvariables.hh instead
-
-#include <dumux/freeflow/zeroeqnc/fluxvariables.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqnc/zeroeqncindices.hh b/dumux/freeflow/zeroeqnc/zeroeqncindices.hh
deleted file mode 100644
index 455330b..0000000
--- a/dumux/freeflow/zeroeqnc/zeroeqncindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNC_INDICES_HH_OLD
-#define DUMUX_ZEROEQNC_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqnc/indices.hh instead
-
-#include <dumux/freeflow/zeroeqnc/indices.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqnc/zeroeqncmodel.hh b/dumux/freeflow/zeroeqnc/zeroeqncmodel.hh
deleted file mode 100644
index ad69498..0000000
--- a/dumux/freeflow/zeroeqnc/zeroeqncmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNC_MODEL_HH_OLD
-#define DUMUX_ZEROEQNC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqnc/model.hh instead
-
-#include <dumux/freeflow/zeroeqnc/model.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqnc/zeroeqncproperties.hh b/dumux/freeflow/zeroeqnc/zeroeqncproperties.hh
deleted file mode 100644
index 8a9c3ae..0000000
--- a/dumux/freeflow/zeroeqnc/zeroeqncproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNC_PROPERTIES_HH_OLD
-#define DUMUX_ZEROEQNC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqnc/properties.hh instead
-
-#include <dumux/freeflow/zeroeqnc/properties.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqnc/zeroeqncpropertydefaults.hh b/dumux/freeflow/zeroeqnc/zeroeqncpropertydefaults.hh
deleted file mode 100644
index 84843cb..0000000
--- a/dumux/freeflow/zeroeqnc/zeroeqncpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNC_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_ZEROEQNC_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqnc/propertydefaults.hh instead
-
-#include <dumux/freeflow/zeroeqnc/propertydefaults.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqncni/CMakeLists.txt b/dumux/freeflow/zeroeqncni/CMakeLists.txt
index 8bdfc1e..b853f50 100644
--- a/dumux/freeflow/zeroeqncni/CMakeLists.txt
+++ b/dumux/freeflow/zeroeqncni/CMakeLists.txt
@@ -1,11 +1,6 @@
 
 #install headers
 install(FILES
-zeroeqncnifluxvariables.hh
-zeroeqncniindices.hh
-zeroeqncnimodel.hh
-zeroeqncniproperties.hh
-zeroeqncnipropertydefaults.hh
 fluxvariables.hh
 indices.hh
 model.hh
diff --git a/dumux/freeflow/zeroeqncni/zeroeqncnifluxvariables.hh b/dumux/freeflow/zeroeqncni/zeroeqncnifluxvariables.hh
deleted file mode 100644
index 4c80a8c..0000000
--- a/dumux/freeflow/zeroeqncni/zeroeqncnifluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNCNI_FLUX_VARIABLES_HH_OLD
-#define DUMUX_ZEROEQNCNI_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqncni/fluxvariables.hh instead
-
-#include <dumux/freeflow/zeroeqncni/fluxvariables.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqncni/zeroeqncniindices.hh b/dumux/freeflow/zeroeqncni/zeroeqncniindices.hh
deleted file mode 100644
index af1150d..0000000
--- a/dumux/freeflow/zeroeqncni/zeroeqncniindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNCNI_INDICES_HH_OLD
-#define DUMUX_ZEROEQNCNI_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqncni/indices.hh instead
-
-#include <dumux/freeflow/zeroeqncni/indices.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqncni/zeroeqncnimodel.hh b/dumux/freeflow/zeroeqncni/zeroeqncnimodel.hh
deleted file mode 100644
index fd0f40f..0000000
--- a/dumux/freeflow/zeroeqncni/zeroeqncnimodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNCNI_MODEL_HH_OLD
-#define DUMUX_ZEROEQNCNI_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqncni/model.hh instead
-
-#include <dumux/freeflow/zeroeqncni/model.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqncni/zeroeqncniproperties.hh b/dumux/freeflow/zeroeqncni/zeroeqncniproperties.hh
deleted file mode 100644
index f2bbf3e..0000000
--- a/dumux/freeflow/zeroeqncni/zeroeqncniproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNCNI_PROPERTIES_HH_OLD
-#define DUMUX_ZEROEQNCNI_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqncni/properties.hh instead
-
-#include <dumux/freeflow/zeroeqncni/properties.hh>
-
-#endif
diff --git a/dumux/freeflow/zeroeqncni/zeroeqncnipropertydefaults.hh b/dumux/freeflow/zeroeqncni/zeroeqncnipropertydefaults.hh
deleted file mode 100644
index 4545ca6..0000000
--- a/dumux/freeflow/zeroeqncni/zeroeqncnipropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ZEROEQNCNI_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_ZEROEQNCNI_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/freeflow/zeroeqncni/propertydefaults.hh instead
-
-#include <dumux/freeflow/zeroeqncni/propertydefaults.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/CMakeLists.txt b/dumux/geomechanics/el1p2c/CMakeLists.txt
index d6d37d0..b1d385c 100644
--- a/dumux/geomechanics/el1p2c/CMakeLists.txt
+++ b/dumux/geomechanics/el1p2c/CMakeLists.txt
@@ -1,15 +1,6 @@
 
 #install headers
 install(FILES
-el1p2celementvolumevariables.hh
-el1p2cfluxvariables.hh
-el1p2cindices.hh
-el1p2clocaljacobian.hh
-el1p2clocalresidual.hh
-el1p2cmodel.hh
-el1p2cproperties.hh
-el1p2cpropertydefaults.hh
-el1p2cvolumevariables.hh
 elementvolumevariables.hh
 fluxvariables.hh
 indices.hh
diff --git a/dumux/geomechanics/el1p2c/el1p2celementvolumevariables.hh b/dumux/geomechanics/el1p2c/el1p2celementvolumevariables.hh
deleted file mode 100644
index aa9f9ce..0000000
--- a/dumux/geomechanics/el1p2c/el1p2celementvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_EL1P2C_ELEMENT_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_BOX_EL1P2C_ELEMENT_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/elementvolumevariables.hh instead
-
-#include <dumux/geomechanics/el1p2c/elementvolumevariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2cfluxvariables.hh b/dumux/geomechanics/el1p2c/el1p2cfluxvariables.hh
deleted file mode 100644
index 6ed0987..0000000
--- a/dumux/geomechanics/el1p2c/el1p2cfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_FLUX_VARIABLES_HH_OLD
-#define DUMUX_ELASTIC1P2C_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/fluxvariables.hh instead
-
-#include <dumux/geomechanics/el1p2c/fluxvariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2cindices.hh b/dumux/geomechanics/el1p2c/el1p2cindices.hh
deleted file mode 100644
index aad2de0..0000000
--- a/dumux/geomechanics/el1p2c/el1p2cindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_INDICES_HH_OLD
-#define DUMUX_ELASTIC1P2C_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/indices.hh instead
-
-#include <dumux/geomechanics/el1p2c/indices.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2clocaljacobian.hh b/dumux/geomechanics/el1p2c/el1p2clocaljacobian.hh
deleted file mode 100644
index 816459c..0000000
--- a/dumux/geomechanics/el1p2c/el1p2clocaljacobian.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL1P2C_LOCAL_JACOBIAN_HH_OLD
-#define DUMUX_EL1P2C_LOCAL_JACOBIAN_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/localjacobian.hh instead
-
-#include <dumux/geomechanics/el1p2c/localjacobian.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2clocalresidual.hh b/dumux/geomechanics/el1p2c/el1p2clocalresidual.hh
deleted file mode 100644
index 1fa9d64..0000000
--- a/dumux/geomechanics/el1p2c/el1p2clocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_ELASTIC1P2C_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/localresidual.hh instead
-
-#include <dumux/geomechanics/el1p2c/localresidual.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2cmodel.hh b/dumux/geomechanics/el1p2c/el1p2cmodel.hh
deleted file mode 100644
index 3294ac5..0000000
--- a/dumux/geomechanics/el1p2c/el1p2cmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_MODEL_HH_OLD
-#define DUMUX_ELASTIC1P2C_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/model.hh instead
-
-#include <dumux/geomechanics/el1p2c/model.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2cproperties.hh b/dumux/geomechanics/el1p2c/el1p2cproperties.hh
deleted file mode 100644
index 2d26172..0000000
--- a/dumux/geomechanics/el1p2c/el1p2cproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_PROPERTIES_HH_OLD
-#define DUMUX_ELASTIC1P2C_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/properties.hh instead
-
-#include <dumux/geomechanics/el1p2c/properties.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2cpropertydefaults.hh b/dumux/geomechanics/el1p2c/el1p2cpropertydefaults.hh
deleted file mode 100644
index 1466b57..0000000
--- a/dumux/geomechanics/el1p2c/el1p2cpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_ELASTIC1P2C_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/propertydefaults.hh instead
-
-#include <dumux/geomechanics/el1p2c/propertydefaults.hh>
-
-#endif
diff --git a/dumux/geomechanics/el1p2c/el1p2cvolumevariables.hh b/dumux/geomechanics/el1p2c/el1p2cvolumevariables.hh
deleted file mode 100644
index 3365355..0000000
--- a/dumux/geomechanics/el1p2c/el1p2cvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC1P2C_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_ELASTIC1P2C_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el1p2c/volumevariables.hh instead
-
-#include <dumux/geomechanics/el1p2c/volumevariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/CMakeLists.txt b/dumux/geomechanics/el2p/CMakeLists.txt
index 08e1ade..ab8c45b 100644
--- a/dumux/geomechanics/el2p/CMakeLists.txt
+++ b/dumux/geomechanics/el2p/CMakeLists.txt
@@ -1,20 +1,6 @@
 
 #install headers
 install(FILES
-el2pamgbackend.hh
-el2passembler.hh
-el2pbasemodel.hh
-el2pelementvolumevariables.hh
-el2pfluxvariables.hh
-el2pindices.hh
-el2plocaljacobian.hh
-el2plocaloperator.hh
-el2plocalresidual.hh
-el2pmodel.hh
-el2pnewtoncontroller.hh
-el2pproperties.hh
-el2ppropertydefaults.hh
-el2pvolumevariables.hh
 amgbackend.hh
 assembler.hh
 basemodel.hh
diff --git a/dumux/geomechanics/el2p/el2pamgbackend.hh b/dumux/geomechanics/el2p/el2pamgbackend.hh
deleted file mode 100644
index a0de251..0000000
--- a/dumux/geomechanics/el2p/el2pamgbackend.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL2P_AMGBACKEND_HH_OLD
-#define DUMUX_EL2P_AMGBACKEND_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/amgbackend.hh instead
-
-#include <dumux/geomechanics/el2p/amgbackend.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2passembler.hh b/dumux/geomechanics/el2p/el2passembler.hh
deleted file mode 100644
index bdf94c4..0000000
--- a/dumux/geomechanics/el2p/el2passembler.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL2P_ASSEMBLER_HH_OLD
-#define DUMUX_EL2P_ASSEMBLER_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/assembler.hh instead
-
-#include <dumux/geomechanics/el2p/assembler.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pbasemodel.hh b/dumux/geomechanics/el2p/el2pbasemodel.hh
deleted file mode 100644
index 83f6185..0000000
--- a/dumux/geomechanics/el2p/el2pbasemodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_BASE_MODEL_HH_OLD
-#define DUMUX_ELASTIC2P_BASE_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/basemodel.hh instead
-
-#include <dumux/geomechanics/el2p/basemodel.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pelementvolumevariables.hh b/dumux/geomechanics/el2p/el2pelementvolumevariables.hh
deleted file mode 100644
index 34a9594..0000000
--- a/dumux/geomechanics/el2p/el2pelementvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_EL2P_ELEMENT_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_BOX_EL2P_ELEMENT_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/elementvolumevariables.hh instead
-
-#include <dumux/geomechanics/el2p/elementvolumevariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pfluxvariables.hh b/dumux/geomechanics/el2p/el2pfluxvariables.hh
deleted file mode 100644
index 75eae88..0000000
--- a/dumux/geomechanics/el2p/el2pfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL2P_FLUX_VARIABLES_HH_OLD
-#define DUMUX_EL2P_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/fluxvariables.hh instead
-
-#include <dumux/geomechanics/el2p/fluxvariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pindices.hh b/dumux/geomechanics/el2p/el2pindices.hh
deleted file mode 100644
index 0c824cd..0000000
--- a/dumux/geomechanics/el2p/el2pindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_INDICES_HH_OLD
-#define DUMUX_ELASTIC2P_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/indices.hh instead
-
-#include <dumux/geomechanics/el2p/indices.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2plocaljacobian.hh b/dumux/geomechanics/el2p/el2plocaljacobian.hh
deleted file mode 100644
index 916c670..0000000
--- a/dumux/geomechanics/el2p/el2plocaljacobian.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL2P_LOCAL_JACOBIAN_HH_OLD
-#define DUMUX_EL2P_LOCAL_JACOBIAN_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/localjacobian.hh instead
-
-#include <dumux/geomechanics/el2p/localjacobian.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2plocaloperator.hh b/dumux/geomechanics/el2p/el2plocaloperator.hh
deleted file mode 100644
index 4ec5a64..0000000
--- a/dumux/geomechanics/el2p/el2plocaloperator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL2P_LOCAL_OPERATOR_HH_OLD
-#define DUMUX_EL2P_LOCAL_OPERATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/localoperator.hh instead
-
-#include <dumux/geomechanics/el2p/localoperator.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2plocalresidual.hh b/dumux/geomechanics/el2p/el2plocalresidual.hh
deleted file mode 100644
index e6cf288..0000000
--- a/dumux/geomechanics/el2p/el2plocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_ELASTIC2P_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/localresidual.hh instead
-
-#include <dumux/geomechanics/el2p/localresidual.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pmodel.hh b/dumux/geomechanics/el2p/el2pmodel.hh
deleted file mode 100644
index c3d2ffb..0000000
--- a/dumux/geomechanics/el2p/el2pmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_MODEL_HH_OLD
-#define DUMUX_ELASTIC2P_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/model.hh instead
-
-#include <dumux/geomechanics/el2p/model.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pnewtoncontroller.hh b/dumux/geomechanics/el2p/el2pnewtoncontroller.hh
deleted file mode 100644
index debec50..0000000
--- a/dumux/geomechanics/el2p/el2pnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_EL2P_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_EL2P_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/newtoncontroller.hh instead
-
-#include <dumux/geomechanics/el2p/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pproperties.hh b/dumux/geomechanics/el2p/el2pproperties.hh
deleted file mode 100644
index 615f3fe..0000000
--- a/dumux/geomechanics/el2p/el2pproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_PROPERTIES_HH_OLD
-#define DUMUX_ELASTIC2P_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/properties.hh instead
-
-#include <dumux/geomechanics/el2p/properties.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2ppropertydefaults.hh b/dumux/geomechanics/el2p/el2ppropertydefaults.hh
deleted file mode 100644
index a2470db..0000000
--- a/dumux/geomechanics/el2p/el2ppropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_ELASTIC2P_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/propertydefaults.hh instead
-
-#include <dumux/geomechanics/el2p/propertydefaults.hh>
-
-#endif
diff --git a/dumux/geomechanics/el2p/el2pvolumevariables.hh b/dumux/geomechanics/el2p/el2pvolumevariables.hh
deleted file mode 100644
index 75c6659..0000000
--- a/dumux/geomechanics/el2p/el2pvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC2P_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_ELASTIC2P_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/el2p/volumevariables.hh instead
-
-#include <dumux/geomechanics/el2p/volumevariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/CMakeLists.txt b/dumux/geomechanics/elastic/CMakeLists.txt
index a0c57de..dc2edad 100644
--- a/dumux/geomechanics/elastic/CMakeLists.txt
+++ b/dumux/geomechanics/elastic/CMakeLists.txt
@@ -1,13 +1,6 @@
 
 #install headers
 install(FILES
-elasticfluxvariables.hh
-elasticindices.hh
-elasticlocalresidual.hh
-elasticmodel.hh
-elasticproperties.hh
-elasticpropertydefaults.hh
-elasticvolumevariables.hh
 fluxvariables.hh
 indices.hh
 localresidual.hh
diff --git a/dumux/geomechanics/elastic/elasticfluxvariables.hh b/dumux/geomechanics/elastic/elasticfluxvariables.hh
deleted file mode 100644
index ae4e878..0000000
--- a/dumux/geomechanics/elastic/elasticfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_FLUX_VARIABLES_HH_OLD
-#define DUMUX_ELASTIC_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/fluxvariables.hh instead
-
-#include <dumux/geomechanics/elastic/fluxvariables.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/elasticindices.hh b/dumux/geomechanics/elastic/elasticindices.hh
deleted file mode 100644
index ff5f522..0000000
--- a/dumux/geomechanics/elastic/elasticindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_INDICES_HH_OLD
-#define DUMUX_ELASTIC_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/indices.hh instead
-
-#include <dumux/geomechanics/elastic/indices.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/elasticlocalresidual.hh b/dumux/geomechanics/elastic/elasticlocalresidual.hh
deleted file mode 100644
index e3eae2e..0000000
--- a/dumux/geomechanics/elastic/elasticlocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_ELASTIC_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/localresidual.hh instead
-
-#include <dumux/geomechanics/elastic/localresidual.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/elasticmodel.hh b/dumux/geomechanics/elastic/elasticmodel.hh
deleted file mode 100644
index 59ea49c..0000000
--- a/dumux/geomechanics/elastic/elasticmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_MODEL_HH_OLD
-#define DUMUX_ELASTIC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/model.hh instead
-
-#include <dumux/geomechanics/elastic/model.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/elasticproperties.hh b/dumux/geomechanics/elastic/elasticproperties.hh
deleted file mode 100644
index 18f9fe5..0000000
--- a/dumux/geomechanics/elastic/elasticproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_PROPERTIES_HH_OLD
-#define DUMUX_ELASTIC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/properties.hh instead
-
-#include <dumux/geomechanics/elastic/properties.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/elasticpropertydefaults.hh b/dumux/geomechanics/elastic/elasticpropertydefaults.hh
deleted file mode 100644
index 2861124..0000000
--- a/dumux/geomechanics/elastic/elasticpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_PROPERTIES_DEFAULTS_HH_OLD
-#define DUMUX_ELASTIC_PROPERTIES_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/propertydefaults.hh instead
-
-#include <dumux/geomechanics/elastic/propertydefaults.hh>
-
-#endif
diff --git a/dumux/geomechanics/elastic/elasticvolumevariables.hh b/dumux/geomechanics/elastic/elasticvolumevariables.hh
deleted file mode 100644
index 468776b..0000000
--- a/dumux/geomechanics/elastic/elasticvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ELASTIC_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_ELASTIC_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/geomechanics/elastic/volumevariables.hh instead
-
-#include <dumux/geomechanics/elastic/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/1p/1pindices.hh b/dumux/implicit/1p/1pindices.hh
deleted file mode 100644
index 4a5968e..0000000
--- a/dumux/implicit/1p/1pindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_INDICES_HH_OLD
-#define DUMUX_1P_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/1p/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/1p/1plocalresidual.hh b/dumux/implicit/1p/1plocalresidual.hh
deleted file mode 100644
index bc3736b..0000000
--- a/dumux/implicit/1p/1plocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_1P_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/1p/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/1p/1pmodel.hh b/dumux/implicit/1p/1pmodel.hh
deleted file mode 100644
index 02eee1d..0000000
--- a/dumux/implicit/1p/1pmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_MODEL_HH_OLD
-#define DUMUX_1P_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/1p/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/1p/1pproperties.hh b/dumux/implicit/1p/1pproperties.hh
deleted file mode 100644
index e0840b2..0000000
--- a/dumux/implicit/1p/1pproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_PROPERTIES_HH_OLD
-#define DUMUX_1P_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/1p/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/1p/1ppropertydefaults.hh b/dumux/implicit/1p/1ppropertydefaults.hh
deleted file mode 100644
index d560113..0000000
--- a/dumux/implicit/1p/1ppropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_1P_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/1p/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/1p/1pvolumevariables.hh b/dumux/implicit/1p/1pvolumevariables.hh
deleted file mode 100644
index 161b9bc..0000000
--- a/dumux/implicit/1p/1pvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_1P_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/1p/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/1p/CMakeLists.txt b/dumux/implicit/1p/CMakeLists.txt
deleted file mode 100644
index 7af1aca..0000000
--- a/dumux/implicit/1p/CMakeLists.txt
+++ /dev/null
@@ -1,10 +0,0 @@
-
-#install headers
-install(FILES
-1pindices.hh
-1plocalresidual.hh
-1pmodel.hh
-1pproperties.hh
-1ppropertydefaults.hh
-1pvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/1p)
diff --git a/dumux/implicit/1p2c/1p2cfluxvariables.hh b/dumux/implicit/1p2c/1p2cfluxvariables.hh
deleted file mode 100644
index 496b22b..0000000
--- a/dumux/implicit/1p2c/1p2cfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P2C_FLUX_VARIABLES_HH_OLD
-#define DUMUX_1P2C_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/1p2cindices.hh b/dumux/implicit/1p2c/1p2cindices.hh
deleted file mode 100644
index 6c9fbe1..0000000
--- a/dumux/implicit/1p2c/1p2cindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P2C_INDICES_HH_OLD
-#define DUMUX_1P2C_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/1p2clocalresidual.hh b/dumux/implicit/1p2c/1p2clocalresidual.hh
deleted file mode 100644
index d5e9917..0000000
--- a/dumux/implicit/1p2c/1p2clocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ONEP_TWOC_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_ONEP_TWOC_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/1p2cmodel.hh b/dumux/implicit/1p2c/1p2cmodel.hh
deleted file mode 100644
index b3f56c7..0000000
--- a/dumux/implicit/1p2c/1p2cmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ONEP_TWOC_MODEL_HH_OLD
-#define DUMUX_ONEP_TWOC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/1p2cproperties.hh b/dumux/implicit/1p2c/1p2cproperties.hh
deleted file mode 100644
index 2d5a957..0000000
--- a/dumux/implicit/1p2c/1p2cproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P2C_PROPERTIES_HH_OLD
-#define DUMUX_1P2C_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/1p2cpropertydefaults.hh b/dumux/implicit/1p2c/1p2cpropertydefaults.hh
deleted file mode 100644
index 4561396..0000000
--- a/dumux/implicit/1p2c/1p2cpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P2C_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_1P2C_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/1p2cvolumevariables.hh b/dumux/implicit/1p2c/1p2cvolumevariables.hh
deleted file mode 100644
index df0103b..0000000
--- a/dumux/implicit/1p2c/1p2cvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P2C_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_1P2C_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/1p2c/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/1p2c/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/1p2c/CMakeLists.txt b/dumux/implicit/1p2c/CMakeLists.txt
deleted file mode 100644
index 68cb590..0000000
--- a/dumux/implicit/1p2c/CMakeLists.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-
-#install headers
-install(FILES
-1p2cfluxvariables.hh
-1p2cindices.hh
-1p2clocalresidual.hh
-1p2cmodel.hh
-1p2cproperties.hh
-1p2cpropertydefaults.hh
-1p2cvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/1p2c)
diff --git a/dumux/implicit/2p/2pgridadaptindicator.hh b/dumux/implicit/2p/2pgridadaptindicator.hh
deleted file mode 100644
index bf0f19e..0000000
--- a/dumux/implicit/2p/2pgridadaptindicator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_GRIDADAPTINDICATOR2P_HH_OLD
-#define DUMUX_IMPLICIT_GRIDADAPTINDICATOR2P_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/gridadaptindicator.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/gridadaptindicator.hh>
-
-#endif
diff --git a/dumux/implicit/2p/2pindices.hh b/dumux/implicit/2p/2pindices.hh
deleted file mode 100644
index 27b1f59..0000000
--- a/dumux/implicit/2p/2pindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_2P_INDICES_HH_OLD
-#define DUMUX_BOX_2P_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/2p/2plocalresidual.hh b/dumux/implicit/2p/2plocalresidual.hh
deleted file mode 100644
index e2ba6c7..0000000
--- a/dumux/implicit/2p/2plocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOP_LOCAL_RESIDUAL_BASE_HH_OLD
-#define DUMUX_TWOP_LOCAL_RESIDUAL_BASE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/2p/2pmodel.hh b/dumux/implicit/2p/2pmodel.hh
deleted file mode 100644
index c6d94a9..0000000
--- a/dumux/implicit/2p/2pmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOP_MODEL_HH_OLD
-#define DUMUX_TWOP_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/2p/2pproperties.hh b/dumux/implicit/2p/2pproperties.hh
deleted file mode 100644
index 8ee356a..0000000
--- a/dumux/implicit/2p/2pproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P_PROPERTIES_HH_OLD
-#define DUMUX_2P_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/2p/2ppropertydefaults.hh b/dumux/implicit/2p/2ppropertydefaults.hh
deleted file mode 100644
index 6d77492..0000000
--- a/dumux/implicit/2p/2ppropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_2P_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/2p/2pvolumevariables.hh b/dumux/implicit/2p/2pvolumevariables.hh
deleted file mode 100644
index 1996785..0000000
--- a/dumux/implicit/2p/2pvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_2P_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/2p/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/2p/CMakeLists.txt b/dumux/implicit/2p/CMakeLists.txt
deleted file mode 100644
index a78a9f0..0000000
--- a/dumux/implicit/2p/CMakeLists.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-
-#install headers
-install(FILES
-2pgridadaptindicator.hh
-2pindices.hh
-2plocalresidual.hh
-2pmodel.hh
-2pproperties.hh
-2ppropertydefaults.hh
-2pvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/2p)
diff --git a/dumux/implicit/2p2c/2p2cfluxvariables.hh b/dumux/implicit/2p2c/2p2cfluxvariables.hh
deleted file mode 100644
index 7adf5ca..0000000
--- a/dumux/implicit/2p2c/2p2cfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_FLUX_VARIABLES_HH_OLD
-#define DUMUX_2P2C_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2cindices.hh b/dumux/implicit/2p2c/2p2cindices.hh
deleted file mode 100644
index 78016b2..0000000
--- a/dumux/implicit/2p2c/2p2cindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_INDICES_HH_OLD
-#define DUMUX_2P2C_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2clocalresidual.hh b/dumux/implicit/2p2c/2p2clocalresidual.hh
deleted file mode 100644
index 42750ec..0000000
--- a/dumux/implicit/2p2c/2p2clocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_LOCAL_RESIDUAL_BASE_HH_OLD
-#define DUMUX_2P2C_LOCAL_RESIDUAL_BASE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2cmodel.hh b/dumux/implicit/2p2c/2p2cmodel.hh
deleted file mode 100644
index bf4ab0d..0000000
--- a/dumux/implicit/2p2c/2p2cmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_MODEL_HH_OLD
-#define DUMUX_2P2C_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2cnewtoncontroller.hh b/dumux/implicit/2p2c/2p2cnewtoncontroller.hh
deleted file mode 100644
index a07f5ac..0000000
--- a/dumux/implicit/2p2c/2p2cnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_2P2C_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/newtoncontroller.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2cproperties.hh b/dumux/implicit/2p2c/2p2cproperties.hh
deleted file mode 100644
index dae800a..0000000
--- a/dumux/implicit/2p2c/2p2cproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_PROPERTIES_HH_OLD
-#define DUMUX_2P2C_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2cpropertydefaults.hh b/dumux/implicit/2p2c/2p2cpropertydefaults.hh
deleted file mode 100644
index bfc7253..0000000
--- a/dumux/implicit/2p2c/2p2cpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_2P2C_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/2p2cvolumevariables.hh b/dumux/implicit/2p2c/2p2cvolumevariables.hh
deleted file mode 100644
index a71c4a0..0000000
--- a/dumux/implicit/2p2c/2p2cvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_2P2C_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2p2c/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/2p2c/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/2p2c/CMakeLists.txt b/dumux/implicit/2p2c/CMakeLists.txt
deleted file mode 100644
index e704522..0000000
--- a/dumux/implicit/2p2c/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-
-#install headers
-install(FILES
-2p2cfluxvariables.hh
-2p2cindices.hh
-2p2clocalresidual.hh
-2p2cmodel.hh
-2p2cnewtoncontroller.hh
-2p2cproperties.hh
-2p2cpropertydefaults.hh
-2p2cvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/2p2c)
diff --git a/dumux/implicit/2pdfm/2pdfmfluxvariables.hh b/dumux/implicit/2pdfm/2pdfmfluxvariables.hh
deleted file mode 100644
index 5b4c129..0000000
--- a/dumux/implicit/2pdfm/2pdfmfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_FLUX_VARIABLES_HH_OLD
-#define DUMUX_MODELS_2PDFM_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmindices.hh b/dumux/implicit/2pdfm/2pdfmindices.hh
deleted file mode 100644
index 19e0888..0000000
--- a/dumux/implicit/2pdfm/2pdfmindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_INDICES_HH_OLD
-#define DUMUX_MODELS_2PDFM_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmlocalresidual.hh b/dumux/implicit/2pdfm/2pdfmlocalresidual.hh
deleted file mode 100644
index 4b13ed6..0000000
--- a/dumux/implicit/2pdfm/2pdfmlocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_MODELS_2PDFM_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmmodel.hh b/dumux/implicit/2pdfm/2pdfmmodel.hh
deleted file mode 100644
index cb2f868..0000000
--- a/dumux/implicit/2pdfm/2pdfmmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_MODEL_HH_OLD
-#define DUMUX_MODELS_2PDFM_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmproblem.hh b/dumux/implicit/2pdfm/2pdfmproblem.hh
deleted file mode 100644
index dee00e2..0000000
--- a/dumux/implicit/2pdfm/2pdfmproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_PROBLEM_HH_OLD
-#define DUMUX_MODELS_2PDFM_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/problem.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/problem.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmproperties.hh b/dumux/implicit/2pdfm/2pdfmproperties.hh
deleted file mode 100644
index e0ad1d3..0000000
--- a/dumux/implicit/2pdfm/2pdfmproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_PROPERTIES_HH_OLD
-#define DUMUX_MODELS_2PDFM_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmpropertydefaults.hh b/dumux/implicit/2pdfm/2pdfmpropertydefaults.hh
deleted file mode 100644
index 2a598e1..0000000
--- a/dumux/implicit/2pdfm/2pdfmpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_MODELS_2PDFM_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/2pdfmvolumevariables.hh b/dumux/implicit/2pdfm/2pdfmvolumevariables.hh
deleted file mode 100644
index b209c6b..0000000
--- a/dumux/implicit/2pdfm/2pdfmvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MODELS_2PDFM_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_MODELS_2PDFM_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pdfm/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/2pdfm/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pdfm/CMakeLists.txt b/dumux/implicit/2pdfm/CMakeLists.txt
deleted file mode 100644
index fee22d2..0000000
--- a/dumux/implicit/2pdfm/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-
-#install headers
-install(FILES
-2pdfmfluxvariables.hh
-2pdfmindices.hh
-2pdfmlocalresidual.hh
-2pdfmmodel.hh
-2pdfmproblem.hh
-2pdfmproperties.hh
-2pdfmpropertydefaults.hh
-2pdfmvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/2pdfm)
diff --git a/dumux/implicit/2pminc/2pmincfluxvariables.hh b/dumux/implicit/2pminc/2pmincfluxvariables.hh
deleted file mode 100644
index c8b771a..0000000
--- a/dumux/implicit/2pminc/2pmincfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOPMINC_FLUX_VARIABLES_HH_OLD
-#define DUMUX_TWOPMINC_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pminc/2pmincindices.hh b/dumux/implicit/2pminc/2pmincindices.hh
deleted file mode 100644
index d811443..0000000
--- a/dumux/implicit/2pminc/2pmincindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_2PMINC_INDICES_HH_OLD
-#define DUMUX_BOX_2PMINC_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/2pminc/2pminclocalresidual.hh b/dumux/implicit/2pminc/2pminclocalresidual.hh
deleted file mode 100644
index 2800bce..0000000
--- a/dumux/implicit/2pminc/2pminclocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOPMINC_LOCAL_RESIDUAL_BASE_HH_OLD
-#define DUMUX_TWOPMINC_LOCAL_RESIDUAL_BASE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/2pminc/2pmincmodel.hh b/dumux/implicit/2pminc/2pmincmodel.hh
deleted file mode 100644
index cab9e7e..0000000
--- a/dumux/implicit/2pminc/2pmincmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOPMINC_MODEL_HH_OLD
-#define DUMUX_TWOPMINC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/2pminc/2pmincproperties.hh b/dumux/implicit/2pminc/2pmincproperties.hh
deleted file mode 100644
index 398d5f1..0000000
--- a/dumux/implicit/2pminc/2pmincproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PMINC_PROPERTIES_HH_OLD
-#define DUMUX_2PMINC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/2pminc/2pmincpropertydefaults.hh b/dumux/implicit/2pminc/2pmincpropertydefaults.hh
deleted file mode 100644
index 36482bf..0000000
--- a/dumux/implicit/2pminc/2pmincpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PMIN_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_2PMIN_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/2pminc/2pmincvolumevariables.hh b/dumux/implicit/2pminc/2pmincvolumevariables.hh
deleted file mode 100644
index 58fae4c..0000000
--- a/dumux/implicit/2pminc/2pmincvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOPMINC_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_TWOPMINC_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pminc/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/2pminc/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncfluxvariables.hh b/dumux/implicit/2pnc/2pncfluxvariables.hh
deleted file mode 100644
index ce450ce..0000000
--- a/dumux/implicit/2pnc/2pncfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_FLUX_VARIABLES_HH_OLD
-#define DUMUX_2PNC_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncindices.hh b/dumux/implicit/2pnc/2pncindices.hh
deleted file mode 100644
index 309c8c7..0000000
--- a/dumux/implicit/2pnc/2pncindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_INDICES_HH_OLD
-#define DUMUX_2PNC_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pnclocalresidual.hh b/dumux/implicit/2pnc/2pnclocalresidual.hh
deleted file mode 100644
index 719ae05..0000000
--- a/dumux/implicit/2pnc/2pnclocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_LOCAL_RESIDUAL_BASE_HH_OLD
-#define DUMUX_2PNC_LOCAL_RESIDUAL_BASE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncmodel.hh b/dumux/implicit/2pnc/2pncmodel.hh
deleted file mode 100644
index a42f648..0000000
--- a/dumux/implicit/2pnc/2pncmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_MODEL_HH_OLD
-#define DUMUX_2PNC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncnewtoncontroller.hh b/dumux/implicit/2pnc/2pncnewtoncontroller.hh
deleted file mode 100644
index d50d553..0000000
--- a/dumux/implicit/2pnc/2pncnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_2PNC_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/newtoncontroller.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncproperties.hh b/dumux/implicit/2pnc/2pncproperties.hh
deleted file mode 100644
index 1ecb36d..0000000
--- a/dumux/implicit/2pnc/2pncproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_PROPERTIES_HH_OLD
-#define DUMUX_2PNC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncpropertydefaults.hh b/dumux/implicit/2pnc/2pncpropertydefaults.hh
deleted file mode 100644
index e60b142..0000000
--- a/dumux/implicit/2pnc/2pncpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_2PNC_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/2pncvolumevariables.hh b/dumux/implicit/2pnc/2pncvolumevariables.hh
deleted file mode 100644
index 22f705e..0000000
--- a/dumux/implicit/2pnc/2pncvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNC_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_2PNC_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pnc/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/2pnc/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pnc/CMakeLists.txt b/dumux/implicit/2pnc/CMakeLists.txt
deleted file mode 100644
index 5e5ec52..0000000
--- a/dumux/implicit/2pnc/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-
-#install headers
-install(FILES
-2pncfluxvariables.hh
-2pncindices.hh
-2pnclocalresidual.hh
-2pncmodel.hh
-2pncnewtoncontroller.hh
-2pncproperties.hh
-2pncpropertydefaults.hh
-2pncvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/2pnc)
diff --git a/dumux/implicit/2pncmin/2pncminfluxvariables.hh b/dumux/implicit/2pncmin/2pncminfluxvariables.hh
deleted file mode 100644
index ce5cbcf..0000000
--- a/dumux/implicit/2pncmin/2pncminfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMIN_FLUX_VARIABLES_HH_OLD
-#define DUMUX_2PNCMIN_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/2pncminindices.hh b/dumux/implicit/2pncmin/2pncminindices.hh
deleted file mode 100644
index bf98e8e..0000000
--- a/dumux/implicit/2pncmin/2pncminindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMIN_INDICES_HH_OLD
-#define DUMUX_2PNCMIN_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/2pncminlocalresidual.hh b/dumux/implicit/2pncmin/2pncminlocalresidual.hh
deleted file mode 100644
index 142ce3e..0000000
--- a/dumux/implicit/2pncmin/2pncminlocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMIN_LOCAL_RESIDUAL_BASE_HH_OLD
-#define DUMUX_2PNCMIN_LOCAL_RESIDUAL_BASE_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/2pncminmodel.hh b/dumux/implicit/2pncmin/2pncminmodel.hh
deleted file mode 100644
index 7bfac2d..0000000
--- a/dumux/implicit/2pncmin/2pncminmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMIN_MODEL_HH_OLD
-#define DUMUX_2PNCMIN_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/2pncminproperties.hh b/dumux/implicit/2pncmin/2pncminproperties.hh
deleted file mode 100644
index 623b90b..0000000
--- a/dumux/implicit/2pncmin/2pncminproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMIN_PROPERTIES_HH_OLD
-#define DUMUX_2PNCMIN_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/2pncminpropertydefaults.hh b/dumux/implicit/2pncmin/2pncminpropertydefaults.hh
deleted file mode 100644
index 64cf62f..0000000
--- a/dumux/implicit/2pncmin/2pncminpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMIN_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_2PNCMIN_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/2pncminvolumevariables.hh b/dumux/implicit/2pncmin/2pncminvolumevariables.hh
deleted file mode 100644
index 1c31f96..0000000
--- a/dumux/implicit/2pncmin/2pncminvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2PNCMin_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_2PNCMin_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/2pncmin/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/2pncmin/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/2pncmin/CMakeLists.txt b/dumux/implicit/2pncmin/CMakeLists.txt
deleted file mode 100644
index 93b03ed..0000000
--- a/dumux/implicit/2pncmin/CMakeLists.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-
-#install headers
-install(FILES
-2pncminfluxvariables.hh
-2pncminindices.hh
-2pncminlocalresidual.hh
-2pncminmodel.hh
-2pncminproperties.hh
-2pncminpropertydefaults.hh
-2pncminvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/2pncmin)
diff --git a/dumux/implicit/3p/3pindices.hh b/dumux/implicit/3p/3pindices.hh
deleted file mode 100644
index 4f04e30..0000000
--- a/dumux/implicit/3p/3pindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P_INDICES_HH_OLD
-#define DUMUX_3P_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/3p/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/3p/3plocalresidual.hh b/dumux/implicit/3p/3plocalresidual.hh
deleted file mode 100644
index a05375b..0000000
--- a/dumux/implicit/3p/3plocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_3P_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/3p/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/3p/3pmodel.hh b/dumux/implicit/3p/3pmodel.hh
deleted file mode 100644
index 9ddb93d..0000000
--- a/dumux/implicit/3p/3pmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P_MODEL_HH_OLD
-#define DUMUX_3P_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/3p/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/3p/3pproperties.hh b/dumux/implicit/3p/3pproperties.hh
deleted file mode 100644
index 78e1782..0000000
--- a/dumux/implicit/3p/3pproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P_PROPERTIES_HH_OLD
-#define DUMUX_3P_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/3p/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/3p/3ppropertydefaults.hh b/dumux/implicit/3p/3ppropertydefaults.hh
deleted file mode 100644
index a72f391..0000000
--- a/dumux/implicit/3p/3ppropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_3P_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/3p/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/3p/3pvolumevariables.hh b/dumux/implicit/3p/3pvolumevariables.hh
deleted file mode 100644
index f98f944..0000000
--- a/dumux/implicit/3p/3pvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_3P_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/3p/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/3p/CMakeLists.txt b/dumux/implicit/3p/CMakeLists.txt
deleted file mode 100644
index 0f6bf1e..0000000
--- a/dumux/implicit/3p/CMakeLists.txt
+++ /dev/null
@@ -1,10 +0,0 @@
-
-#install headers
-install(FILES
-3pindices.hh
-3plocalresidual.hh
-3pmodel.hh
-3pproperties.hh
-3ppropertydefaults.hh
-3pvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/3p)
diff --git a/dumux/implicit/3p3c/3p3cfluxvariables.hh b/dumux/implicit/3p3c/3p3cfluxvariables.hh
deleted file mode 100644
index 25830ba..0000000
--- a/dumux/implicit/3p3c/3p3cfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_FLUX_VARIABLES_HH_OLD
-#define DUMUX_3P3C_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3cindices.hh b/dumux/implicit/3p3c/3p3cindices.hh
deleted file mode 100644
index 74f9ed7..0000000
--- a/dumux/implicit/3p3c/3p3cindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_INDICES_HH_OLD
-#define DUMUX_3P3C_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3clocalresidual.hh b/dumux/implicit/3p3c/3p3clocalresidual.hh
deleted file mode 100644
index 29a4ac9..0000000
--- a/dumux/implicit/3p3c/3p3clocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_3P3C_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3cmodel.hh b/dumux/implicit/3p3c/3p3cmodel.hh
deleted file mode 100644
index faaca36..0000000
--- a/dumux/implicit/3p3c/3p3cmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_MODEL_HH_OLD
-#define DUMUX_3P3C_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3cnewtoncontroller.hh b/dumux/implicit/3p3c/3p3cnewtoncontroller.hh
deleted file mode 100644
index 06c9aa3..0000000
--- a/dumux/implicit/3p3c/3p3cnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_3P3C_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/newtoncontroller.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3cproperties.hh b/dumux/implicit/3p3c/3p3cproperties.hh
deleted file mode 100644
index 8dfef88..0000000
--- a/dumux/implicit/3p3c/3p3cproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_PROPERTIES_HH_OLD
-#define DUMUX_3P3C_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3cpropertydefaults.hh b/dumux/implicit/3p3c/3p3cpropertydefaults.hh
deleted file mode 100644
index 26bfa70..0000000
--- a/dumux/implicit/3p3c/3p3cpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_3P3C_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/3p3cvolumevariables.hh b/dumux/implicit/3p3c/3p3cvolumevariables.hh
deleted file mode 100644
index f538b0b..0000000
--- a/dumux/implicit/3p3c/3p3cvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_3P3C_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_3P3C_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/3p3c/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/3p3c/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/3p3c/CMakeLists.txt b/dumux/implicit/3p3c/CMakeLists.txt
deleted file mode 100644
index c8acfe5..0000000
--- a/dumux/implicit/3p3c/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-
-#install headers
-install(FILES
-3p3cfluxvariables.hh
-3p3cindices.hh
-3p3clocalresidual.hh
-3p3cmodel.hh
-3p3cnewtoncontroller.hh
-3p3cproperties.hh
-3p3cpropertydefaults.hh
-3p3cvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/3p3c)
diff --git a/dumux/implicit/CMakeLists.txt b/dumux/implicit/CMakeLists.txt
index 31220fe..9bb0c5d 100644
--- a/dumux/implicit/CMakeLists.txt
+++ b/dumux/implicit/CMakeLists.txt
@@ -1,21 +1,7 @@
-add_subdirectory("1p")
-add_subdirectory("1p2c")
-add_subdirectory("2p")
-add_subdirectory("2p2c")
-add_subdirectory("2pdfm")
-add_subdirectory("2pnc")
-add_subdirectory("2pncmin")
-add_subdirectory("3p")
-add_subdirectory("3p3c")
-add_subdirectory("adaptive")
-add_subdirectory("box")
-add_subdirectory("cellcentered")
-add_subdirectory("co2")
-add_subdirectory("common")
-add_subdirectory("cornerpoint")
-add_subdirectory("mpnc")
-add_subdirectory("nonisothermal")
-add_subdirectory("richards")
+add_subdirectory(adaptive)
+add_subdirectory(box)
+add_subdirectory(cellcentered)
+add_subdirectory(cornerpoint)
 
 install(FILES
 assembler.hh
diff --git a/dumux/implicit/box/CMakeLists.txt b/dumux/implicit/box/CMakeLists.txt
index 0ae61da..7d37d03 100644
--- a/dumux/implicit/box/CMakeLists.txt
+++ b/dumux/implicit/box/CMakeLists.txt
@@ -1,13 +1,6 @@
 
 #install headers
 install(FILES
-boxassembler.hh
-boxelementboundarytypes.hh
-boxelementvolumevariables.hh
-boxfvelementgeometry.hh
-boxlocalresidual.hh
-boxproperties.hh
-boxpropertydefaults.hh
 intersectiontovertexbc.hh
 assembler.hh
 elementboundarytypes.hh
diff --git a/dumux/implicit/box/boxassembler.hh b/dumux/implicit/box/boxassembler.hh
deleted file mode 100644
index fb3922f..0000000
--- a/dumux/implicit/box/boxassembler.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_ASSEMBLER_HH_OLD
-#define DUMUX_BOX_ASSEMBLER_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/assembler.hh instead
-
-#include <dumux/implicit/box/assembler.hh>
-
-#endif
diff --git a/dumux/implicit/box/boxelementboundarytypes.hh b/dumux/implicit/box/boxelementboundarytypes.hh
deleted file mode 100644
index f76d437..0000000
--- a/dumux/implicit/box/boxelementboundarytypes.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_ELEMENT_BOUNDARY_TYPES_HH_OLD
-#define DUMUX_BOX_ELEMENT_BOUNDARY_TYPES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/elementboundarytypes.hh instead
-
-#include <dumux/implicit/box/elementboundarytypes.hh>
-
-#endif
diff --git a/dumux/implicit/box/boxelementvolumevariables.hh b/dumux/implicit/box/boxelementvolumevariables.hh
deleted file mode 100644
index f9128c4..0000000
--- a/dumux/implicit/box/boxelementvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_ELEMENT_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_BOX_ELEMENT_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/elementvolumevariables.hh instead
-
-#include <dumux/implicit/box/elementvolumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/box/boxfvelementgeometry.hh b/dumux/implicit/box/boxfvelementgeometry.hh
deleted file mode 100644
index 016f702..0000000
--- a/dumux/implicit/box/boxfvelementgeometry.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_FV_ELEMENTGEOMETRY_HH_OLD
-#define DUMUX_BOX_FV_ELEMENTGEOMETRY_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/fvelementgeometry.hh instead
-
-#include <dumux/implicit/box/fvelementgeometry.hh>
-
-#endif
diff --git a/dumux/implicit/box/boxlocalresidual.hh b/dumux/implicit/box/boxlocalresidual.hh
deleted file mode 100644
index bd5e6dd..0000000
--- a/dumux/implicit/box/boxlocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_BOX_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/localresidual.hh instead
-
-#include <dumux/implicit/box/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/box/boxproperties.hh b/dumux/implicit/box/boxproperties.hh
deleted file mode 100644
index afb86e1..0000000
--- a/dumux/implicit/box/boxproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_PROPERTIES_HH_OLD
-#define DUMUX_BOX_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/properties.hh instead
-
-#include <dumux/implicit/box/properties.hh>
-
-#endif
diff --git a/dumux/implicit/box/boxpropertydefaults.hh b/dumux/implicit/box/boxpropertydefaults.hh
deleted file mode 100644
index 1961fd8..0000000
--- a/dumux/implicit/box/boxpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_BOX_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/box/propertydefaults.hh instead
-
-#include <dumux/implicit/box/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/CMakeLists.txt b/dumux/implicit/cellcentered/CMakeLists.txt
index 4cc6fcf..a1e0fbc 100644
--- a/dumux/implicit/cellcentered/CMakeLists.txt
+++ b/dumux/implicit/cellcentered/CMakeLists.txt
@@ -1,13 +1,6 @@
 
 #install headers
 install(FILES
-ccassembler.hh
-ccelementboundarytypes.hh
-ccelementvolumevariables.hh
-ccfvelementgeometry.hh
-cclocalresidual.hh
-ccproperties.hh
-ccpropertydefaults.hh
 assembler.hh
 elementboundarytypes.hh
 elementvolumevariables.hh
diff --git a/dumux/implicit/cellcentered/ccassembler.hh b/dumux/implicit/cellcentered/ccassembler.hh
deleted file mode 100644
index 805132a..0000000
--- a/dumux/implicit/cellcentered/ccassembler.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_ASSEMBLER_HH_OLD
-#define DUMUX_CC_ASSEMBLER_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/assembler.hh instead
-
-#include <dumux/implicit/cellcentered/assembler.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/ccelementboundarytypes.hh b/dumux/implicit/cellcentered/ccelementboundarytypes.hh
deleted file mode 100644
index 9d304de..0000000
--- a/dumux/implicit/cellcentered/ccelementboundarytypes.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_ELEMENT_BOUNDARY_TYPES_HH_OLD
-#define DUMUX_CC_ELEMENT_BOUNDARY_TYPES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/elementboundarytypes.hh instead
-
-#include <dumux/implicit/cellcentered/elementboundarytypes.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/ccelementvolumevariables.hh b/dumux/implicit/cellcentered/ccelementvolumevariables.hh
deleted file mode 100644
index a7258d2..0000000
--- a/dumux/implicit/cellcentered/ccelementvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_ELEMENT_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_CC_ELEMENT_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/elementvolumevariables.hh instead
-
-#include <dumux/implicit/cellcentered/elementvolumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/ccfvelementgeometry.hh b/dumux/implicit/cellcentered/ccfvelementgeometry.hh
deleted file mode 100644
index dad20f4..0000000
--- a/dumux/implicit/cellcentered/ccfvelementgeometry.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_FV_ELEMENTGEOMETRY_HH_OLD
-#define DUMUX_CC_FV_ELEMENTGEOMETRY_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/fvelementgeometry.hh instead
-
-#include <dumux/implicit/cellcentered/fvelementgeometry.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/cclocalresidual.hh b/dumux/implicit/cellcentered/cclocalresidual.hh
deleted file mode 100644
index 88d7662..0000000
--- a/dumux/implicit/cellcentered/cclocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_CC_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/localresidual.hh instead
-
-#include <dumux/implicit/cellcentered/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/ccproperties.hh b/dumux/implicit/cellcentered/ccproperties.hh
deleted file mode 100644
index c53d509..0000000
--- a/dumux/implicit/cellcentered/ccproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_PROPERTIES_HH_OLD
-#define DUMUX_CC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/properties.hh instead
-
-#include <dumux/implicit/cellcentered/properties.hh>
-
-#endif
diff --git a/dumux/implicit/cellcentered/ccpropertydefaults.hh b/dumux/implicit/cellcentered/ccpropertydefaults.hh
deleted file mode 100644
index 3244780..0000000
--- a/dumux/implicit/cellcentered/ccpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CC_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_CC_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cellcentered/propertydefaults.hh instead
-
-#include <dumux/implicit/cellcentered/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/co2/CMakeLists.txt b/dumux/implicit/co2/CMakeLists.txt
deleted file mode 100644
index 06c0de0..0000000
--- a/dumux/implicit/co2/CMakeLists.txt
+++ /dev/null
@@ -1,6 +0,0 @@
-
-#install headers
-install(FILES
-co2model.hh
-co2volumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/co2)
diff --git a/dumux/implicit/co2/co2model.hh b/dumux/implicit/co2/co2model.hh
deleted file mode 100644
index 4f6449d..0000000
--- a/dumux/implicit/co2/co2model.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CO2_MODEL_HH_OLD
-#define DUMUX_CO2_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/co2/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/co2/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/co2/co2volumevariables.hh b/dumux/implicit/co2/co2volumevariables.hh
deleted file mode 100644
index 6e6ecdf..0000000
--- a/dumux/implicit/co2/co2volumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CO2_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_CO2_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/co2/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/co2/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/common/CMakeLists.txt b/dumux/implicit/common/CMakeLists.txt
deleted file mode 100644
index b87d3af..0000000
--- a/dumux/implicit/common/CMakeLists.txt
+++ /dev/null
@@ -1,16 +0,0 @@
-
-#install headers
-install(FILES
-implicitassembler.hh
-implicitdarcyfluxvariables.hh
-implicitforchheimerfluxvariables.hh
-implicitlocaljacobian.hh
-implicitlocalresidual.hh
-implicitmodel.hh
-implicitporousmediaproblem.hh
-implicitproblem.hh
-implicitproperties.hh
-implicitpropertydefaults.hh
-implicitvelocityoutput.hh
-implicitvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/common)
diff --git a/dumux/implicit/common/implicitassembler.hh b/dumux/implicit/common/implicitassembler.hh
deleted file mode 100644
index 62b2621..0000000
--- a/dumux/implicit/common/implicitassembler.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_ASSEMBLER_HH_OLD
-#define DUMUX_IMPLICIT_ASSEMBLER_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/assembler.hh instead
-
-#include <dumux/implicit/assembler.hh>
-
-#endif
\ No newline at end of file
diff --git a/dumux/implicit/common/implicitdarcyfluxvariables.hh b/dumux/implicit/common/implicitdarcyfluxvariables.hh
deleted file mode 100644
index 9d09679..0000000
--- a/dumux/implicit/common/implicitdarcyfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_DARCY_FLUX_VARIABLES_HH_OLD
-#define DUMUX_IMPLICIT_DARCY_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/implicit/darcyfluxvariables.hh instead
-
-#include <dumux/porousmediumflow/implicit/darcyfluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitforchheimerfluxvariables.hh b/dumux/implicit/common/implicitforchheimerfluxvariables.hh
deleted file mode 100644
index 08552b6..0000000
--- a/dumux/implicit/common/implicitforchheimerfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_FORCHHEIMER_FLUX_VARIABLES_HH_OLD
-#define DUMUX_IMPLICIT_FORCHHEIMER_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/implicit/forchheimerfluxvariables.hh instead
-
-#include <dumux/porousmediumflow/implicit/forchheimerfluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitlocaljacobian.hh b/dumux/implicit/common/implicitlocaljacobian.hh
deleted file mode 100644
index 16021bc..0000000
--- a/dumux/implicit/common/implicitlocaljacobian.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_LOCAL_JACOBIAN_HH_OLD
-#define DUMUX_IMPLICIT_LOCAL_JACOBIAN_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/localjacobian.hh instead
-
-#include <dumux/implicit/localjacobian.hh>
-
-#endif
\ No newline at end of file
diff --git a/dumux/implicit/common/implicitlocalresidual.hh b/dumux/implicit/common/implicitlocalresidual.hh
deleted file mode 100644
index efc1f1b..0000000
--- a/dumux/implicit/common/implicitlocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_IMPLICIT_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/localresidual.hh instead
-
-#include <dumux/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitmodel.hh b/dumux/implicit/common/implicitmodel.hh
deleted file mode 100644
index a0ef38e..0000000
--- a/dumux/implicit/common/implicitmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_MODEL_HH_OLD
-#define DUMUX_IMPLICIT_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/model.hh instead
-
-#include <dumux/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitporousmediaproblem.hh b/dumux/implicit/common/implicitporousmediaproblem.hh
deleted file mode 100644
index 5c1d106..0000000
--- a/dumux/implicit/common/implicitporousmediaproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_POROUS_MEDIA_PROBLEM_HH_OLD
-#define DUMUX_IMPLICIT_POROUS_MEDIA_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/implicit/problem.hh instead
-
-#include <dumux/porousmediumflow/implicit/problem.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitproblem.hh b/dumux/implicit/common/implicitproblem.hh
deleted file mode 100644
index d52c4e5..0000000
--- a/dumux/implicit/common/implicitproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_PROBLEM_HH_OLD
-#define DUMUX_IMPLICIT_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/problem.hh instead
-
-#include <dumux/implicit/problem.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitproperties.hh b/dumux/implicit/common/implicitproperties.hh
deleted file mode 100644
index 70f10c6..0000000
--- a/dumux/implicit/common/implicitproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_PROPERTIES_HH_OLD
-#define DUMUX_IMPLICIT_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/properties.hh instead
-
-#include <dumux/implicit/properties.hh>
-
-#endif
\ No newline at end of file
diff --git a/dumux/implicit/common/implicitpropertydefaults.hh b/dumux/implicit/common/implicitpropertydefaults.hh
deleted file mode 100644
index 245571b..0000000
--- a/dumux/implicit/common/implicitpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_IMPLICIT_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/propertydefaults.hh instead
-
-#include <dumux/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitvelocityoutput.hh b/dumux/implicit/common/implicitvelocityoutput.hh
deleted file mode 100644
index 7baea3a..0000000
--- a/dumux/implicit/common/implicitvelocityoutput.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_VELOCITYOUTPUT_HH_OLD
-#define DUMUX_IMPLICIT_VELOCITYOUTPUT_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/implicit/velocityoutput.hh instead
-
-#include <dumux/porousmediumflow/implicit/velocityoutput.hh>
-
-#endif
diff --git a/dumux/implicit/common/implicitvolumevariables.hh b/dumux/implicit/common/implicitvolumevariables.hh
deleted file mode 100644
index ee0b7a2..0000000
--- a/dumux/implicit/common/implicitvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_IMPLICIT_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/volumevariables.hh instead
-
-#include <dumux/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/cornerpoint/CMakeLists.txt b/dumux/implicit/cornerpoint/CMakeLists.txt
index 9914aaa..5a3b58d 100644
--- a/dumux/implicit/cornerpoint/CMakeLists.txt
+++ b/dumux/implicit/cornerpoint/CMakeLists.txt
@@ -1,9 +1,6 @@
 
 #install headers
 install(FILES
-cpdarcyfluxvariables.hh
-cpelementvolumevariables.hh
-cpfvelementgeometry.hh
 elementvolumevariables.hh
 fvelementgeometry.hh
 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/cornerpoint)
diff --git a/dumux/implicit/cornerpoint/cpdarcyfluxvariables.hh b/dumux/implicit/cornerpoint/cpdarcyfluxvariables.hh
deleted file mode 100644
index 06dd4e0..0000000
--- a/dumux/implicit/cornerpoint/cpdarcyfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CP_DARCY_FLUX_VARIABLES_HH_OLD
-#define DUMUX_CP_DARCY_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/implicit/cpdarcyfluxvariables.hh instead
-
-#include <dumux/porousmediumflow/implicit/cpdarcyfluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/cornerpoint/cpelementvolumevariables.hh b/dumux/implicit/cornerpoint/cpelementvolumevariables.hh
deleted file mode 100644
index a2e13df..0000000
--- a/dumux/implicit/cornerpoint/cpelementvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CP_ELEMENT_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_CP_ELEMENT_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cornerpoint/elementvolumevariables.hh instead
-
-#include <dumux/implicit/cornerpoint/elementvolumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/cornerpoint/cpfvelementgeometry.hh b/dumux/implicit/cornerpoint/cpfvelementgeometry.hh
deleted file mode 100644
index c35ef07..0000000
--- a/dumux/implicit/cornerpoint/cpfvelementgeometry.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_CP_FV_ELEMENTGEOMETRY_HH_OLD
-#define DUMUX_CP_FV_ELEMENTGEOMETRY_HH_OLD
-
-#warning this header is deprecated, use dumux/implicit/cornerpoint/fvelementgeometry.hh instead
-
-#include <dumux/implicit/cornerpoint/fvelementgeometry.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/CMakeLists.txt b/dumux/implicit/mpnc/CMakeLists.txt
deleted file mode 100644
index a7ac686..0000000
--- a/dumux/implicit/mpnc/CMakeLists.txt
+++ /dev/null
@@ -1,24 +0,0 @@
-add_subdirectory("diffusion")
-add_subdirectory("energy")
-add_subdirectory("mass")
-
-#install headers
-install(FILES
-mpncfluxvariables.hh
-mpncindices.hh
-mpnclocalresidual.hh
-mpncmodel.hh
-mpncmodelkinetic.hh
-mpncnewtoncontroller.hh
-mpncproperties.hh
-mpncpropertieskinetic.hh
-mpncpropertydefaults.hh
-mpncpropertydefaultskinetic.hh
-mpncvolumevariables.hh
-mpncvolumevariablesia.hh
-mpncvolumevariablesiakinetic.hh
-mpncvtkwritercommon.hh
-mpncvtkwriter.hh
-mpncvtkwritermodule.hh
-velomodelnewtoncontroller.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/mpnc)
diff --git a/dumux/implicit/mpnc/diffusion/CMakeLists.txt b/dumux/implicit/mpnc/diffusion/CMakeLists.txt
deleted file mode 100644
index 51b3c9b..0000000
--- a/dumux/implicit/mpnc/diffusion/CMakeLists.txt
+++ /dev/null
@@ -1,7 +0,0 @@
-
-#install headers
-install(FILES
-diffusion.hh
-fluxvariables.hh
-volumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/mpnc/diffusion)
diff --git a/dumux/implicit/mpnc/diffusion/diffusion.hh b/dumux/implicit/mpnc/diffusion/diffusion.hh
deleted file mode 100644
index 7bd444c..0000000
--- a/dumux/implicit/mpnc/diffusion/diffusion.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_DIFFUSION_HH_OLD
-#define DUMUX_MPNC_DIFFUSION_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/diffusion/diffusion.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/diffusion/diffusion.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/diffusion/fluxvariables.hh b/dumux/implicit/mpnc/diffusion/fluxvariables.hh
deleted file mode 100644
index 574625c..0000000
--- a/dumux/implicit/mpnc/diffusion/fluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_DIFFUSION_FLUX_VARIABLES_HH_OLD
-#define DUMUX_MPNC_DIFFUSION_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/diffusion/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/diffusion/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/diffusion/volumevariables.hh b/dumux/implicit/mpnc/diffusion/volumevariables.hh
deleted file mode 100644
index b2dc0bf..0000000
--- a/dumux/implicit/mpnc/diffusion/volumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_DIFFUSION_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_MPNC_DIFFUSION_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/diffusion/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/diffusion/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/CMakeLists.txt b/dumux/implicit/mpnc/energy/CMakeLists.txt
deleted file mode 100644
index 23c3070..0000000
--- a/dumux/implicit/mpnc/energy/CMakeLists.txt
+++ /dev/null
@@ -1,14 +0,0 @@
-
-#install headers
-install(FILES
-mpncfluxvariablesenergy.hh
-mpncfluxvariablesenergykinetic.hh
-mpncindicesenergy.hh
-mpncindicesenergykinetic.hh
-mpnclocalresidualenergy.hh
-mpnclocalresidualenergykinetic.hh
-mpncvolumevariablesenergy.hh
-mpncvolumevariablesenergykinetic.hh
-mpncvtkwriterenergy.hh
-mpncvtkwriterenergykinetic.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/mpnc/energy)
diff --git a/dumux/implicit/mpnc/energy/mpncfluxvariablesenergy.hh b/dumux/implicit/mpnc/energy/mpncfluxvariablesenergy.hh
deleted file mode 100644
index 076d7f2..0000000
--- a/dumux/implicit/mpnc/energy/mpncfluxvariablesenergy.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_ENERGY_FLUX_VARIABLES_HH_OLD
-#define DUMUX_MPNC_ENERGY_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncfluxvariablesenergykinetic.hh b/dumux/implicit/mpnc/energy/mpncfluxvariablesenergykinetic.hh
deleted file mode 100644
index 217cfef..0000000
--- a/dumux/implicit/mpnc/energy/mpncfluxvariablesenergykinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_ENERGY_FLUX_VARIABLES_KINETIC_HH_OLD
-#define DUMUX_MPNC_ENERGY_FLUX_VARIABLES_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/fluxvariableskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/fluxvariableskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncindicesenergy.hh b/dumux/implicit/mpnc/energy/mpncindicesenergy.hh
deleted file mode 100644
index 2b174be..0000000
--- a/dumux/implicit/mpnc/energy/mpncindicesenergy.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_INDICES_ENERGY_HH_OLD
-#define DUMUX_MPNC_INDICES_ENERGY_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/indices.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/indices.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncindicesenergykinetic.hh b/dumux/implicit/mpnc/energy/mpncindicesenergykinetic.hh
deleted file mode 100644
index 5caf13d..0000000
--- a/dumux/implicit/mpnc/energy/mpncindicesenergykinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_INDICES_ENERGY_KINETIC_HH_OLD
-#define DUMUX_MPNC_INDICES_ENERGY_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/indiceskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/indiceskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpnclocalresidualenergy.hh b/dumux/implicit/mpnc/energy/mpnclocalresidualenergy.hh
deleted file mode 100644
index 8ca04ed..0000000
--- a/dumux/implicit/mpnc/energy/mpnclocalresidualenergy.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_LOCAL_RESIDUAL_ENERGY_HH_OLD
-#define DUMUX_MPNC_LOCAL_RESIDUAL_ENERGY_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/localresidual.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpnclocalresidualenergykinetic.hh b/dumux/implicit/mpnc/energy/mpnclocalresidualenergykinetic.hh
deleted file mode 100644
index 52da5be..0000000
--- a/dumux/implicit/mpnc/energy/mpnclocalresidualenergykinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_LOCAL_RESIDUAL_ENERGY_KINETIC_HH_OLD
-#define DUMUX_MPNC_LOCAL_RESIDUAL_ENERGY_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/localresidualkinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/localresidualkinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncvolumevariablesenergy.hh b/dumux/implicit/mpnc/energy/mpncvolumevariablesenergy.hh
deleted file mode 100644
index 262ecb0..0000000
--- a/dumux/implicit/mpnc/energy/mpncvolumevariablesenergy.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_ENERGY_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_MPNC_ENERGY_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncvolumevariablesenergykinetic.hh b/dumux/implicit/mpnc/energy/mpncvolumevariablesenergykinetic.hh
deleted file mode 100644
index d893cdc..0000000
--- a/dumux/implicit/mpnc/energy/mpncvolumevariablesenergykinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_ENERGY_VOLUME_VARIABLES_KINETIC_HH_OLD
-#define DUMUX_MPNC_ENERGY_VOLUME_VARIABLES_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/volumevariableskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/volumevariableskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncvtkwriterenergy.hh b/dumux/implicit/mpnc/energy/mpncvtkwriterenergy.hh
deleted file mode 100644
index 2ec6d64..0000000
--- a/dumux/implicit/mpnc/energy/mpncvtkwriterenergy.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_WRITER_ENERGY_HH_OLD
-#define DUMUX_MPNC_VTK_WRITER_ENERGY_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/vtkwriter.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/vtkwriter.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/energy/mpncvtkwriterenergykinetic.hh b/dumux/implicit/mpnc/energy/mpncvtkwriterenergykinetic.hh
deleted file mode 100644
index 4164537..0000000
--- a/dumux/implicit/mpnc/energy/mpncvtkwriterenergykinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_WRITER_ENERGY_KINETIC_HH_OLD
-#define DUMUX_MPNC_VTK_WRITER_ENERGY_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/energy/vtkwriterkinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/energy/vtkwriterkinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/CMakeLists.txt b/dumux/implicit/mpnc/mass/CMakeLists.txt
deleted file mode 100644
index 22765cb..0000000
--- a/dumux/implicit/mpnc/mass/CMakeLists.txt
+++ /dev/null
@@ -1,12 +0,0 @@
-
-#install headers
-install(FILES
-mpncindicesmass.hh
-mpncindicesmasskinetic.hh
-mpnclocalresidualmass.hh
-mpnclocalresidualmasskinetic.hh
-mpncvolumevariablesmass.hh
-mpncvolumevariablesmasskinetic.hh
-mpncvtkwritermass.hh
-mpncvtkwritermasskinetic.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/mpnc/mass)
diff --git a/dumux/implicit/mpnc/mass/mpncindicesmass.hh b/dumux/implicit/mpnc/mass/mpncindicesmass.hh
deleted file mode 100644
index c2a4b4e..0000000
--- a/dumux/implicit/mpnc/mass/mpncindicesmass.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_MASS_INDICES_HH_OLD
-#define DUMUX_MPNC_MASS_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/indices.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/indices.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpncindicesmasskinetic.hh b/dumux/implicit/mpnc/mass/mpncindicesmasskinetic.hh
deleted file mode 100644
index b93814a..0000000
--- a/dumux/implicit/mpnc/mass/mpncindicesmasskinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_MASS_INDICES_KINETIC_HH_OLD
-#define DUMUX_MPNC_MASS_INDICES_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/indiceskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/indiceskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpnclocalresidualmass.hh b/dumux/implicit/mpnc/mass/mpnclocalresidualmass.hh
deleted file mode 100644
index efafcdf..0000000
--- a/dumux/implicit/mpnc/mass/mpnclocalresidualmass.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_LOCAL_RESIDUAL_MASS_HH_OLD
-#define DUMUX_MPNC_LOCAL_RESIDUAL_MASS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/localresidual.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpnclocalresidualmasskinetic.hh b/dumux/implicit/mpnc/mass/mpnclocalresidualmasskinetic.hh
deleted file mode 100644
index 676747e..0000000
--- a/dumux/implicit/mpnc/mass/mpnclocalresidualmasskinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_LOCAL_RESIDUAL_MASS_KINETIC_HH_OLD
-#define DUMUX_MPNC_LOCAL_RESIDUAL_MASS_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/localresidualkinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/localresidualkinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpncvolumevariablesmass.hh b/dumux/implicit/mpnc/mass/mpncvolumevariablesmass.hh
deleted file mode 100644
index f9e7531..0000000
--- a/dumux/implicit/mpnc/mass/mpncvolumevariablesmass.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VOLUME_VARIABLES_MASS_HH_OLD
-#define DUMUX_MPNC_VOLUME_VARIABLES_MASS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpncvolumevariablesmasskinetic.hh b/dumux/implicit/mpnc/mass/mpncvolumevariablesmasskinetic.hh
deleted file mode 100644
index de04988..0000000
--- a/dumux/implicit/mpnc/mass/mpncvolumevariablesmasskinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VOLUME_VARIABLES_MASS_KINETIC_HH_OLD
-#define DUMUX_MPNC_VOLUME_VARIABLES_MASS_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/volumevariableskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/volumevariableskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpncvtkwritermass.hh b/dumux/implicit/mpnc/mass/mpncvtkwritermass.hh
deleted file mode 100644
index 18dc705..0000000
--- a/dumux/implicit/mpnc/mass/mpncvtkwritermass.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_WRITER_MASS_HH_OLD
-#define DUMUX_MPNC_VTK_WRITER_MASS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/vtkwriter.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/vtkwriter.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mass/mpncvtkwritermasskinetic.hh b/dumux/implicit/mpnc/mass/mpncvtkwritermasskinetic.hh
deleted file mode 100644
index 11ff13c..0000000
--- a/dumux/implicit/mpnc/mass/mpncvtkwritermasskinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_WRITER_MASS_KINETIC_HH_OLD
-#define DUMUX_MPNC_VTK_WRITER_MASS_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/mass/vtkwriterkinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/mass/vtkwriterkinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncfluxvariables.hh b/dumux/implicit/mpnc/mpncfluxvariables.hh
deleted file mode 100644
index 61bae9e..0000000
--- a/dumux/implicit/mpnc/mpncfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_FLUX_VARIABLES_HH_OLD
-#define DUMUX_MPNC_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncindices.hh b/dumux/implicit/mpnc/mpncindices.hh
deleted file mode 100644
index e270d66..0000000
--- a/dumux/implicit/mpnc/mpncindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_INDICES_HH_OLD
-#define DUMUX_MPNC_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpnclocalresidual.hh b/dumux/implicit/mpnc/mpnclocalresidual.hh
deleted file mode 100644
index 819b0f3..0000000
--- a/dumux/implicit/mpnc/mpnclocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_MPNC_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncmodel.hh b/dumux/implicit/mpnc/mpncmodel.hh
deleted file mode 100644
index 427b2ae..0000000
--- a/dumux/implicit/mpnc/mpncmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_MODEL_HH_OLD
-#define DUMUX_MPNC_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncmodelkinetic.hh b/dumux/implicit/mpnc/mpncmodelkinetic.hh
deleted file mode 100644
index 5cc8947..0000000
--- a/dumux/implicit/mpnc/mpncmodelkinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_MODEL_KINETIC_HH_OLD
-#define DUMUX_MPNC_MODEL_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/modelkinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/modelkinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncnewtoncontroller.hh b/dumux/implicit/mpnc/mpncnewtoncontroller.hh
deleted file mode 100644
index 94a0bde..0000000
--- a/dumux/implicit/mpnc/mpncnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_MPNC_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/newtoncontroller.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncproperties.hh b/dumux/implicit/mpnc/mpncproperties.hh
deleted file mode 100644
index c1b54fe..0000000
--- a/dumux/implicit/mpnc/mpncproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_PROPERTIES_HH_OLD
-#define DUMUX_MPNC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncpropertieskinetic.hh b/dumux/implicit/mpnc/mpncpropertieskinetic.hh
deleted file mode 100644
index 216825e..0000000
--- a/dumux/implicit/mpnc/mpncpropertieskinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_PROPERTIES_KINETIC_HH_OLD
-#define DUMUX_MPNC_PROPERTIES_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/propertieskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/propertieskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncpropertydefaults.hh b/dumux/implicit/mpnc/mpncpropertydefaults.hh
deleted file mode 100644
index 8758e62..0000000
--- a/dumux/implicit/mpnc/mpncpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_MPNC_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncpropertydefaultskinetic.hh b/dumux/implicit/mpnc/mpncpropertydefaultskinetic.hh
deleted file mode 100644
index 31a1b30..0000000
--- a/dumux/implicit/mpnc/mpncpropertydefaultskinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_PROPERTY_DEFAULTS_KINETIC_HH_OLD
-#define DUMUX_MPNC_PROPERTY_DEFAULTS_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/propertydefaultskinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/propertydefaultskinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncvolumevariables.hh b/dumux/implicit/mpnc/mpncvolumevariables.hh
deleted file mode 100644
index 9970a45..0000000
--- a/dumux/implicit/mpnc/mpncvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_MPNC_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncvolumevariablesia.hh b/dumux/implicit/mpnc/mpncvolumevariablesia.hh
deleted file mode 100644
index c2059b9..0000000
--- a/dumux/implicit/mpnc/mpncvolumevariablesia.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VOLUME_VARIABLES_IA_HH_OLD
-#define DUMUX_MPNC_VOLUME_VARIABLES_IA_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/volumevariablesia.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/volumevariablesia.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncvolumevariablesiakinetic.hh b/dumux/implicit/mpnc/mpncvolumevariablesiakinetic.hh
deleted file mode 100644
index d1ab858..0000000
--- a/dumux/implicit/mpnc/mpncvolumevariablesiakinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VOLUME_VARIABLES_IA_KINETIC_HH_OLD
-#define DUMUX_MPNC_VOLUME_VARIABLES_IA_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/volumevariablesiakinetic.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/volumevariablesiakinetic.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncvtkwriter.hh b/dumux/implicit/mpnc/mpncvtkwriter.hh
deleted file mode 100644
index 9231e88..0000000
--- a/dumux/implicit/mpnc/mpncvtkwriter.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_WRITER_HH_OLD
-#define DUMUX_MPNC_VTK_WRITER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/vtkwriter.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/vtkwriter.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncvtkwritercommon.hh b/dumux/implicit/mpnc/mpncvtkwritercommon.hh
deleted file mode 100644
index 4882619..0000000
--- a/dumux/implicit/mpnc/mpncvtkwritercommon.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_WRITER_COMMON_HH_OLD
-#define DUMUX_MPNC_VTK_WRITER_COMMON_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/vtkwritercommon.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/vtkwritercommon.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/mpncvtkwritermodule.hh b/dumux/implicit/mpnc/mpncvtkwritermodule.hh
deleted file mode 100644
index d8e9d73..0000000
--- a/dumux/implicit/mpnc/mpncvtkwritermodule.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MPNC_VTK_BASE_WRITER_HH_OLD
-#define DUMUX_MPNC_VTK_BASE_WRITER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/vtkwritermodule.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/vtkwritermodule.hh>
-
-#endif
diff --git a/dumux/implicit/mpnc/velomodelnewtoncontroller.hh b/dumux/implicit/mpnc/velomodelnewtoncontroller.hh
deleted file mode 100644
index 4734b3a..0000000
--- a/dumux/implicit/mpnc/velomodelnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_VELO_MODEL_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_VELO_MODEL_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/mpnc/implicit/velomodelnewtoncontroller.hh instead
-
-#include <dumux/porousmediumflow/mpnc/implicit/velomodelnewtoncontroller.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/CMakeLists.txt b/dumux/implicit/nonisothermal/CMakeLists.txt
deleted file mode 100644
index f17b560..0000000
--- a/dumux/implicit/nonisothermal/CMakeLists.txt
+++ /dev/null
@@ -1,11 +0,0 @@
-
-#install headers
-install(FILES
-nifluxvariables.hh
-niindices.hh
-nilocalresidual.hh
-nimodel.hh
-niproperties.hh
-nipropertydefaults.hh
-nivolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/nonisothermal)
diff --git a/dumux/implicit/nonisothermal/nifluxvariables.hh b/dumux/implicit/nonisothermal/nifluxvariables.hh
deleted file mode 100644
index 8520ebd..0000000
--- a/dumux/implicit/nonisothermal/nifluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NI_FLUX_VARIABLES_HH_OLD
-#define DUMUX_NI_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/niindices.hh b/dumux/implicit/nonisothermal/niindices.hh
deleted file mode 100644
index 79dba34..0000000
--- a/dumux/implicit/nonisothermal/niindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NI_INDICES_HH_OLD
-#define DUMUX_NI_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/nilocalresidual.hh b/dumux/implicit/nonisothermal/nilocalresidual.hh
deleted file mode 100644
index fa8a86e..0000000
--- a/dumux/implicit/nonisothermal/nilocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NEW_NI_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_NEW_NI_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/nimodel.hh b/dumux/implicit/nonisothermal/nimodel.hh
deleted file mode 100644
index 317a85f..0000000
--- a/dumux/implicit/nonisothermal/nimodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NI_MODEL_HH_OLD
-#define DUMUX_NI_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/niproperties.hh b/dumux/implicit/nonisothermal/niproperties.hh
deleted file mode 100644
index d13dc9b..0000000
--- a/dumux/implicit/nonisothermal/niproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NI_PROPERTIES_HH_OLD
-#define DUMUX_NI_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/nipropertydefaults.hh b/dumux/implicit/nonisothermal/nipropertydefaults.hh
deleted file mode 100644
index b7020da..0000000
--- a/dumux/implicit/nonisothermal/nipropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NI_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_NI_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/nonisothermal/nivolumevariables.hh b/dumux/implicit/nonisothermal/nivolumevariables.hh
deleted file mode 100644
index 594d5b8..0000000
--- a/dumux/implicit/nonisothermal/nivolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NI_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_NI_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/nonisothermal/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/nonisothermal/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/implicit/richards/CMakeLists.txt b/dumux/implicit/richards/CMakeLists.txt
deleted file mode 100644
index 183dd36..0000000
--- a/dumux/implicit/richards/CMakeLists.txt
+++ /dev/null
@@ -1,13 +0,0 @@
-
-#install headers
-install(FILES
-richardsfluxvariables.hh
-richardsindices.hh
-richardslocalresidual.hh
-richardsmodel.hh
-richardsnewtoncontroller.hh
-richardsproblem.hh
-richardsproperties.hh
-richardspropertydefaults.hh
-richardsvolumevariables.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/implicit/richards)
diff --git a/dumux/implicit/richards/richardsfluxvariables.hh b/dumux/implicit/richards/richardsfluxvariables.hh
deleted file mode 100644
index 133ab6b..0000000
--- a/dumux/implicit/richards/richardsfluxvariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_FLUX_VARIABLES_HH_OLD
-#define DUMUX_RICHARDS_FLUX_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/fluxvariables.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/fluxvariables.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardsindices.hh b/dumux/implicit/richards/richardsindices.hh
deleted file mode 100644
index bcace38..0000000
--- a/dumux/implicit/richards/richardsindices.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_INDICES_HH_OLD
-#define DUMUX_RICHARDS_INDICES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/indices.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/indices.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardslocalresidual.hh b/dumux/implicit/richards/richardslocalresidual.hh
deleted file mode 100644
index ff01434..0000000
--- a/dumux/implicit/richards/richardslocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_RICHARDS_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/localresidual.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/localresidual.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardsmodel.hh b/dumux/implicit/richards/richardsmodel.hh
deleted file mode 100644
index d6f6665..0000000
--- a/dumux/implicit/richards/richardsmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_MODEL_HH_OLD
-#define DUMUX_RICHARDS_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/model.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/model.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardsnewtoncontroller.hh b/dumux/implicit/richards/richardsnewtoncontroller.hh
deleted file mode 100644
index 75bb565..0000000
--- a/dumux/implicit/richards/richardsnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_RICHARDS_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/newtoncontroller.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardsproblem.hh b/dumux/implicit/richards/richardsproblem.hh
deleted file mode 100644
index 0318195..0000000
--- a/dumux/implicit/richards/richardsproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_PROBLEM_HH_OLD
-#define DUMUX_RICHARDS_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/problem.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/problem.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardsproperties.hh b/dumux/implicit/richards/richardsproperties.hh
deleted file mode 100644
index 2c986d5..0000000
--- a/dumux/implicit/richards/richardsproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_PROPERTIES_HH_OLD
-#define DUMUX_RICHARDS_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/properties.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/properties.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardspropertydefaults.hh b/dumux/implicit/richards/richardspropertydefaults.hh
deleted file mode 100644
index ce2b4c7..0000000
--- a/dumux/implicit/richards/richardspropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_RICHARDS_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/propertydefaults.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/propertydefaults.hh>
-
-#endif
diff --git a/dumux/implicit/richards/richardsvolumevariables.hh b/dumux/implicit/richards/richardsvolumevariables.hh
deleted file mode 100644
index 4b3d182..0000000
--- a/dumux/implicit/richards/richardsvolumevariables.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_RICHARDS_VOLUME_VARIABLES_HH_OLD
-#define DUMUX_RICHARDS_VOLUME_VARIABLES_HH_OLD
-
-#warning this header is deprecated, use dumux/porousmediumflow/richards/implicit/volumevariables.hh instead
-
-#include <dumux/porousmediumflow/richards/implicit/volumevariables.hh>
-
-#endif
diff --git a/dumux/io/CMakeLists.txt b/dumux/io/CMakeLists.txt
index f4ae37d..64e7dd8 100644
--- a/dumux/io/CMakeLists.txt
+++ b/dumux/io/CMakeLists.txt
@@ -4,17 +4,13 @@ install(FILES
 adaptivegridrestart.hh
 artgridcreator.hh
 cpgridcreator.hh
-cubegridcreator.hh
-dgfgridcreator.hh
 gnuplotinterface.hh
 gridcreator.hh
-interfacegridcreator.hh
 ploteffectivediffusivitymodel.hh
 plotmateriallaw.hh
 plotoverline2d.hh
 plotthermalconductivitymodel.hh
 restart.hh
-simplexgridcreator.hh
 vtkmultiwriter.hh
 vtknestedfunction.hh
 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/io)
diff --git a/dumux/io/cubegridcreator.hh b/dumux/io/cubegridcreator.hh
deleted file mode 100644
index adfaba3..0000000
--- a/dumux/io/cubegridcreator.hh
+++ /dev/null
@@ -1,117 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief Provides a grid creator which a regular grid made of
- *        quadrilaterals.
- */
-#ifndef DUMUX_CUBE_GRID_CREATOR_HH
-#define DUMUX_CUBE_GRID_CREATOR_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9. Use the default (Dumux::GridCreator). Structured grids can be defined via the input file now (see handbook). Set CellType = Cube for cube grid.
-
-#include <dune/grid/utility/structuredgridfactory.hh>
-
-#include <dumux/common/basicproperties.hh>
-
-namespace Dumux
-{
-
-namespace Properties
-{
-NEW_PROP_TAG(Scalar);
-NEW_PROP_TAG(Grid);
-}
-
-/*!
- * \brief Provides a grid creator which a regular grid made of
- *        quadrilaterals.
- *
- * A quadirlateral is a line segment in 1D, a rectangle in 2D and a
- * cube in 3D.
- */
-template <class TypeTag>
-class CubeGridCreator
-{
-    typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
-    typedef typename GET_PROP_TYPE(TypeTag, Grid)  Grid;
-    typedef std::shared_ptr<Grid> GridPointer;
-
-    enum { dim = Grid::dimension };
-
-public:
-    /*!
-     * \brief Create the Grid
-     */
-    static void makeGrid()
-    {
-        std::array< unsigned int, dim > cellRes;
-        Dune::FieldVector<Scalar, dim> upperRight;
-        Dune::FieldVector<Scalar, dim> lowerLeft;
-
-        lowerLeft[0] = 0.0;
-        upperRight[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightX);
-        cellRes[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, int, Grid, NumberOfCellsX);
-        if (dim > 1)
-        {
-            lowerLeft[1] = 0.0;
-            upperRight[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightY);
-            cellRes[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, int, Grid, NumberOfCellsY);
-        }
-        if (dim > 2)
-        {
-            lowerLeft[2] = 0.0;
-            upperRight[2] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightZ);
-            cellRes[2] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, int, Grid, NumberOfCellsZ);
-        }
-
-        gridPtr() = Dune::StructuredGridFactory<Grid>::createCubeGrid(lowerLeft, upperRight, cellRes);
-    }
-
-    /*!
-     * \brief Returns a reference to the grid.
-     */
-    static Grid &grid()
-    {
-        return *gridPtr();
-    }
-
-    /*!
-     * \brief Distributes the grid on all processes of a parallel
-     *        computation.
-     */
-    static void loadBalance()
-    {
-        gridPtr()->loadBalance();
-    }
-
-    /*!
-     * \brief Returns a reference to the shared pointer to the grid.
-     */
-    static GridPointer &gridPtr()
-    {
-        static GridPointer cubeGrid;
-        return cubeGrid;
-    }
-};
-
-}
-
-#endif
diff --git a/dumux/io/dgfgridcreator.hh b/dumux/io/dgfgridcreator.hh
deleted file mode 100644
index f558745..0000000
--- a/dumux/io/dgfgridcreator.hh
+++ /dev/null
@@ -1,96 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- * \brief Provides a grid creator which reads Dune Grid Format (DGF) files
- */
-#ifndef DUMUX_DGF_GRID_CREATOR_HH
-#define DUMUX_DGF_GRID_CREATOR_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9. Use the default grid creator (Dumux::GridCreator).
-
-#include <dune/common/parallel/mpihelper.hh>
-#include <dune/grid/io/file/dgfparser.hh>
-
-#include <dumux/common/propertysystem.hh>
-#include <dumux/common/parameters.hh>
-
-namespace Dumux
-{
-namespace Properties
-{
-NEW_PROP_TAG(Grid);
-}
-
-/*!
- * \brief Provides a grid creator which reads Dune Grid Format (DGF) files
- */
-template <class TypeTag>
-class DgfGridCreator
-{
-    typedef typename GET_PROP_TYPE(TypeTag, Grid) Grid;
-    typedef Dune::GridPtr<Grid> GridPointer;
-
-public:
-    /*!
-     * \brief Load the grid from the dgf file.
-     */
-    static void makeGrid(const std::string& dgfFileName)
-    {
-        gridPtr() = GridPointer(dgfFileName.c_str(), Dune::MPIHelper::getCommunicator());
-    }
-
-    /*!
-     * \brief Load the grid from the dgf file given in the input file.
-     */
-    static void makeGrid()
-    {
-        const std::string dgfFileName = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, std::string, Grid, File);
-        makeGrid(dgfFileName);
-    }
-
-    /*!
-     * \brief Returns a reference to the grid.
-     */
-    static Grid &grid()
-    {
-        return *gridPtr();
-    }
-
-    /*!
-     * \brief Returns a reference to the grid pointer.
-     */
-    static GridPointer &gridPtr()
-    {
-        static GridPointer gridPtr_;
-        return gridPtr_;
-    }
-
-    /*!
-     * \brief Call loadBalance() function of GridPointer.
-     */
-    static void loadBalance()
-    {
-        gridPtr().loadBalance();
-    }
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/io/interfacegridcreator.hh b/dumux/io/interfacegridcreator.hh
deleted file mode 100644
index ea50d14..0000000
--- a/dumux/io/interfacegridcreator.hh
+++ /dev/null
@@ -1,286 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A grid creator for the coupled problems, with a refined interface
- */
-
-#ifndef DUMUX_INTERFACEGRIDCREATOR_HH
-#define DUMUX_INTERFACEGRIDCREATOR_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9. Use the grid template "Dune::YaspGrid<dim, Dune::TensorProductCoordinates<Scalar, dim> >" instead.
-
-#include <dune/grid/common/gridfactory.hh>
-#include <dune/grid/io/file/dgfparser/dgfyasp.hh>
-#include <dune/grid/utility/structuredgridfactory.hh>
-
-#include <dumux/common/basicproperties.hh>
-
-namespace Dumux
-{
-
-namespace Properties
-{
-NEW_PROP_TAG(Scalar);
-NEW_PROP_TAG(Grid);
-}
-
-/*!
- * \brief A grid creator for the coupled problems, with a refined interface
- *
- * A grid creator, which can refine the grid towards the
- * coupling interface and the top of the domain.
- */
-template<class TypeTag>
-class InterfaceGridCreator
-{
-public:
-    typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
-    typedef typename GET_PROP_TYPE(TypeTag, Grid) Grid;
-    typedef std::shared_ptr<Grid> GridPointer;
-    enum {dim = Grid::dimension};
-
-    /*!
-     * \brief Create the Grid
-     */
-    static void makeGrid()
-    {
-        if (dim != 2)
-        {
-            DUNE_THROW(Dune::NotImplemented, "The InterfaceGridCreator is not implemented for 1D and 3D.");
-        }
-
-        Dune::array<unsigned int, dim> numCellsDummy = {{1,1}};
-        Dune::array<unsigned int, dim> numCells;
-        Dune::FieldVector<Scalar, dim> lowerLeft;
-        Dune::FieldVector<Scalar, dim> upperRight;
-        Dune::FieldVector<Scalar, dim> refinePoint(0.0);
-        Dune::FieldVector<Scalar, dim> gradingFactor(1.0);
-        Dune::FieldVector<bool, dim> refineTop(false);
-
-        // x-direction
-        numCells[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, unsigned int, Grid, NumberOfCellsX);
-        lowerLeft[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, LowerLeftX);
-        upperRight[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightX);
-        try { refinePoint[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, InterfacePosX); }
-        catch (Dumux::ParameterException &e) { }
-        try { gradingFactor[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, GradingFactorX); }
-        catch (Dumux::ParameterException &e) { }
-        try { refineTop[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, bool, Grid, RefineTopX); }
-        catch (Dumux::ParameterException &e) { }
-        // y-direction
-        numCells[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, unsigned int, Grid, NumberOfCellsY);
-        lowerLeft[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, LowerLeftY);
-        upperRight[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightY);
-        try { refinePoint[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, InterfacePosY); }
-        catch (Dumux::ParameterException &e) { }
-        try { gradingFactor[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, GradingFactorY); }
-        catch (Dumux::ParameterException &e) { }
-        try { refineTop[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, bool, Grid, RefineTopY); }
-        catch (Dumux::ParameterException &e) { }
-
-        typedef Dune::YaspGrid<dim> HelperGrid;
-        std::shared_ptr<HelperGrid> helperGrid = std::shared_ptr<HelperGrid> (
-            Dune::StructuredGridFactory<HelperGrid>::createCubeGrid(lowerLeft, upperRight, numCellsDummy));
-
-        const auto& helperElement = helperGrid->leafGridView().template begin<0>();
-        const auto& helperGeometry = helperElement.geometry();
-
-        Dune::FieldVector<Scalar,dim> refinePointLocal(helperGeometry.local(refinePoint));
-        std::cout << "refinePointGlobal = " << refinePoint
-                  << ", refinePointLocal = " << refinePointLocal
-                  << std::endl;
-        Dune::GridFactory<Grid> factory;
-
-        int nX = numCells[0];
-        int nY = numCells[1];
-
-        std::vector<std::vector<Scalar> > localPositions(dim);
-        for (int dimIdx = 0; dimIdx < dim; dimIdx++)
-        {
-            Scalar lengthLeft = refinePointLocal[dimIdx];
-            Scalar lengthRight = 1.0 - lengthLeft;
-
-            int nLeft, nRight;
-            Scalar hLeft, hRight;
-            if (lengthLeft < 1e-10)
-            {
-                nLeft = 0;
-                nRight = numCells[dimIdx];
-
-                if (gradingFactor[dimIdx] > 1.0)
-                    hLeft = hRight = (1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nRight));
-                else
-                    hLeft = hRight = 1.0/numCells[dimIdx];
-            }
-            else if (lengthLeft > 1.0 - 1e-10)
-            {
-                nLeft = numCells[dimIdx];
-                nRight = 0;
-
-                if (gradingFactor[dimIdx] > 1.0)
-                    hLeft = hRight = (1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nLeft));
-                else
-                    hLeft = hRight = 1.0/numCells[dimIdx];
-            }
-            else if (refineTop[dimIdx])
-            {
-                lengthLeft = refinePointLocal[dimIdx];
-                lengthRight = (1 - refinePointLocal[dimIdx])/2;
-
-                nLeft = nRight = numCells[dimIdx]/3;
-
-                if (numCells[dimIdx]%3 == 1)
-                    nLeft += 1;
-                else if (numCells[dimIdx]%3 == 2)
-                    nRight += 1;
-
-                hLeft = lengthLeft*(1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nLeft));
-                hRight = lengthRight*(1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nRight));
-            }
-            else if (lengthLeft > 0.5)
-            {
-                Scalar nLeftDouble = std::ceil(-log((1.0 + sqrt(1.0 + 4.0 * pow(gradingFactor[dimIdx], numCells[dimIdx])
-                                                                      * lengthRight/lengthLeft))
-                            /(2.0*pow(gradingFactor[dimIdx], numCells[dimIdx])))/log(gradingFactor[dimIdx]));
-                nLeft = std::min((unsigned int)std::ceil(nLeftDouble), numCells[dimIdx]);
-
-                nRight = numCells[dimIdx] - nLeft;
-
-                if (gradingFactor[dimIdx] > 1.0)
-                {
-                    hLeft = lengthLeft*(1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nLeft));
-                    hRight = lengthRight*(1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nRight));
-                }
-                else
-                    hLeft = hRight = 1.0/numCells[dimIdx];
-            }
-            else
-            {
-                Scalar nRightDouble = -log((1.0 + sqrt(1.0 + 4.0 * pow(gradingFactor[dimIdx], numCells[dimIdx])
-                                                             * lengthLeft/lengthRight))
-                            /(2.0*pow(gradingFactor[dimIdx], numCells[dimIdx])))/log(gradingFactor[dimIdx]);
-                nRight = std::min((unsigned int)std::ceil(nRightDouble), numCells[dimIdx]);
-
-                nLeft = numCells[dimIdx] - nRight;
-
-                if (gradingFactor[dimIdx] > 1.0)
-                {
-                    hLeft = lengthLeft*(1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nLeft));
-                    hRight = lengthRight*(1.0 - gradingFactor[dimIdx])/(1.0 - pow(gradingFactor[dimIdx], nRight));
-                }
-                else
-                    hLeft = hRight = 1.0/numCells[dimIdx];
-            }
-            std::cout << "lengthLeft = " << lengthLeft
-                      << ", lengthRight = " << lengthRight
-                      << ", hLeft = " << hLeft
-                      << ", hRight = " << hRight
-                      << ", nLeft = " << nLeft
-                      << ", nRight = " << nRight
-                      << std::endl;
-
-            int numVertices = numCells[dimIdx] + 1;
-            localPositions[dimIdx].resize(numVertices);
-
-            localPositions[dimIdx][0] = 0.0;
-            for (int i = 0; i < nLeft; i++)
-            {
-                Scalar hI = hLeft*pow(gradingFactor[dimIdx], nLeft-1-i);
-                localPositions[dimIdx][i+1] = localPositions[dimIdx][i] + hI;
-            }
-
-            for (int i = 0; i < nRight; i++)
-            {
-                Scalar hI = hRight*pow(gradingFactor[dimIdx], i);
-                localPositions[dimIdx][nLeft+i+1] = localPositions[dimIdx][nLeft+i] + hI;
-            }
-
-            if (refineTop[dimIdx])
-                for (int i = 0; i < nRight; i++)
-                {
-                    Scalar hI = hRight*pow(gradingFactor[dimIdx], nRight-1-i);
-                    localPositions[dimIdx][nLeft+nRight+i+1] = localPositions[dimIdx][nLeft+nRight+i] + hI;
-                }
-
-            for (int i = 0; i < numVertices; i++)
-                localPositions[dimIdx][i] /= localPositions[dimIdx][numVertices-1];
-        }
-
-        Dune::FieldVector<Scalar,dim> local;
-        for (int j = 0; j < nY + 1; j++)
-        {
-            local[1] = localPositions[1][j];
-            for (int i = 0; i < nX + 1; i++)
-            {
-                local[0] = localPositions[0][i];
-
-                Dune::FieldVector<Scalar,dim> position(helperGeometry.global(local));
-                factory.insertVertex(position);
-            }
-        }
-
-        for (int j = 0; j < nY; j++)
-        {
-            for (int i = 0; i < nX; i++)
-            {
-                std::vector<unsigned int> vertices(4);
-                vertices[0] = j*(nX+1) + i;
-                vertices[1] = j*(nX+1) + i+1;
-                vertices[2] = (j+1)*(nX+1) + i;
-                vertices[3] = (j+1)*(nX+1) + i+1;
-
-                factory.insertElement(Dune::GeometryType(Dune::GeometryType::cube,dim), vertices);
-            }
-        }
-
-        gridPtr().reset(factory.createGrid());
-    }
-
-    /*!
-     * \brief Returns a reference to the grid.
-     */
-    static Grid &grid()
-    {
-        return *gridPtr();
-    }
-
-    /*!
-     * \brief Distributes the grid on all processes of a parallel
-     *        computation.
-     */
-    static void loadBalance()
-    {
-        gridPtr()->loadBalance();
-    }
-
-    /*!
-     * \brief Returns a reference to the shared pointer to the grid.
-     */
-    static GridPointer &gridPtr()
-    {
-        static GridPointer interfaceGrid;
-        return interfaceGrid;
-    }
-};
-}
-
-
-#endif
diff --git a/dumux/io/simplexgridcreator.hh b/dumux/io/simplexgridcreator.hh
deleted file mode 100644
index 1bf4691..0000000
--- a/dumux/io/simplexgridcreator.hh
+++ /dev/null
@@ -1,115 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief Provides a grid creator which a regular grid made of
- *        simplices.
- */
-#ifndef DUMUX_SIMPLEX_GRID_CREATOR_HH
-#define DUMUX_SIMPLEX_GRID_CREATOR_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9. Use the default (Dumux::GridCreator). Structured grids can be defined via the input file now (see handbook). Set CellType = Simplex for simplex grid.
-
-#include <dumux/common/propertysystem.hh>
-#include <dumux/common/parameters.hh>
-
-#include <dumux/common/basicproperties.hh>
-#include <dune/grid/utility/structuredgridfactory.hh>
-
-namespace Dumux
-{
-namespace Properties
-{
-NEW_PROP_TAG(Scalar);
-NEW_PROP_TAG(Grid);
-}
-
-/*!
- * \brief Provides a grid creator which a regular grid made of
- *        simplices.
- */
-template <class TypeTag>
-class SimplexGridCreator
-{
-    typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
-    typedef typename GET_PROP_TYPE(TypeTag, Grid)  Grid;
-    typedef std::shared_ptr<Grid> GridPointer;
-
-    enum { dim = Grid::dimension };
-
-public:
-    /*!
-     * \brief Create the Grid
-     */
-    static void makeGrid()
-    {
-        std::array< unsigned int, dim > cellRes;
-        Dune::FieldVector<Scalar, dim> upperRight;
-        Dune::FieldVector<Scalar, dim> lowerLeft;
-
-        lowerLeft[0] = 0.0;
-        upperRight[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightX);
-        cellRes[0] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, int, Grid, NumberOfCellsX);
-        if (dim > 1)
-        {
-            lowerLeft[1] = 0.0;
-            upperRight[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightY);
-            cellRes[1] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, int, Grid, NumberOfCellsY);
-        }
-        if (dim > 2)
-        {
-            lowerLeft[2] = 0.0;
-            upperRight[2] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, Scalar, Grid, UpperRightZ);
-            cellRes[2] = GET_RUNTIME_PARAM_FROM_GROUP(TypeTag, int, Grid, NumberOfCellsZ);
-        }
-
-        gridPtr() = Dune::StructuredGridFactory<Grid>::createSimplexGrid(lowerLeft, upperRight, cellRes);
-    }
-
-    /*!
-     * \brief Returns a reference to the grid.
-     */
-    static Grid &grid()
-    {
-        return *gridPtr();
-    }
-
-    /*!
-     * \brief Distributes the grid on all processes of a parallel
-     *        computation.
-     */
-    static void loadBalance()
-    {
-        gridPtr()->loadBalance();
-    }
-
-    /*!
-     * \brief Returns a reference to the shared pointer to the grid.
-     */
-    static GridPointer &gridPtr()
-    {
-        static GridPointer simplexGrid;
-        return simplexGrid;
-    }
-};
-
-}
-
-#endif
diff --git a/dumux/linear/CMakeLists.txt b/dumux/linear/CMakeLists.txt
index 77dd522..938ef18 100644
--- a/dumux/linear/CMakeLists.txt
+++ b/dumux/linear/CMakeLists.txt
@@ -4,21 +4,9 @@ install(FILES
 amgbackend.hh
 amgparallelhelpers.hh
 amgproperties.hh
-borderindex.hh
-boxlinearsolver.hh
-domesticoverlapfrombcrsmatrix.hh
-elementborderlistfromgrid.hh
-foreignoverlapfrombcrsmatrix.hh
-globalindices.hh
 impetbicgstabilu0solver.hh
 linearsolverproperties.hh
-overlappingbcrsmatrix.hh
-overlappingblockvector.hh
-overlappingoperator.hh
-overlappingpreconditioner.hh
-overlappingscalarproduct.hh
 pardisobackend.hh
 seqsolverbackend.hh
 vectorexchange.hh
-vertexborderlistfromgrid.hh
 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/linear)
diff --git a/dumux/linear/borderindex.hh b/dumux/linear/borderindex.hh
deleted file mode 100644
index 3e8e823..0000000
--- a/dumux/linear/borderindex.hh
+++ /dev/null
@@ -1,56 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A single index intersecting with the process boundary.
- */
-#ifndef DUMUX_BORDER_INDEX_HH
-#define DUMUX_BORDER_INDEX_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-namespace Dumux {
-
-/*!
- * \brief A single index intersecting with the process boundary.
- */
-struct BorderIndex
-{
-    //! Index of the entity for the local process
-    int localIdx;
-
-    //! Index of the entity for the peer process
-    int peerIdx;
-
-    //! Rank of the peer process
-    int peerRank;
-
-    //! Distance to the process border for the peer (in hops)
-    int borderDistance;
-
-    //! True if and only if the entity which corrosponds to the index
-    //! is in the interior of more than one process (i.e. the entity
-    //! is completely on the border)
-    bool isShared;
-};
-
-}
-
-#endif
diff --git a/dumux/linear/boxlinearsolver.hh b/dumux/linear/boxlinearsolver.hh
deleted file mode 100644
index defc4cd..0000000
--- a/dumux/linear/boxlinearsolver.hh
+++ /dev/null
@@ -1,573 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief Provides a linear solver for the stabilized BiCG method with
- *        an ILU-0 preconditioner.
- */
-#ifndef DUMUX_BOXLINEARSOLVER_HH
-#define DUMUX_BOXLINEARSOLVER_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <dune/common/deprecated.hh>
-#include <dune/istl/solvers.hh>
-#include <dune/istl/preconditioners.hh>
-
-#include <dumux/implicit/properties.hh>
-#include <dumux/linear/seqsolverbackend.hh>
-#include <dumux/linear/linearsolverproperties.hh>
-#include <dumux/linear/vertexborderlistfromgrid.hh>
-#include <dumux/linear/overlappingbcrsmatrix.hh>
-#include <dumux/linear/overlappingblockvector.hh>
-#include <dumux/linear/overlappingpreconditioner.hh>
-#include <dumux/linear/overlappingscalarproduct.hh>
-#include <dumux/linear/overlappingoperator.hh>
-
-namespace Dumux
-{
-
-/*!
- * \ingroup Linear
- * \brief Provides a linear solver for the stabilized BiCG method with
- *        an ILU-0 preconditioner.
- *
- * This solver's intention is to be used in conjunction with the box
- * method, so it assumes that the vertices are the only DOFs.
- */
-template <class TypeTag>
-class BoxLinearSolver
-{
-    typedef typename GET_PROP_TYPE(TypeTag, Problem) Problem;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef typename GET_PROP_TYPE(TypeTag, VertexMapper) VertexMapper;
-    typedef typename GET_PROP_TYPE(TypeTag, GridView) GridView;
-
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dumux::OverlappingScalarProduct<OverlappingVector, Overlap> OverlappingScalarProduct;
-    typedef Dumux::OverlappingOperator<OverlappingMatrix, OverlappingVector, OverlappingVector> OverlappingOperator;
-
-public:
-    BoxLinearSolver(const Problem &problem, int overlapSize)
-    : problem_(problem)
-    , overlapSize_(overlapSize)
-    {}
-
-    ~BoxLinearSolver()
-    { cleanup_(); }
-
-    /*!
-     * \brief Set the structure of the linear system of equations to be solved.
-     *
-     * This method allocates space an does the necessary
-     * communication before actually calling the solve() method.  As
-     * long as the structure of the linear system does not change, the
-     * solve method can be called arbitrarily often.
-     */
-    void setStructureMatrix(const Matrix &M)
-    {
-        cleanup_();
-        prepare_();
-    }
-
-    /*!
-     * \brief Actually solve the linear system of equations.
-     *
-     * \return true if the residual reduction could be achieved, else false.
-     */
-    template <class PrecBackend, class SolverBackend>
-    bool solve(const Matrix &M,
-               Vector &x,
-               const Vector &b)
-    {
-        int verbosity = 0;
-        if (problem_.gridView().comm().rank() == 0)
-            verbosity = GET_PARAM_FROM_GROUP(TypeTag, int, LinearSolver, Verbosity);
-        const int maxIter = GET_PARAM_FROM_GROUP(TypeTag, double, LinearSolver, MaxIterations);
-        const double residReduction = GET_PARAM_FROM_GROUP(TypeTag, double, LinearSolver, ResidualReduction);
-
-        if (!overlapMatrix_) {
-            // make sure that the overlapping matrix and block vectors
-            // have been created
-            prepare_(M);
-        }
-
-        // copy the values of the non-overlapping linear system of
-        // equations to the overlapping one. On ther border, we add up
-        // the values of all processes (using the assignAdd() methods)
-        overlapMatrix_->assignAdd(M);
-        overlapb_->assignAdd(b);
-        (*overlapx_) = 0.0;
-
-        // create sequential and overlapping preconditioners
-        PrecBackend seqPreCond(*overlapMatrix_);
-        typedef typename PrecBackend::Implementation SeqPreconditioner;
-        typedef Dumux::OverlappingPreconditioner<SeqPreconditioner, Overlap> OverlappingPreconditioner;
-        OverlappingPreconditioner preCond(seqPreCond.imp(), overlapMatrix_->overlap());
-
-        // create the scalar products and linear operators for ISTL
-        OverlappingScalarProduct scalarProd(overlapMatrix_->overlap());
-        OverlappingOperator opA(*overlapMatrix_);
-
-        // create the actual solver
-        SolverBackend solver(opA,
-                scalarProd,
-                preCond,
-                residReduction,
-                maxIter,
-                verbosity);
-
-        // run the solver
-        Dune::InverseOperatorResult result;
-        solver.imp().apply(*overlapx_, *overlapb_, result);
-
-        // copy the result back to the non-overlapping vector
-        overlapx_->assignTo(x);
-
-        // return the result of the solver
-        return result.converged;
-    }
-
-private:
-    void prepare_(const Matrix &M)
-    {
-        VertexBorderListFromGrid<GridView, VertexMapper>
-        borderListCreator(problem_.gridView(), problem_.vertexMapper());
-
-        // create the overlapping Jacobian matrix
-        overlapMatrix_ = std::make_shared<OverlappingMatrix> (M,
-                borderListCreator.foreignBorderList(),
-                borderListCreator.domesticBorderList(),
-                overlapSize_);
-
-        // create the overlapping vectors for the residual and the
-        // solution
-        overlapb_ = std::make_shared<OverlappingVector>(overlapMatrix_->overlap());
-        overlapx_ = std::make_shared<OverlappingVector>(*overlapb_);
-    }
-
-    void cleanup_()
-    {
-        overlapMatrix_.template reset<OverlappingMatrix>(0);
-        overlapb_.template reset<OverlappingVector>(0);
-        overlapx_.template reset<OverlappingVector>(0);
-    }
-
-    const Problem &problem_;
-
-    int overlapSize_;
-    std::shared_ptr<OverlappingMatrix> overlapMatrix_;
-    std::shared_ptr<OverlappingVector> overlapb_;
-    std::shared_ptr<OverlappingVector> overlapx_;
-};
-
-template <class TypeTag, class Imp>
-class PrecNoIterBackend
-{
-public:
-    typedef Imp Implementation;
-
-    template <class Matrix>
-    PrecNoIterBackend(Matrix& A)
-    : imp_(A, GET_PARAM_FROM_GROUP(TypeTag, double, LinearSolver, PreconditionerRelaxation))
-    {}
-
-    Imp& imp()
-    {
-        return imp_;
-    }
-
-private:
-    Imp imp_;
-};
-
-template <class TypeTag, class Imp>
-class PrecIterBackend
-{
-public:
-    typedef Imp Implementation;
-
-    template <class Matrix>
-    PrecIterBackend(Matrix& A)
-    : imp_(A,
-           GET_PARAM_FROM_GROUP(TypeTag, int, LinearSolver, PreconditionerIterations),
-           GET_PARAM_FROM_GROUP(TypeTag, double, LinearSolver, PreconditionerRelaxation))
-    {}
-
-    Imp& imp()
-    {
-        return imp_;
-    }
-
-private:
-    Imp imp_;
-};
-
-/*!
- * \brief A standard solver backend.
- */
-template <class TypeTag, class Imp>
-class StandardSolverBackend
-{
-public:
-    typedef Imp Implementation;
-    typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
-
-    template <class Operator, class ScalarProduct, class Prec>
-    StandardSolverBackend(Operator& A, ScalarProduct& sp, Prec& prec,
-                          Scalar residReduction, int maxIter, int verbosity)
-    : imp_(A, sp, prec, residReduction, maxIter, verbosity)
-    {}
-
-    Imp& imp()
-    {
-        return imp_;
-    }
-
-private:
-    Imp imp_;
-};
-
-/*!
- * \brief Backend for an ILU0-preconditioned BiCGSTAB solver.
- */
-template <class TypeTag>
-class BoxBiCGStabILU0Solver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqILU0<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecNoIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::BiCGSTABSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use ILU0BiCGSTABBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxBiCGStabILU0Solver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for an SOR-preconditioned BiCGSTAB solver.
- */
-template <class TypeTag>
-class BoxBiCGStabSORSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqSOR<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::BiCGSTABSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use SORBiCGSTABBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxBiCGStabSORSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for an SSOR-preconditioned BiCGSTAB solver.
- */
-template <class TypeTag>
-class BoxBiCGStabSSORSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqSSOR<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::BiCGSTABSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use SSORBiCGSTABBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxBiCGStabSSORSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for a Jacobi-preconditioned BiCGSTAB solver.
- */
-template <class TypeTag>
-class BoxBiCGStabJacSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqJac<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::BiCGSTABSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use JacBiCGSTABBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxBiCGStabJacSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for a Gauss-Seidel-preconditioned BiCGSTAB solver.
- */
-template <class TypeTag>
-class BoxBiCGStabGSSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqGS<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::BiCGSTABSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use GSBiCGSTABBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxBiCGStabGSSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for an ILU0-preconditioned CG solver.
- */
-template <class TypeTag>
-class BoxCGILU0Solver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqILU0<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecNoIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::CGSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use ILUnCGBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxCGILU0Solver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for an SOR-preconditioned CG solver.
- */
-template <class TypeTag>
-class BoxCGSORSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqSOR<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::CGSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use SORCGBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxCGSORSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for an SSOR-preconditioned CG solver.
- */
-template <class TypeTag>
-class BoxCGSSORSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqSSOR<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::CGSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use SSORCGBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxCGSSORSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for a Jacobi-preconditioned CG solver.
- */
-template <class TypeTag>
-class BoxCGJacSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqJac<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::CGSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use JacCGBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxCGJacSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-/*!
- * \brief Backend for a Gauss-Seidel-preconditioned CG solver.
- */
-template <class TypeTag>
-class BoxCGGSSolver : public BoxLinearSolver<TypeTag>
-{
-    typedef BoxLinearSolver<TypeTag> ParentType;
-    typedef typename GET_PROP_TYPE(TypeTag, JacobianMatrix) Matrix;
-    typedef Dumux::OverlappingBCRSMatrix<Matrix> OverlappingMatrix;
-    typedef typename OverlappingMatrix::Overlap Overlap;
-    typedef typename GET_PROP_TYPE(TypeTag, SolutionVector) Vector;
-    typedef Dumux::OverlappingBlockVector<typename Vector::block_type, Overlap> OverlappingVector;
-    typedef Dune::SeqGS<OverlappingMatrix, OverlappingVector, OverlappingVector> SeqPreconditioner;
-    typedef PrecIterBackend<TypeTag, SeqPreconditioner> PrecBackend;
-    typedef Dune::CGSolver<OverlappingVector> Solver;
-    typedef StandardSolverBackend<TypeTag, Solver> SolverBackend;
-
-public:
-    template <class Problem>
-    DUNE_DEPRECATED_MSG("Use GSCGBackend/AMGBackend from seqsolverbackend.hh/amgbackend.hh instead")
-    BoxCGGSSolver(const Problem &problem, int overlapSize = 1)
-    : ParentType(problem, overlapSize)
-    {}
-
-    bool solve(const Matrix &M,
-            Vector &x,
-            const Vector &b)
-    {
-        return ParentType::template solve<PrecBackend, SolverBackend>(M, x, b);
-    }
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/domesticoverlapfrombcrsmatrix.hh b/dumux/linear/domesticoverlapfrombcrsmatrix.hh
deleted file mode 100644
index cbef540..0000000
--- a/dumux/linear/domesticoverlapfrombcrsmatrix.hh
+++ /dev/null
@@ -1,512 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief This class creates and manages the foreign overlap given an
- *        initial list of border indices and a BCRS matrix.
- *
- * The foreign overlap are all (row) indices which overlap with the
- * some of the current process's local indices.
- */
-#ifndef DUMUX_DOMESTIC_OVERLAP_FROM_BCRS_MATRIX_HH
-#define DUMUX_DOMESTIC_OVERLAP_FROM_BCRS_MATRIX_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <list>
-#include <set>
-#include <map>
-#include <memory>
-#include <tuple>
-
-#include <dumux/parallel/mpibuffer.hh>
-
-#include "foreignoverlapfrombcrsmatrix.hh"
-#include "globalindices.hh"
-
-namespace Dumux {
-
-/*!
- * \brief This class creates and manages the foreign overlap given an
- *        initial list of border indices and a BCRS matrix.
- *
- * The foreign overlap are all (row) indices which overlap with the
- * some of the current process's local indices.
- */
-template<class BCRSMatrix>
-class DomesticOverlapFromBCRSMatrix
-{
-    DomesticOverlapFromBCRSMatrix(const DomesticOverlapFromBCRSMatrix &A)
-    {}
-
-    typedef Dumux::ForeignOverlapFromBCRSMatrix<BCRSMatrix> ForeignOverlap;
-    typedef Dumux::GlobalIndices<ForeignOverlap> GlobalIndices;
-
-public:
-    typedef int ProcessRank;
-    typedef int BorderDistance;
-    typedef int Index;
-    typedef Index LocalIndex;
-    typedef std::tuple<Index, BorderDistance, int> IndexDistanceNpeers;
-
-    typedef std::set<ProcessRank> PeerSet;
-
-    typedef std::list<IndexDistanceNpeers> ForeignOverlapWithPeer;
-
-    typedef std::pair<LocalIndex, BorderDistance> IndexDistance;
-    typedef std::set<LocalIndex> DomesticOverlapWithPeer;
-    typedef std::map<ProcessRank, DomesticOverlapWithPeer> DomesticOverlapByRank;
-    typedef std::vector<std::map<ProcessRank, BorderDistance> > DomesticOverlapByIndex;
-
-    typedef std::list<BorderIndex> BorderList;
-
-    /*!
-     * \brief Constructs the foreign overlap given a BCRS matrix and
-     *        an initial list of border indices.
-     */
-    DomesticOverlapFromBCRSMatrix(const BCRSMatrix &A,
-                                  const BorderList &borderList,
-                                  const BorderList &domesticBorderList,
-                                  int overlapSize)
-        : foreignOverlap_(A, borderList, domesticBorderList, overlapSize)
-        , globalIndices_(foreignOverlap_)
-    {
-        myRank_ = 0;
-
-#if HAVE_MPI
-        MPI_Comm_rank(MPI_COMM_WORLD, &myRank_);
-#endif // HAVE_MPI
-
-        buildDomesticOverlap_(A);
-    }
-
-    /*!
-     * \brief Return the border list.
-     *
-     * The border list is the list of (local index, peer index, peer
-     * rank) triples for all indices on a process border.
-     */
-    const BorderList& borderList() const
-    { return foreignOverlap_.borderList(); }
-
-
-    /*!
-     * \brief Returns true iff a domestic index is a border index.
-     */
-    bool isBorder(int domesticIdx) const
-    {
-        return isLocal(domesticIdx) && foreignOverlap_.isBorder(domesticIdx);
-    }
-
-    /*!
-     * \brief Returns true iff a domestic index is a front index.
-     */
-    bool isFront(int domesticIdx) const
-    { return borderDistance_[domesticIdx] == foreignOverlap_.overlapSize(); }
-
-    /*!
-     * \brief Returns the number of processes which "see" a given
-     *        index.
-     */
-    int numPeers(int domesticIdx) const
-    { return domesticOverlapByIndex_[domesticIdx].size(); }
-
-    /*!
-     * \brief Returns whether a given domestic index is a front index
-     *        for a given peer process.
-     */
-    int isFrontFor(int peerRank, int domesticIdx) const
-    {
-        typedef std::map<ProcessRank, BorderDistance>::const_iterator iterator;
-        iterator it = domesticOverlapByIndex_[domesticIdx].find(peerRank);
-        if (it == domesticOverlapByIndex_[domesticIdx].end())
-            return false; // not seen by the process
-
-        return it->second == foreignOverlap_.overlapSize();
-    }
-
-    /*!
-     * \brief Return the number of processes which "see" a domestic
-     *        index and for which the index is not on the front.
-     */
-    int numNonFrontProcesses(int domesticIdx) const
-    {
-        int result = 0;
-        if (!isFront(domesticIdx))
-            ++result;
-
-        typedef std::map<ProcessRank, BorderDistance>::const_iterator iterator;
-        iterator it = domesticOverlapByIndex_[domesticIdx].begin();
-        iterator endIt = domesticOverlapByIndex_[domesticIdx].end();
-        for (; it != endIt; ++it) {
-            if (it->second < overlapSize())
-                ++result;
-        }
-
-        return result;
-    }
-
-    /*!
-     * \brief Returns the rank of the current process.
-     */
-    int myRank() const
-    { return myRank_; }
-
-    /*!
-     * \brief Return the set of process ranks which share an overlap
-     *        with the current process.
-     */
-    const PeerSet &peerSet() const
-    { return peerSet_; }
-
-
-    /*!
-     * \brief Returns the foreign overlap
-     */
-    const ForeignOverlap &foreignOverlap() const
-    { return foreignOverlap_; }
-
-    /*!
-     * \brief Returns the size of the overlap region
-     */
-    int overlapSize() const
-    { return foreignOverlap_.overlapSize(); }
-
-    /*!
-     * \brief Returns the foreign overlap of a peer process
-     */
-    const ForeignOverlapWithPeer &foreignOverlapWithPeer(ProcessRank peerRank) const
-    { return foreignOverlap_.foreignOverlapWithPeer(peerRank); }
-
-    /*!
-     * \brief Returns the domestic overlap with a peer process
-     */
-    const DomesticOverlapWithPeer &domesticOverlapWithPeer(ProcessRank peerRank) const
-    {
-        assert(domesticOverlapWithPeer_.find(peerRank) != domesticOverlapWithPeer_.end());
-        return domesticOverlapWithPeer_.find(peerRank)->second;
-    }
-
-    /*!
-     * \brief Returns true iff a given local index is a remote index for a given peer
-     */
-    bool isRemoteIndexFor(ProcessRank peerRank, Index localIdx) const
-    { return foreignOverlap_.isRemoteIndexFor(peerRank, localIdx); }
-
-    /*!
-     * \brief Returns true iff a given local index is also a local index for a given peer
-     */
-    bool isLocalIndexFor(ProcessRank peerRank, Index domesticIdx) const
-    { return foreignOverlap_.isLocalIndexFor(peerRank, domesticIdx); }
-
-    /*!
-     * \brief Returns true iff a given local index is a domestic index for a given peer
-     */
-    bool isDomesticIndexFor(ProcessRank peerRank, Index domesticIdx) const
-    { return foreignOverlap_.isDomesticIndexFor(peerRank, domesticIdx); }
-
-    /*!
-     * \brief Returns the number local indices
-     */
-    int numLocal() const
-    { return foreignOverlap_.numLocal(); }
-
-    /*!
-     * \brief Returns the number domestic indices.
-     *
-     * The domestic indices are defined as the process' local indices
-     * plus its copies of indices in the overlap regions
-     */
-    int numDomestic() const
-    { return globalIndices_.numDomestic(); }
-
-    /*!
-     * \brief Return true if a domestic index is local for the process
-     *        (i.e. interior or border)
-     */
-    bool isLocal(int domesticIdx) const
-    { return domesticIdx < numLocal(); }
-
-    /*!
-     * \brief Return true iff the current process is the master of a
-     *        given domestic index.
-     */
-    bool iAmMasterOf(int domesticIdx) const
-    {
-        if (!isLocal(domesticIdx))
-            return false;
-        return foreignOverlap_.masterOf(domesticIdx) == myRank_;
-    }
-
-    /*!
-     * \brief Return true iff a given index is shared by more than one process
-     */
-    bool isShared(int domesticIdx) const
-    {
-        if (!isLocal(domesticIdx))
-            return false;
-        return foreignOverlap_.isShared(domesticIdx);
-    }
-
-    /*!
-     * \brief Return true iff a given rank is the master of a given
-     *        domestic index.
-     */
-    bool isMasterOf(int peerRank, int domesticIdx) const
-    {
-        if (isLocal(domesticIdx)) {
-            return foreignOverlap_.masterOf(domesticIdx) == peerRank;
-        }
-
-        // if the local index is a border index, loop over all ranks
-        // for which this index is also a border index. the lowest
-        // rank wins!
-        typedef typename std::map<ProcessRank, BorderDistance>::const_iterator iterator;
-        iterator it = domesticOverlapByIndex_[domesticIdx].begin();
-        iterator endIt = domesticOverlapByIndex_[domesticIdx].end();
-        LocalIndex masterIdx = std::numeric_limits<int>::max();
-        for (; it != endIt; ++it) {
-            masterIdx = std::min(masterIdx, it->first);
-        }
-
-        return masterIdx == peerRank;
-    }
-
-    /*!
-     * \brief Print the foreign overlap for debugging purposes.
-     */
-    void print() const
-    {
-        globalIndices_.print();
-    }
-
-    /*!
-     * \brief Returns a domestic index given a global one
-     */
-    Index globalToDomestic(Index globalIdx) const
-    {
-        return globalIndices_.globalToDomestic(globalIdx);
-    }
-
-    /*!
-     * \brief Returns a global index given a domestic one
-     */
-    Index domesticToGlobal(Index domIdx) const
-    {
-        return globalIndices_.domesticToGlobal(domIdx);
-    }
-
-protected:
-    void buildDomesticOverlap_(const BCRSMatrix &A)
-    {
-        // copy the set of peers from the foreign overlap
-        peerSet_ = foreignOverlap_.peerSet();
-
-        // resize the array which stores the number of peers for
-        // each entry.
-        domesticOverlapByIndex_.resize(numLocal());
-        borderDistance_.resize(numLocal(), -1);
-
-        // for all local indices copy the number of processes from the
-        // foreign overlap
-        for (int localIdx = 0; localIdx < numLocal(); ++localIdx) {
-            const std::map<ProcessRank, BorderDistance> &idxOverlap =
-                foreignOverlap_.foreignOverlapByIndex(localIdx);
-            std::map<ProcessRank, BorderDistance>::const_iterator it = idxOverlap.begin();
-            std::map<ProcessRank, BorderDistance>::const_iterator endIt = idxOverlap.end();
-            for (; it != endIt; ++it) {
-                int peerRank = it->first;
-                int borderDist = it->second;
-                domesticOverlapByIndex_[localIdx][peerRank] = borderDist;
-                domesticOverlapWithPeer_[peerRank].insert(localIdx);
-            }
-        }
-
-        PeerSet::const_iterator peerIt;
-        PeerSet::const_iterator peerEndIt = foreignOverlap_.peerSet().end();
-
-        // send the overlap indices to all peer processes
-        peerIt = foreignOverlap_.peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            sendIndicesToPeer_(peerRank);
-        }
-
-        // receive our overlap from the processes to all peer processes
-        peerIt = foreignOverlap_.peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            receiveIndicesFromPeer_(peerRank);
-        }
-
-        // receive our overlap from the processes to all peer processes
-        peerIt = foreignOverlap_.peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            waitSendIndices_(peerRank);
-        }
-    }
-
-    void sendIndicesToPeer_(int peerRank)
-    {
-#if HAVE_MPI
-        const ForeignOverlapWithPeer &foreignOverlap
-            = foreignOverlap_.foreignOverlapWithPeer(peerRank);
-
-        // first, send a message containing the number of additional
-        // indices stemming from the overlap (i.e. without the border
-        // indices)
-        int numIndices = foreignOverlap.size();
-        numIndicesSendBuff_[peerRank] = std::make_shared<MpiBuffer<int> >(1);
-        (*numIndicesSendBuff_[peerRank])[0] = numIndices;
-        numIndicesSendBuff_[peerRank]->send(peerRank);
-
-        // create MPI buffers
-        indicesSendBuff_[peerRank] = std::make_shared<MpiBuffer<IndexDistanceNpeers> >(numIndices);
-
-        // then send the additional indices themselfs
-        ForeignOverlapWithPeer::const_iterator overlapIt = foreignOverlap.begin();
-        ForeignOverlapWithPeer::const_iterator overlapEndIt = foreignOverlap.end();
-        for (int i = 0; overlapIt != overlapEndIt; ++overlapIt, ++i) {
-            int localIdx = std::get<0>(*overlapIt);
-            int borderDistance = std::get<1>(*overlapIt);
-
-            const std::map<ProcessRank, BorderDistance> &foreignIndexOverlap
-                = foreignOverlap_.foreignOverlapByIndex(localIdx);
-
-            int numPeers = foreignIndexOverlap.size();
-
-            (*indicesSendBuff_[peerRank])[i] =
-                IndexDistanceNpeers(globalIndices_.domesticToGlobal(localIdx),
-                                    borderDistance,
-                                    numPeers);
-
-            // send all peer ranks which see the given index
-            peersSendBuff_[peerRank].push_back(std::make_shared<MpiBuffer<int> >(2*numPeers));
-            typename std::map<ProcessRank, BorderDistance>::const_iterator it = foreignIndexOverlap.begin();
-            typename std::map<ProcessRank, BorderDistance>::const_iterator endIt = foreignIndexOverlap.end();
-            for (int j = 0; it != endIt; ++it, ++j)
-            {
-                (*peersSendBuff_[peerRank][i])[2*j + 0] = it->first;
-                (*peersSendBuff_[peerRank][i])[2*j + 1] = it->second;
-            }
-        }
-
-        // send all messages
-        indicesSendBuff_[peerRank]->send(peerRank);
-        overlapIt = foreignOverlap.begin();
-        for (int i = 0; overlapIt != overlapEndIt; ++overlapIt, ++i) {
-            peersSendBuff_[peerRank][i]->send(peerRank);
-        }
-#endif // HAVE_MPI
-    }
-
-    void waitSendIndices_(int peerRank)
-    {
-        numIndicesSendBuff_[peerRank]->wait();
-        numIndicesSendBuff_[peerRank].template reset<MpiBuffer<int> >(0);
-
-        indicesSendBuff_[peerRank]->wait();
-        indicesSendBuff_[peerRank].template reset<MpiBuffer<IndexDistanceNpeers> >(0);
-
-        const ForeignOverlapWithPeer &foreignPeerOverlap
-            = foreignOverlap_.foreignOverlapWithPeer(peerRank);
-        ForeignOverlapWithPeer::const_iterator overlapIt = foreignPeerOverlap.begin();
-        ForeignOverlapWithPeer::const_iterator overlapEndIt = foreignPeerOverlap.end();
-        for (int i = 0; overlapIt != overlapEndIt; ++overlapIt, ++i) {
-            peersSendBuff_[peerRank][i]->wait();
-            peersSendBuff_[peerRank][i].template reset<MpiBuffer<int> >(0);
-        }
-    }
-
-    void receiveIndicesFromPeer_(int peerRank)
-    {
-#if HAVE_MPI
-        // receive the number of additional indices
-        int numIndices = -1;
-        MpiBuffer<int> numIndicesRecvBuff(1);
-        numIndicesRecvBuff.receive(peerRank);
-        numIndices = numIndicesRecvBuff[0];
-
-        // receive the additional indices themselfs
-        MpiBuffer<IndexDistanceNpeers> recvBuff(numIndices);
-        recvBuff.receive(peerRank);
-        for (int i = 0; i < numIndices; ++i) {
-            int globalIdx = std::get<0>(recvBuff[i]);
-            int borderDistance = std::get<1>(recvBuff[i]);
-            int numPeers = std::get<2>(recvBuff[i]);
-
-            int domesticIdx;
-            if (borderDistance > 0) {
-                // if the index is not on the border, add it to the
-                // domestic overlap
-                if (!globalIndices_.hasGlobalIndex(globalIdx)) {
-                    // create and add a new domestic index
-                    domesticIdx = globalIndices_.numDomestic();
-                    borderDistance_.resize(domesticIdx + 1, std::numeric_limits<int>::max());
-                    domesticOverlapByIndex_.resize(domesticIdx + 1);
-
-                    globalIndices_.addIndex(domesticIdx, globalIdx);
-                    domesticOverlapByIndex_[domesticIdx][peerRank] = borderDistance;
-                    domesticOverlapWithPeer_[peerRank].insert(domesticIdx);
-                }
-                else {
-                    domesticIdx = globalIndices_.globalToDomestic(globalIdx);
-                }
-            }
-            else
-                // border index
-                domesticIdx = globalIndices_.globalToDomestic(globalIdx);
-
-            borderDistance_[domesticIdx] = std::min(borderDistance, borderDistance_[domesticIdx]);
-
-            // receive the peer ranks which see this index
-            MpiBuffer<ProcessRank> peerRanksRecvBuff(2*numPeers);
-            peerRanksRecvBuff.receive(peerRank);
-            for (int j = 0; j < numPeers; ++j) {
-                int seenBy = peerRanksRecvBuff[2*j + 0];
-                int borderDistance2 = peerRanksRecvBuff[2*j + 1];
-                if (seenBy != myRank_) {
-                    domesticOverlapByIndex_[domesticIdx][seenBy] = borderDistance2;
-                    domesticOverlapWithPeer_[seenBy].insert(domesticIdx);
-                    peerSet_.insert(seenBy);
-                }
-            }
-        }
-#endif // HAVE_MPI
-    }
-
-    int myRank_;
-    ForeignOverlap foreignOverlap_;
-
-    DomesticOverlapByRank domesticOverlapWithPeer_;
-    DomesticOverlapByIndex domesticOverlapByIndex_;
-    std::vector<int> borderDistance_;
-
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > numIndicesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<IndexDistanceNpeers> > > indicesSendBuff_;
-    std::map<ProcessRank, std::vector<std::shared_ptr<MpiBuffer<int> > > > peersSendBuff_;
-    GlobalIndices globalIndices_;
-    PeerSet peerSet_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/elementborderlistfromgrid.hh b/dumux/linear/elementborderlistfromgrid.hh
deleted file mode 100644
index 9d644c2..0000000
--- a/dumux/linear/elementborderlistfromgrid.hh
+++ /dev/null
@@ -1,141 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief Creates a list of element indices on the process border which
- *        can be used to construct the foreign overlap.
- */
-#ifndef DUMUX_ELEMENT_BORDER_LIST_FROM_GRID_HH
-#define DUMUX_ELEMENT_BORDER_LIST_FROM_GRID_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <dune/grid/common/datahandleif.hh>
-#include <dune/grid/common/gridenums.hh>
-#include <dune/common/fmatrix.hh>
-#include <dune/istl/bcrsmatrix.hh>
-#include <dune/istl/scalarproducts.hh>
-#include <dune/istl/operators.hh>
-
-#include "borderindex.hh"
-
-#include <algorithm>
-#include <list>
-#include <set>
-#include <map>
-
-namespace Dumux {
-
-
-/*!
- * \brief Uses communication on the grid to find the initial seed list
- *        of indices.
- *
- * \todo implement this class generically. For this, it must be
- *       possible to query the mapper whether it contains entities of
- *       a given codimension without the need to hand it an actual
- *       entity.
- */
-template <class GridView, class ElementMapper>
-class ElementBorderListFromGrid : public Dune::CommDataHandleIF<ElementBorderListFromGrid<GridView, ElementMapper>,
-                                                                int >
-{
-    typedef std::list<BorderIndex> BorderList;
-
-public:
-    ElementBorderListFromGrid(const GridView &gridView,
-                             const ElementMapper &map)
-        : gridView_(gridView), map_(map)
-    {
-        forwardComm_ = true;
-        gridView.communicate(*this,
-                       Dune::InteriorBorder_All_Interface,
-                       Dune::ForwardCommunication);
-
-        forwardComm_ = false;
-        gridView.communicate(*this,
-                       Dune::InteriorBorder_All_Interface,
-                       Dune::BackwardCommunication);
-    }
-
-    // data handle methods
-    bool contains (int dim, int codim) const
-    { return codim == 0; }
-
-    bool fixedsize(int dim, int codim) const
-    { return true; }
-
-    template<class EntityType>
-    size_t size(const EntityType &e) const
-    { return 2; }
-
-    template<class MessageBufferImp, class EntityType>
-    void gather(MessageBufferImp &buff, const EntityType &e) const
-    {
-        buff.write(gridView_.comm().rank());
-        buff.write(map_.index(e));
-    }
-
-    template<class MessageBufferImp, class EntityType>
-    void scatter(MessageBufferImp &buff, const EntityType &e, size_t n)
-    {
-        BorderIndex bIdx;
-
-        bIdx.localIdx = map_.index(e);
-        buff.read(bIdx.peerRank);
-        buff.read(bIdx.peerIdx);
-        bIdx.borderDistance = 0;
-        // this index is not shared between at least two processes
-        // because an element is always in the interior of exactly one
-        // process
-        bIdx.isShared = false;
-
-        if (forwardComm_) {
-            // add the index to the list of indices which we intersect
-            // with remote processes.
-            domesticBorderList_.push_back(bIdx);
-        }
-        else {
-            // add the index to the list of remote processes
-            // intersecting with us.
-            foreignBorderList_.push_back(bIdx);
-        }
-    }
-
-    // Access to the initial border list.
-    const BorderList &foreignBorderList() const
-    { return foreignBorderList_; }
-
-    // Access to the indices which are on the border but which are in
-    // the interior of a remote process
-    const BorderList &domesticBorderList() const
-    { return domesticBorderList_; }
-
-private:
-    const GridView gridView_;
-    const ElementMapper &map_;
-    bool forwardComm_;
-    BorderList foreignBorderList_;
-    BorderList domesticBorderList_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/foreignoverlapfrombcrsmatrix.hh b/dumux/linear/foreignoverlapfrombcrsmatrix.hh
deleted file mode 100644
index 9bdf7e2..0000000
--- a/dumux/linear/foreignoverlapfrombcrsmatrix.hh
+++ /dev/null
@@ -1,483 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief This class creates and manages the foreign overlap given an
- *        initial list of border indices and a BCRS matrix.
- *
- * The foreign overlap are all (row) indices which overlap with the
- * some of the current process's local indices.
- */
-#ifndef DUMUX_FOREIGN_OVERLAP_FROM_BCRS_MATRIX_HH
-#define DUMUX_FOREIGN_OVERLAP_FROM_BCRS_MATRIX_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <list>
-#include <set>
-#include <map>
-#include <tuple>
-
-#if HAVE_MPI
-#include <mpi.h>
-#endif // HAVE_MPI
-
-#include <dune/common/fmatrix.hh>
-#include <dune/istl/bcrsmatrix.hh>
-#include <dune/istl/scalarproducts.hh>
-#include <dune/istl/operators.hh>
-
-#include "borderindex.hh"
-
-namespace Dumux {
-
-/*!
- * \brief This class creates and manages the foreign overlap given an
- *        initial list of border indices and a BCRS matrix.
- *
- * The foreign overlap are all (row) indices which overlap with the
- * some of the current process's local indices.
- */
-template<class BCRSMatrix>
-class ForeignOverlapFromBCRSMatrix
-{
-    ForeignOverlapFromBCRSMatrix(const ForeignOverlapFromBCRSMatrix &A)
-    {}
-
-public:
-    typedef int ProcessRank;
-    typedef int BorderDistance;
-    typedef int Index;
-    typedef Index LocalIndex;
-    typedef std::pair<LocalIndex, ProcessRank> IndexRank;
-    typedef std::tuple<LocalIndex, ProcessRank, BorderDistance> IndexRankDist;
-    typedef std::tuple<Index, BorderDistance, int> IndexDistanceNpeers;
-    typedef std::list<IndexRankDist> SeedList;
-
-    typedef std::set<ProcessRank> PeerSet;
-    typedef std::list<IndexDistanceNpeers> ForeignOverlapWithPeer;
-    typedef std::map<ProcessRank, ForeignOverlapWithPeer> ForeignOverlapByRank;
-    typedef std::vector<std::map<ProcessRank, BorderDistance> > ForeignOverlapByIndex;
-
-    typedef std::list<BorderIndex> BorderList;
-
-    /*!
-     * \brief Constructs the foreign overlap given a BCRS matrix and
-     *        an initial list of border indices.
-     */
-    ForeignOverlapFromBCRSMatrix(const BCRSMatrix &A,
-                                 const BorderList &foreignBorderList,
-                                 const BorderList &domesticBorderList,
-                                 int overlapSize)
-        : foreignBorderList_(foreignBorderList)
-        , domesticBorderList_(domesticBorderList)
-    {
-        overlapSize_ = overlapSize;
-
-        myRank_ = 0;
-#if HAVE_MPI
-        MPI_Comm_rank(MPI_COMM_WORLD, &myRank_);
-#endif
-
-        numLocal_ = A.N();
-
-        // calculate the border list. From this, create an initial
-        // seed list of indices which are in the overlap.
-        SeedList initialSeedList;
-        borderListToSeedList_(initialSeedList, foreignBorderList);
-
-        // find the set of processes which have an overlap with the
-        // local processes. (i.e. the set of processes which we will
-        // have to communicate to.)
-        seedListToPeerSet_(initialSeedList);
-
-        // calculate the foreign overlap for the local partition,
-        // i.e. find the distance of each row from the seed set.
-        foreignOverlapByIndex_.resize(A.N());
-        extendForeignOverlap_(A, initialSeedList, overlapSize);
-
-        updateMasterRanks_(foreignBorderList, domesticBorderList);
-
-        // group foreign overlap by peer process rank
-        groupForeignOverlapByRank_();
-    }
-
-    /*!
-     * \brief Returns true iff a local index is a border index.
-     */
-    bool isBorder(int localIdx) const
-    { return borderIndices_.count(localIdx) > 0; }
-
-    /*!
-     * \brief Return the rank of the master process for a local index.
-     */
-    int masterOf(int localIdx) const
-    { return masterRank_[localIdx]; }
-
-    /*!
-     * \brief Return true if the current rank is the "master" of an
-     *        index.
-     *
-     * We define the master process as the process with the lowest
-     * rank where the index is local. For a process is always the
-     * master of its interior indices, but for border indices it is
-     * only master if the index is not shared with a process of lower
-     * rank.
-     */
-    bool iAmMasterOf(int localIdx) const
-    { return masterRank_[localIdx] == myRank_; }
-
-    /*!
-     * \brief Returns the list of indices which intersect the process
-     *        border and are in the interior of the local process.
-     */
-    const BorderList &foreignBorderList() const
-    { return foreignBorderList_; }
-
-    /*!
-     * \brief Returns the list of indices which intersect the process
-     *        border and are in the interior of some remote process.
-     */
-    const BorderList &domesticBorderList() const
-    { return domesticBorderList_; }
-
-    /*!
-     * \brief Return true if a given local index is a domestic index
-     *        for a peer.
-     */
-    bool isDomesticIndexFor(ProcessRank peerRank, Index localIdx) const
-    {
-        if (!isLocal(localIdx))
-            // our own remote indices do not count!
-            return false;
-
-        typedef std::map<ProcessRank, BorderDistance> BorderDistMap;
-        const BorderDistMap &borderDist = foreignOverlapByIndex_[localIdx];
-        BorderDistMap::const_iterator bdIt = borderDist.find(peerRank);
-        if (bdIt == borderDist.end())
-            return false; // this index is not seen by the peer
-
-        // the index is seen by the peer
-        return true;
-    }
-
-    /*!
-     * \brief Return the list of (local indices, border distance,
-     *        number of processes) triples which are in the overlap of
-     *        a given peer rank.
-     */
-    const ForeignOverlapWithPeer &foreignOverlapWithPeer(int peerRank) const
-    {
-        assert(foreignOverlapByRank_.find(peerRank) != foreignOverlapByRank_.end());
-        return foreignOverlapByRank_.find(peerRank)->second;
-    }
-
-    /*!
-     * \brief Return the map of (peer rank, border distance) for a given local index.
-     */
-    const std::map<ProcessRank, BorderDistance> &foreignOverlapByIndex(int localIdx) const
-    {
-        assert(isLocal(localIdx));
-        return foreignOverlapByIndex_[localIdx];
-    }
-
-    /*!
-     * \brief Return the set of process ranks which share an overlap
-     *        with the current process.
-     */
-    const PeerSet &peerSet() const
-    { return peerSet_; }
-
-    /*!
-     * \brief Returns the number local indices
-     */
-    int numLocal() const
-    { return numLocal_; }
-
-    /*!
-     * \brief Returns true iff a domestic index is local
-     */
-    bool isLocal(int domesticIdx) const
-    {
-        return domesticIdx < numLocal();
-    }
-
-    /*!
-     * \brief Returns true iff a local index is shared with an other process.
-     */
-    bool isShared(int domesticIdx) const
-    { return isLocal(domesticIdx) && isShared_[domesticIdx]; }
-
-    /*!
-     * \brief Return the number of peer ranks for which a given local
-     *        index is visible.
-     */
-    int numPeers(int localIdx) const
-    { return foreignOverlapByIndex_[localIdx].size(); }
-
-    /*!
-     * \brief Returns the size of the overlap region
-     */
-    int overlapSize() const
-    { return overlapSize_; }
-
-    /*!
-     * \brief Print the foreign overlap for debugging purposes.
-     */
-    void print() const
-    {
-        ForeignOverlapByRank::const_iterator it = foreignOverlapByRank_.begin();
-        ForeignOverlapByRank::const_iterator endIt = foreignOverlapByRank_.end();
-        for (; it != endIt; ++it) {
-            std::cout << "Overlap rows(distance) for rank " << it->first << ": ";
-
-            ForeignOverlapWithPeer::const_iterator rowIt = it->second.begin();
-            ForeignOverlapWithPeer::const_iterator rowEndIt = it->second.end();
-            for (; rowIt != rowEndIt; ++rowIt) {
-                std::cout << std::get<0>(*rowIt) << "(" << std::get<1>(*rowIt) << ") ";
-            }
-            std::cout << "\n";
-        }
-    }
-
-protected:
-    // Calculate the set of peer processes from the initial seed list.
-    void seedListToPeerSet_(const SeedList &seedList)
-    {
-        SeedList::const_iterator it = seedList.begin();
-        SeedList::const_iterator endIt = seedList.end();
-        for (; it != endIt; ++it)
-            peerSet_.insert(std::get<1>(*it));
-    }
-
-    // calculate the local border indices given the initial seed list
-    void borderListToSeedList_(SeedList &initialSeedList, const BorderList &borderList)
-    {
-        BorderList::const_iterator it = borderList.begin();
-        BorderList::const_iterator endIt = borderList.end();
-        for (; it != endIt; ++it) {
-            initialSeedList.push_back(IndexRankDist(it->localIdx,
-                                                    it->peerRank,
-                                                    it->borderDistance));
-            borderIndices_.insert(it->localIdx);
-        }
-    }
-
-    // given a list of border indices and provided that
-    // borderListToSeedList_() was already called, calculate the
-    // master process of each local index.
-    void updateMasterRanks_(const BorderList &foreignBorderList,
-                            const BorderList &domesticBorderList)
-    {
-        // determine the minimum rank for all indices
-        masterRank_.resize(numLocal_, myRank_);
-        for (unsigned int localIdx = 0; localIdx < masterRank_.size(); ++localIdx) {
-            int masterRank = myRank_;
-            if (isBorder(localIdx)) {
-                // if the local index is a border index, loop over all ranks
-                // for which this index is also a border index. the lowest
-                // rank wins!
-                typedef typename std::map<ProcessRank, BorderDistance>::const_iterator iterator;
-                iterator it = foreignOverlapByIndex_[localIdx].begin();
-                iterator endIt = foreignOverlapByIndex_[localIdx].end();
-                for (; it != endIt; ++it) {
-                    if (it->second == 0) {
-                        // if the border distance is zero, the rank with the minimum
-                        masterRank = std::min(masterRank, it->first);
-                    }
-                }
-            }
-            masterRank_[localIdx] = masterRank;
-        }
-
-        // overwrite the master rank of the non-shared border indices
-        isShared_.resize(numLocal_, false);
-        BorderList::const_iterator it = foreignBorderList.begin();
-        BorderList::const_iterator endIt = foreignBorderList.end();
-        for (; it != endIt; ++it) {
-            if (!it->isShared)
-                masterRank_[it->localIdx] = myRank_;
-            else
-                isShared_[it->localIdx] = true;
-        }
-
-        // overwrite the master rank of the non-shared border on the
-        // domestic overlap
-        it = domesticBorderList_.begin();
-        endIt = domesticBorderList_.end();
-        for (; it != endIt; ++it) {
-            if (!it->isShared) {
-                masterRank_[it->localIdx] = it->peerRank;
-            }
-        }
-    }
-
-
-    // extend the foreign overlaps by one level. this uses a greedy
-    // algorithm.
-    void extendForeignOverlap_(const BCRSMatrix &A,
-                               SeedList &seedList,
-                               int overlapSize)
-    {
-        // add all processes in the seed rows of the current overlap
-        // level
-        int minOverlapDistance = overlapSize*2;
-        SeedList::const_iterator it = seedList.begin();
-        SeedList::const_iterator endIt = seedList.end();
-        for (; it != endIt; ++it) {
-            int localIdx = std::get<0>(*it);
-            int peerRank = std::get<1>(*it);
-            int distance = std::get<2>(*it);
-            if (foreignOverlapByIndex_[localIdx].count(peerRank) == 0) {
-                foreignOverlapByIndex_[localIdx][peerRank] = distance;
-            }
-            else {
-                foreignOverlapByIndex_[localIdx][peerRank] =
-                    std::min(distance,
-                             foreignOverlapByIndex_[localIdx][peerRank]);
-            }
-
-            minOverlapDistance = std::min(minOverlapDistance, distance);
-        }
-
-        // if we have reached the maximum overlap distance, we're
-        // finished and break the recursion
-        if (minOverlapDistance >= overlapSize)
-            return;
-
-        // find the seed list for the next overlap level using the
-        // seed set for the current level
-        SeedList nextSeedList;
-        it = seedList.begin();
-        for (; it != endIt; ++it) {
-            int rowIdx = std::get<0>(*it);
-            int peerRank = std::get<1>(*it);
-            int borderDist = std::get<2>(*it);
-
-            // find all column indies in the row. The indices of the
-            // columns are the additional indices of the overlap which
-            // we would like to add
-            typedef typename BCRSMatrix::ConstColIterator ColIterator;
-            ColIterator colIt = A[rowIdx].begin();
-            ColIterator colEndIt = A[rowIdx].end();
-            for (; colIt != colEndIt; ++colIt) {
-                int newIdx = colIt.index();
-
-                // if the process is already is in the overlap of the
-                // column index, ignore this column index!
-                if (foreignOverlapByIndex_[newIdx].count(peerRank) > 0)
-                    continue;
-
-
-                // check whether the new index is already in the overlap
-                bool hasIndex = false;
-                typename SeedList::iterator sIt = nextSeedList.begin();
-                typename SeedList::iterator sEndIt = nextSeedList.end();
-                for (; sIt != sEndIt; ++sIt) {
-                    if (std::get<0>(*sIt) == newIdx &&
-                        std::get<1>(*sIt) == peerRank)
-                    {
-                        hasIndex = true;
-                        std::get<2>(*sIt) = std::min(std::get<2>(*sIt), borderDist + 1);
-                        break;
-                    }
-                }
-                if (hasIndex)
-                    continue; // we already have this index
-
-                // add the current processes to the seed list for the
-                // next overlap level
-                IndexRankDist newTuple(newIdx, peerRank, borderDist + 1);
-                nextSeedList.push_back(newTuple);
-            }
-        }
-
-        // clear the old seed list to save some memory
-        seedList.clear();
-
-        // Perform the same excercise for the next overlap distance
-        extendForeignOverlap_(A,
-                              nextSeedList,
-                              overlapSize);
-    }
-
-    // assuming that the foreign overlap has been created for each
-    // local index, this method groups the foreign overlap by peer
-    // process rank
-    void groupForeignOverlapByRank_()
-    {
-        // loop over all indices which are in the overlap of some
-        // process
-        int nIndices = foreignOverlapByIndex_.size();
-        for (int i = 0; i < nIndices; ++i)
-        {
-            // loop over the list of processes for the current index
-            std::map<ProcessRank, BorderDistance>::const_iterator it =
-                foreignOverlapByIndex_[i].begin();
-            std::map<ProcessRank, BorderDistance>::const_iterator endIt =
-                foreignOverlapByIndex_[i].end();
-            int nRanks = foreignOverlapByIndex_[i].size();
-            for (; it != endIt; ++it)  {
-                IndexDistanceNpeers tmp(i, it->second, nRanks);
-                foreignOverlapByRank_[it->first].push_back(tmp);
-            }
-        }
-    }
-
-    // set of processes with which we have to communicate
-    PeerSet peerSet_;
-
-    // the list of indices on the border
-    const BorderList &foreignBorderList_;
-    const BorderList &domesticBorderList_;
-
-    // an array which contains the rank of the master process for each
-    // index
-    std::vector<ProcessRank> masterRank_;
-
-    // an array which stores whether an index is also in the interior
-    // of some other process
-    std::vector<bool> isShared_;
-
-    // set of all local indices which are on the border of some remote
-    // process
-    std::set<LocalIndex> borderIndices_;
-
-    // stores the set of process ranks which are in the overlap for a
-    // given row index "owned" by the current rank. The second value
-    // store the distance from the nearest process border.
-    ForeignOverlapByIndex foreignOverlapByIndex_;
-
-    // stores a list of foreign overlap indices for each rank
-    ForeignOverlapByRank foreignOverlapByRank_;
-
-    // extend of the overlap region
-    int overlapSize_;
-
-    // number of local indices
-    int numLocal_;
-
-    // the MPI rank of the local process
-    int myRank_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/globalindices.hh b/dumux/linear/globalindices.hh
deleted file mode 100644
index aa67af8..0000000
--- a/dumux/linear/globalindices.hh
+++ /dev/null
@@ -1,351 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief This class maps domestic row indices to and from "global"
- *        indices which is used to construct an algebraic overlap
- *        for the parallel linear solvers.
- */
-#ifndef DUMUX_GLOBAL_INDICES_HH
-#define DUMUX_GLOBAL_INDICES_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <list>
-#include <set>
-#include <map>
-
-#if HAVE_MPI
-#include <mpi.h>
-#endif
-
-#include <dune/common/fmatrix.hh>
-#include <dune/istl/bcrsmatrix.hh>
-#include <dune/istl/scalarproducts.hh>
-#include <dune/istl/operators.hh>
-
-#include "borderindex.hh"
-
-namespace Dumux {
-
-/*!
- * \brief This class maps domestic row indices to and from "global"
- *        indices which is used to construct an algebraic overlap
- *        for the parallel linear solvers.
- */
-template <class ForeignOverlap>
-class GlobalIndices
-{
-    GlobalIndices(const GlobalIndices &A)
-    {}
-
-    typedef int ProcessRank;
-    typedef int Index;
-
-    typedef std::set<ProcessRank> PeerSet;
-
-
-    typedef std::list<BorderIndex> BorderList;
-
-
-    typedef std::map<Index, Index> GlobalToDomesticMap;
-    typedef std::map<Index, Index> DomesticToGlobalMap;
-
-public:
-    GlobalIndices(const ForeignOverlap &foreignOverlap)
-        : foreignOverlap_(foreignOverlap)
-    {
-        myRank_ = 0;
-        mpiSize_ = 1;
-
-#if HAVE_MPI
-        MPI_Comm_rank(MPI_COMM_WORLD, &myRank_);
-        MPI_Comm_size(MPI_COMM_WORLD, &mpiSize_);
-#endif
-
-        // calculate the domestic overlap (i.e. all overlap indices in
-        // foreign processes which the current process overlaps.)
-        // This requires communication via MPI.
-        buildGlobalIndices_();
-    }
-
-    /*!
-     * \brief Converts a domestic index to a global one.
-     */
-    int domesticToGlobal(int domesticIdx) const
-    {
-        assert(domesticToGlobal_.find(domesticIdx) != domesticToGlobal_.end());
-
-        return domesticToGlobal_.find(domesticIdx)->second;
-    }
-
-    /*!
-     * \brief Converts a global index to a domestic one.
-     */
-    int globalToDomestic(int globalIdx) const
-    {
-        assert(globalToDomestic_.find(globalIdx) != globalToDomestic_.end());
-
-        return globalToDomestic_.find(globalIdx)->second;
-    };
-
-    /*!
-     * \brief Returns the number of indices which are in the interior or
-     *        on the border of the current rank.
-     */
-    int numLocal() const
-    { return foreignOverlap_.numLocal(); }
-
-    /*!
-     * \brief Returns the number domestic indices.
-     *
-     * The domestic indices are defined as the process' local indices
-     * plus its copies of indices in the overlap regions
-     */
-    int numDomestic() const
-    {
-        return numDomestic_;
-    }
-
-    /*!
-     * \brief Add an index to the domestic<->global mapping.
-     */
-    void addIndex(int domesticIdx, int globalIdx)
-    {
-        domesticToGlobal_[domesticIdx] = globalIdx;
-        globalToDomestic_[globalIdx] = domesticIdx;
-        numDomestic_ = domesticToGlobal_.size();
-
-        assert(domesticToGlobal_.size() == globalToDomestic_.size());
-    };
-
-    /*!
-     * \brief Send a border index to a remote process.
-     */
-    void sendBorderIndex(int peerRank, int domesticIdx, int peerLocalIdx)
-    {
-#if HAVE_MPI
-        int sendBuff[2];
-        sendBuff[0] = peerLocalIdx;
-        sendBuff[1] = domesticToGlobal(domesticIdx);
-        MPI_Send(sendBuff, // buff
-                  2, // count
-                  MPI_INT, // data type
-                  peerRank,
-                  0, // tag
-                  MPI_COMM_WORLD); // communicator
-#endif // HAVE_MPI
-    };
-
-    /*!
-     * \brief Receive an index on the border from a remote
-     *        process and add it the translation maps.
-     */
-    void receiveBorderIndex(int peerRank)
-    {
-#if HAVE_MPI
-        int recvBuff[2];
-        MPI_Recv(recvBuff, // buff
-                 2, // count
-                 MPI_INT, // data type
-                 peerRank,
-                 0, // tag
-                 MPI_COMM_WORLD, // communicator
-                 MPI_STATUS_IGNORE); // status
-
-        int domesticIdx = recvBuff[0];
-        int globalIdx = recvBuff[1];
-        addIndex(domesticIdx, globalIdx);
-#endif // HAVE_MPI
-    };
-
-    /*!
-     * \brief Return true iff a given global index already exists
-     */
-    bool hasGlobalIndex(int globalIdx) const
-    { return globalToDomestic_.find(globalIdx) != globalToDomestic_.end(); };
-
-    /*!
-     * \brief Prints the global indices of all domestic indices
-     *        for debugging purposes.
-     */
-    void print() const
-    {
-        std::cout << "(domestic index, global index, domestic->global->domestic) list for rank " <<
-            myRank_ << "\n";
-
-        for (int domIdx = 0; domIdx < domesticToGlobal_.size(); ++ domIdx) {
-            std::cout << "(" <<  domIdx
-                      << ", " << domesticToGlobal(domIdx)
-                      << ", " << globalToDomestic(domesticToGlobal(domIdx))
-                      << ") ";
-        }
-        std::cout << "\n";
-    };
-
-protected:
-    // retrieve the offset for the indices where we are master in the
-    // global index list
-    void buildGlobalIndices_()
-    {
-#if HAVE_MPI
-        numDomestic_ = 0;
-#else
-        numDomestic_ = foreignOverlap_.numLocal();
-#endif
-
-#if HAVE_MPI
-        if (myRank_ == 0) {
-            // the first rank starts at index zero
-            domesticOffset_ = 0;
-        }
-        else {
-            // all other ranks retrieve their offset from the next
-            // lower rank
-            MPI_Recv(&domesticOffset_, // buffer
-                     1, // count
-                     MPI_INT, // data type
-                     myRank_ - 1,
-                     0, // tag
-                     MPI_COMM_WORLD, // communicator
-                     MPI_STATUS_IGNORE);
-        }
-
-        // create maps for all master indices
-        int numMaster = 0;
-        for (int i = 0; i < foreignOverlap_.numLocal(); ++i) {
-            if (!foreignOverlap_.iAmMasterOf(i)) {
-                continue;
-            }
-
-            addIndex(i, domesticOffset_ + numMaster);
-            ++ numMaster;
-        }
-
-        if (myRank_ < mpiSize_ - 1) {
-            // send the domestic offset plus the number of master
-            // indices to the process which is one rank higher
-            // all other ranks retrieve their offset from the next
-            // lower rank
-            int tmp = domesticOffset_ + numMaster;
-            MPI_Send(&tmp, // buff
-                     1, // count
-                     MPI_INT, // data type
-                     myRank_ + 1, // peer rank
-                     0, // tag
-                     MPI_COMM_WORLD); // communicator
-        }
-
-        typename PeerSet::const_iterator peerIt;
-        typename PeerSet::const_iterator peerEndIt = peerSet_().end();
-        // receive the border indices from the lower ranks
-        peerIt = peerSet_().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            if (*peerIt < myRank_)
-                receiveBorderFrom_(*peerIt);
-        }
-
-        // send the border indices to the higher ranks
-        peerIt = peerSet_().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            if (*peerIt > myRank_)
-                sendBorderTo_(*peerIt);
-        }
-
-        // receive the border indices from the higher ranks
-        peerIt = peerSet_().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            if (*peerIt > myRank_)
-                receiveBorderFrom_(*peerIt);
-        }
-
-        // send the border indices to the lower ranks
-        peerIt = peerSet_().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            if (*peerIt < myRank_)
-                sendBorderTo_(*peerIt);
-        }
-#endif // HAVE_MPI
-    }
-
-    void sendBorderTo_(ProcessRank peerRank)
-    {
-#if HAVE_MPI
-        // send (local index on myRank, global index) pairs to the
-        // peers
-        BorderList::const_iterator borderIt = foreignBorderList_().begin();
-        BorderList::const_iterator borderEndIt = foreignBorderList_().end();
-        for (; borderIt != borderEndIt; ++borderIt) {
-            int borderPeer = borderIt->peerRank;
-            if (borderPeer != peerRank)
-                continue;
-
-            int localIdx = borderIt->localIdx;
-            int peerIdx = borderIt->peerIdx;
-            if (foreignOverlap_.iAmMasterOf(borderIt->localIdx)) {
-                sendBorderIndex(borderPeer, localIdx, peerIdx);
-            }
-        }
-#endif // HAVE_MPI
-    }
-
-    void receiveBorderFrom_(ProcessRank peerRank)
-    {
-#if HAVE_MPI
-        // retrieve the global indices for which we are not master
-        // from the processes with lower rank
-        BorderList::const_iterator borderIt = domesticBorderList_().begin();
-        BorderList::const_iterator borderEndIt = domesticBorderList_().end();
-        for (; borderIt != borderEndIt; ++borderIt) {
-            int borderPeer = borderIt->peerRank;
-            if (borderPeer != peerRank)
-                continue;
-
-            if (foreignOverlap_.masterOf(borderIt->localIdx) == borderPeer) {
-                receiveBorderIndex(borderPeer);
-            }
-        }
-#endif // HAVE_MPI
-    };
-
-    const PeerSet &peerSet_() const
-    { return foreignOverlap_.peerSet(); }
-
-    const BorderList &foreignBorderList_() const
-    { return foreignOverlap_.foreignBorderList(); }
-
-    const BorderList &domesticBorderList_() const
-    { return foreignOverlap_.domesticBorderList(); }
-
-
-    int myRank_;
-    int mpiSize_;
-
-    int domesticOffset_;
-    int numDomestic_;
-    const ForeignOverlap &foreignOverlap_;
-
-    GlobalToDomesticMap globalToDomestic_;
-    DomesticToGlobalMap domesticToGlobal_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/overlappingbcrsmatrix.hh b/dumux/linear/overlappingbcrsmatrix.hh
deleted file mode 100644
index 6290519..0000000
--- a/dumux/linear/overlappingbcrsmatrix.hh
+++ /dev/null
@@ -1,589 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A BCRS matrix which creates an algebraic overlap of
- *        arbitrary size.
- */
-#ifndef DUMUX_OVERLAPPING_BCRS_MATRIX_HH
-#define DUMUX_OVERLAPPING_BCRS_MATRIX_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <algorithm>
-#include <list>
-#include <set>
-#include <map>
-#include <memory>
-
-#include <dune/istl/scalarproducts.hh>
-#include <dune/istl/io.hh>
-
-#include <dumux/linear/domesticoverlapfrombcrsmatrix.hh>
-#include <dumux/linear/globalindices.hh>
-#include <dumux/parallel/mpibuffer.hh>
-
-namespace Dumux {
-
-template <class BCRSMatrix>
-class OverlappingBCRSMatrix : public BCRSMatrix
-{
-    typedef BCRSMatrix ParentType;
-
-public:
-    typedef Dumux::DomesticOverlapFromBCRSMatrix<BCRSMatrix> Overlap;
-
-private:
-    typedef typename Overlap::Index Index;
-    typedef typename Overlap::Index ColIndex;
-    typedef typename Overlap::PeerSet PeerSet;
-    typedef typename Overlap::BorderList BorderList;
-    typedef typename Overlap::ProcessRank ProcessRank;
-    typedef typename Overlap::ForeignOverlapWithPeer ForeignOverlapWithPeer;
-
-    typedef std::vector<std::set<ColIndex> > Entries;
-
-public:
-    typedef typename ParentType::ColIterator ColIterator;
-    typedef typename ParentType::ConstColIterator ConstColIterator;
-    typedef typename ParentType::block_type block_type;
-
-
-    // no real copying done at the moment
-    OverlappingBCRSMatrix(const OverlappingBCRSMatrix &M)
-        : ParentType(M)
-    {
-    }
-
-    OverlappingBCRSMatrix(const BCRSMatrix &M,
-                          const BorderList &foreignBorderList,
-                          const BorderList &domesticBorderList,
-                          int overlapSize)
-    {
-        overlap_ = std::make_shared<Overlap>(M, foreignBorderList, domesticBorderList, overlapSize);
-        myRank_ = 0;
-#if HAVE_MPI
-        MPI_Comm_rank(MPI_COMM_WORLD, &myRank_);
-#endif // HAVE_MPI
-
-        // build the overlapping matrix from the non-overlapping
-        // matrix and the overlap
-        build_(M);
-    }
-
-    /*!
-     * \brief Returns the domestic overlap for the process.
-     */
-    const Overlap &overlap() const
-    { return *overlap_; }
-
-    /*!
-     * \brief Assign and syncronize the overlapping matrix from a
-     *       non-overlapping one.
-     */
-    void assignAdd(const BCRSMatrix &M)
-    {
-        // first, set everything to 0
-        BCRSMatrix::operator=(0.0);
-
-        // assign the local rows
-        for (unsigned int rowIdx = 0; rowIdx < M.N(); ++rowIdx) {
-            ConstColIterator colIt = M[rowIdx].begin();
-            ConstColIterator colEndIt = M[rowIdx].end();
-            ColIterator myColIt = (*this)[rowIdx].begin();
-            for (; colIt != colEndIt; ++colIt) {
-                while (true) {
-                    if (myColIt.index() == colIt.index())
-                        break;
-
-                    ++ myColIt;
-                }
-                assert(myColIt.index() == colIt.index());
-
-                (*myColIt) = *colIt;
-            }
-        }
-
-        // communicate and add the contents of overlapping rows
-        syncAdd_();
-    }
-
-    /*!
-     * \brief Assign and syncronize the overlapping matrix from a
-     *       non-overlapping one.
-     *
-     * The non-master entries are copied from the master
-     */
-    void assignCopy(const BCRSMatrix &M)
-    {
-        // first, set everything to 0
-        BCRSMatrix::operator=(0.0);
-
-        // assign the local rows
-        for (int rowIdx = 0; rowIdx < M.N(); ++rowIdx) {
-            ConstColIterator colIt = M[rowIdx].begin();
-            ConstColIterator colEndIt = M[rowIdx].end();
-            ColIterator myColIt = (*this)[rowIdx].begin();
-            for (; colIt != colEndIt; ++colIt) {
-                while (true) {
-                    if (myColIt.index() == colIt.index())
-                        break;
-
-                    ++ myColIt;
-                }
-                assert(myColIt.index() == colIt.index());
-
-                (*myColIt) = *colIt;
-            }
-        }
-
-        // communicate and add the contents of overlapping rows
-        syncCopy_();
-    }
-
-    void print() const
-    {
-        overlap_->print();
-
-        for (int i = 0; i < this->N(); ++i) {
-            if (overlap_->isLocal(i))
-                std::cout << " ";
-            else
-                std::cout << "*";
-            std::cout << "row " << i << " ";
-
-            typedef typename BCRSMatrix::ConstColIterator ColIt;
-            ColIt colIt = (*this)[i].begin();
-            ColIt colEndIt = (*this)[i].end();
-            for (int j = 0; j < this->M(); ++j) {
-                if (colIt != colEndIt && j == colIt.index()) {
-                    ++colIt;
-                    if (overlap_->isBorder(j))
-                        std::cout << "|";
-                    else if (overlap_->isLocal(j))
-                        std::cout << "X";
-                    else
-                        std::cout << "*";
-                }
-                else
-                    std::cout << " ";
-            }
-            std::cout << "\n";
-        }
-        Dune::printmatrix(std::cout, *static_cast<const BCRSMatrix*>(this), "M", "row");
-    }
-
-private:
-    void build_(const BCRSMatrix &M)
-    {
-        int numDomestic = overlap_->numDomestic();
-
-        // allocate the rows
-        this->setSize(numDomestic, numDomestic);
-        this->setBuildMode(ParentType::random);
-
-        // communicate the entries
-        buildIndices_(M);
-    }
-
-    int numDomesticEntriesInRowFor_(const BCRSMatrix &M, int peerRank, int rowIdx)
-    {
-        int numEntries = 0;
-
-        typedef typename BCRSMatrix::ConstColIterator ColIt;
-        ColIt colIt = M[rowIdx].begin();
-        ColIt colEndIt = M[rowIdx].end();
-        for (; colIt != colEndIt; ++colIt) {
-            if (overlap_->isDomesticIndexFor(peerRank, colIt.index()))
-                ++numEntries;
-        }
-
-        return numEntries;
-    }
-
-    void buildIndices_(const BCRSMatrix &M)
-    {
-        /////////
-        // first, add all local matrix entries
-        /////////
-        entries_.resize(overlap_->numDomestic());
-        for (unsigned int rowIdx = 0; rowIdx < M.N(); ++rowIdx) {
-            ConstColIterator colIt = M[rowIdx].begin();
-            ConstColIterator colEndIt = M[rowIdx].end();
-            for (; colIt != colEndIt; ++colIt) {
-                entries_[rowIdx].insert(colIt.index());
-            }
-        }
-
-        /////////
-        // add the indices for all additional entries
-        /////////
-
-        // first, send all our indices to all peers
-        const PeerSet &peerSet = overlap_->foreignOverlap().peerSet();
-        typename PeerSet::const_iterator peerIt = peerSet.begin();
-        typename PeerSet::const_iterator peerEndIt = peerSet.end();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            unsigned int peerRank = *peerIt;
-            sendRowIndices_(M, peerRank);
-        }
-
-        // then recieve all indices from the peers
-        peerIt = peerSet.begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            unsigned int peerRank = *peerIt;
-            receiveRowIndices_(peerRank);
-        }
-
-        // wait until all send operations are completed
-        peerIt = peerSet.begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            unsigned int peerRank = *peerIt;
-
-            numRowsSendBuff_[peerRank]->wait();
-            rowSizesSendBuff_[peerRank]->wait();
-            rowIndicesSendBuff_[peerRank]->wait();
-            entryIndicesSendBuff_[peerRank]->wait();
-
-            // convert the global indices in the send buffers to domestic
-            // ones
-            globalToDomesticBuff_(*rowIndicesSendBuff_[peerRank]);
-            globalToDomesticBuff_(*entryIndicesSendBuff_[peerRank]);
-        }
-
-        /////////
-        // actually initialize the BCRS matrix structure
-        /////////
-
-        // set the row sizes
-        unsigned int numDomestic = overlap_->numDomestic();
-        for (unsigned int rowIdx = 0; rowIdx < numDomestic; ++rowIdx) {
-            this->setrowsize(rowIdx, entries_[rowIdx].size());
-        }
-        this->endrowsizes();
-
-        // set the indices
-        for (unsigned int rowIdx = 0; rowIdx < numDomestic; ++rowIdx) {
-            const std::set<ColIndex> &colIndices = entries_[rowIdx];
-
-            typename std::set<ColIndex>::const_iterator colIdxIt = colIndices.begin();
-            typename std::set<ColIndex>::const_iterator colIdxEndIt = colIndices.end();
-            for (; colIdxIt != colIdxEndIt; ++colIdxIt)
-                this->addindex(rowIdx, *colIdxIt);
-        }
-        this->endindices();
-
-        // free the memory occupied by the array of the matrix entries
-        entries_.resize(0);
-    }
-
-    // send the overlap indices to a peer
-    void sendRowIndices_(const BCRSMatrix &M, int peerRank)
-    {
-#if HAVE_MPI
-        // send the number of non-border entries in the matrix
-        const ForeignOverlapWithPeer &peerOverlap = overlap_->foreignOverlapWithPeer(peerRank);
-
-        // send size of foreign overlap to peer
-        int numOverlapRows = peerOverlap.size();
-        numRowsSendBuff_[peerRank] = std::make_shared<MpiBuffer<int> >(1);
-        (*numRowsSendBuff_[peerRank])[0] = numOverlapRows;
-        numRowsSendBuff_[peerRank]->send(peerRank);
-
-        rowSizesSendBuff_[peerRank] = std::make_shared<MpiBuffer<Index> >(numOverlapRows);
-        rowIndicesSendBuff_[peerRank] = std::make_shared<MpiBuffer<Index> >(numOverlapRows);
-
-        // create the row size MPI buffer
-        int numEntries = 0;
-        typename ForeignOverlapWithPeer::const_iterator it = peerOverlap.begin();
-        typename ForeignOverlapWithPeer::const_iterator endIt = peerOverlap.end();
-        int i = 0;
-        for (; it != endIt; ++it, ++i) {
-            int rowIdx = std::get<0>(*it);
-            assert(overlap_->isDomesticIndexFor(peerRank, rowIdx));
-
-            typedef typename BCRSMatrix::ConstColIterator ColIt;
-            ColIt colIt = M[rowIdx].begin();
-            ColIt colEndIt = M[rowIdx].end();
-            int j = 0;
-            for (; colIt != colEndIt; ++colIt) {
-                if (overlap_->isDomesticIndexFor(peerRank, colIt.index())) {
-                    ++ j;
-                }
-            }
-
-            (*rowSizesSendBuff_[peerRank])[i] = j;
-            (*rowIndicesSendBuff_[peerRank])[i] = overlap_->domesticToGlobal(rowIdx);
-            numEntries += j;
-        }
-
-        // actually communicate with the peer
-        rowIndicesSendBuff_[peerRank]->send(peerRank);
-        rowSizesSendBuff_[peerRank]->send(peerRank);
-
-        // create and fill the MPI buffer for the indices of the
-        // matrix entries
-        entryIndicesSendBuff_[peerRank] = std::make_shared<MpiBuffer<Index> >(numEntries);
-        i = 0;
-        it = peerOverlap.begin();
-        for (; it != endIt; ++it) {
-            int rowIdx = std::get<0>(*it);
-            assert(overlap_->isDomesticIndexFor(peerRank, rowIdx));
-
-            typedef typename BCRSMatrix::ConstColIterator ColIt;
-            ColIt colIt = M[rowIdx].begin();
-            ColIt colEndIt = M[rowIdx].end();
-            for (; colIt != colEndIt; ++colIt) {
-                if (overlap_->isDomesticIndexFor(peerRank, colIt.index())) {
-                    (*entryIndicesSendBuff_[peerRank])[i] = overlap_->domesticToGlobal(colIt.index());
-                    ++i;
-                }
-            }
-        }
-        entryIndicesSendBuff_[peerRank]->send(peerRank);
-
-        // create the send buffers for the values of the matrix
-        // entries
-        entryValuesSendBuff_[peerRank] = std::make_shared<MpiBuffer<block_type> >(numEntries);
-#endif // HAVE_MPI
-    }
-
-    // receive the overlap indices to a peer
-    void receiveRowIndices_(int peerRank)
-    {
-#if HAVE_MPI
-        // receive size of foreign overlap to peer
-        int numOverlapRows;
-        MpiBuffer<int> numRowsRecvBuff(1);
-        numRowsRecvBuff.receive(peerRank);
-        numOverlapRows = numRowsRecvBuff[0];
-
-        // create receive buffer for the row sizes and receive them
-        // from the peer
-        rowIndicesRecvBuff_[peerRank] = std::make_shared<MpiBuffer<Index> >(numOverlapRows);
-        rowSizesRecvBuff_[peerRank] = std::make_shared<MpiBuffer<int> >(numOverlapRows);
-        rowIndicesRecvBuff_[peerRank]->receive(peerRank);
-        rowSizesRecvBuff_[peerRank]->receive(peerRank);
-
-        // calculate the total number of indices which are send by the
-        // peer
-        int totalIndices = 0;
-        for (int i = 0; i < numOverlapRows; ++ i) {
-            totalIndices += (*rowSizesRecvBuff_[peerRank])[i];
-        }
-
-        // create the buffer to store the column indices of the matrix entries
-        entryIndicesRecvBuff_[peerRank] = std::make_shared<MpiBuffer<Index> >(totalIndices);
-        entryValuesRecvBuff_[peerRank] = std::make_shared<MpiBuffer<block_type> >(totalIndices);
-
-        // communicate with the peer
-        entryIndicesRecvBuff_[peerRank]->receive(peerRank);
-
-        // convert the global indices in the receive buffers to
-        // domestic ones
-        globalToDomesticBuff_(*rowIndicesRecvBuff_[peerRank]);
-        globalToDomesticBuff_(*entryIndicesRecvBuff_[peerRank]);
-
-        // add the entries to the global entry map
-        int k = 0;
-        for (int i = 0; i < numOverlapRows; ++ i) {
-            int domRowIdx = (*rowIndicesRecvBuff_[peerRank])[i];
-            for (int j = 0; j < (*rowSizesRecvBuff_[peerRank])[i]; ++j) {
-                int domColIdx = (*entryIndicesRecvBuff_[peerRank])[k];
-                entries_[domRowIdx].insert(domColIdx);
-                ++k;
-            }
-        }
-#endif // HAVE_MPI
-    }
-
-    // communicates and adds up the contents of overlapping rows
-    void syncAdd_()
-    {
-        // first, send all entries to the peers
-        const PeerSet &peerSet = overlap_->foreignOverlap().peerSet();
-        typename PeerSet::const_iterator peerIt = peerSet.begin();
-        typename PeerSet::const_iterator peerEndIt = peerSet.end();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-
-            sendEntries_(peerRank);
-        }
-
-        // then, receive entries from the peers
-        peerIt = peerSet.begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-
-            receiveAddEntries_(peerRank);
-        }
-
-        // finally, make sure that everything which we send was
-        // received by the peers
-        peerIt = peerSet.begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            entryValuesSendBuff_[peerRank]->wait();
-        }
-    }
-
-    // communicates and copies the contents of overlapping rows from
-    // the master
-    void syncCopy_()
-    {
-        // first, send all entries to the peers
-        const PeerSet &peerSet = overlap_->foreignOverlap().peerSet();
-        typename PeerSet::const_iterator peerIt = peerSet.begin();
-        typename PeerSet::const_iterator peerEndIt = peerSet.end();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-
-            sendEntries_(peerRank);
-        }
-
-        // then, receive entries from the peers
-        peerIt = peerSet.begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-
-            receiveCopyEntries_(peerRank);
-        }
-
-        // finally, make sure that everything which we send was
-        // received by the peers
-        peerIt = peerSet.begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            entryValuesSendBuff_[peerRank]->wait();
-        }
-    }
-
-    void sendEntries_(int peerRank)
-    {
-#if HAVE_MPI
-        MpiBuffer<block_type> &mpiSendBuff = *entryValuesSendBuff_[peerRank];
-
-        MpiBuffer<int> &mpiRowIndicesSendBuff = *rowIndicesSendBuff_[peerRank];
-        MpiBuffer<int> &mpiRowSizesSendBuff = *rowSizesSendBuff_[peerRank];
-        MpiBuffer<int> &mpiColIndicesSendBuff = *entryIndicesSendBuff_[peerRank];
-
-        // fill the send buffer
-        int k = 0;
-        for (int i = 0; i < mpiRowIndicesSendBuff.size(); ++i) {
-            Index domRowIdx = mpiRowIndicesSendBuff[i];
-
-            typedef typename ParentType::ConstColIterator ColIt;
-            ColIt colIt = (*this)[domRowIdx].begin();
-            for (int j = 0; j < mpiRowSizesSendBuff[i]; ++j) {
-                Index domColIdx = mpiColIndicesSendBuff[k];
-                for (; colIt.index() < domColIdx; ++colIt)
-                { }
-                assert(colIt.index() == domColIdx);
-
-                mpiSendBuff[k] = (*colIt);
-                ++ k;
-            }
-        }
-
-        mpiSendBuff.send(peerRank);
-#endif // HAVE_MPI
-    }
-
-    void receiveAddEntries_(int peerRank)
-    {
-#if HAVE_MPI
-        MpiBuffer<block_type> &mpiRecvBuff = *entryValuesRecvBuff_[peerRank];
-
-        MpiBuffer<int> &mpiRowIndicesRecvBuff = *rowIndicesRecvBuff_[peerRank];
-        MpiBuffer<int> &mpiRowSizesRecvBuff = *rowSizesRecvBuff_[peerRank];
-        MpiBuffer<int> &mpiColIndicesRecvBuff = *entryIndicesRecvBuff_[peerRank];
-
-        mpiRecvBuff.receive(peerRank);
-
-        // retrieve the values from the receive buffer
-        int k = 0;
-        for (int i = 0; i < mpiRowIndicesRecvBuff.size(); ++i) {
-            Index domRowIdx = mpiRowIndicesRecvBuff[i];
-            for (int j = 0; j < mpiRowSizesRecvBuff[i]; ++j) {
-                Index domColIdx = mpiColIndicesRecvBuff[k];
-
-                (*this)[domRowIdx][domColIdx] += mpiRecvBuff[k];
-                ++ k;
-            }
-        }
-#endif // HAVE_MPI
-    }
-
-    void receiveCopyEntries_(int peerRank)
-    {
-#if HAVE_MPI
-        MpiBuffer<block_type> &mpiRecvBuff = *entryValuesRecvBuff_[peerRank];
-
-        MpiBuffer<int> &mpiRowIndicesRecvBuff = *rowIndicesRecvBuff_[peerRank];
-        MpiBuffer<int> &mpiRowSizesRecvBuff = *rowSizesRecvBuff_[peerRank];
-        MpiBuffer<int> &mpiColIndicesRecvBuff = *entryIndicesRecvBuff_[peerRank];
-
-        mpiRecvBuff.receive(peerRank);
-
-        // retrieve the values from the receive buffer
-        int k = 0;
-        for (int i = 0; i < mpiRowIndicesRecvBuff.size(); ++i) {
-            Index domRowIdx = mpiRowIndicesRecvBuff[i];
-            for (int j = 0; j < mpiRowSizesRecvBuff[i]; ++j) {
-                Index domColIdx = mpiColIndicesRecvBuff[k];
-
-                if (!overlap_->iAmMasterOf(domRowIdx) ||
-                    !overlap_->iAmMasterOf(domColIdx))
-                {
-                    (*this)[domRowIdx][domColIdx] = mpiRecvBuff[k];
-                }
-
-                ++ k;
-            }
-        }
-#endif // HAVE_MPI
-    }
-
-    void globalToDomesticBuff_(MpiBuffer<Index> &idxBuff)
-    {
-        for (int i = 0; i < idxBuff.size(); ++i) {
-            idxBuff[i] = overlap_->globalToDomestic(idxBuff[i]);
-        }
-    }
-
-    int myRank_;
-    Entries entries_;
-    std::shared_ptr<Overlap> overlap_;
-
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > rowSizesRecvBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > rowIndicesRecvBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > entryIndicesRecvBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<block_type> > > entryValuesRecvBuff_;
-
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > numRowsSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > rowSizesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > rowIndicesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<int> > > entryIndicesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<block_type> > > entryValuesSendBuff_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/overlappingblockvector.hh b/dumux/linear/overlappingblockvector.hh
deleted file mode 100644
index eda7c84..0000000
--- a/dumux/linear/overlappingblockvector.hh
+++ /dev/null
@@ -1,458 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A block vector which creates an algebraic overlap of
- *        arbitrary size.
- */
-#ifndef DUMUX_OVERLAPPING_BLOCK_VECTOR_HH
-#define DUMUX_OVERLAPPING_BLOCK_VECTOR_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <iostream>
-#include <map>
-#include <memory>
-#include <vector>
-
-#include <dune/istl/bvector.hh>
-
-#include <dumux/parallel/mpibuffer.hh>
-#include <dumux/common/valgrind.hh>
-
-namespace Dumux {
-
-template <class FieldVector, class Overlap>
-class OverlappingBlockVector
-    : public Dune::BlockVector<FieldVector>
-{
-    typedef Dune::BlockVector<FieldVector> ParentType;
-    typedef Dune::BlockVector<FieldVector> BlockVector;
-
-    typedef typename Overlap::Index RowIndex;
-    typedef typename Overlap::ProcessRank ProcessRank;
-    typedef typename Overlap::PeerSet PeerSet;
-    typedef typename Overlap::DomesticOverlapWithPeer DomesticOverlapWithPeer;
-
-    typedef typename ParentType::field_type Scalar;
-
-public:
-    OverlappingBlockVector(const Overlap &overlap)
-        : ParentType(overlap.numDomestic())
-        , overlap_(&overlap)
-    {
-        createBuffers_();
-    }
-
-    /*!
-     * \brief Copy constructor.
-     */
-    OverlappingBlockVector(const OverlappingBlockVector &obv)
-        : ParentType(obv)
-        , frontMaster_(obv.frontMaster_)
-        , numIndicesSendBuff_(obv.numIndicesSendBuff_)
-        , indicesSendBuff_(obv.indicesSendBuff_)
-        , indicesRecvBuff_(obv.indicesRecvBuff_)
-        , valuesSendBuff_(obv.valuesSendBuff_)
-        , valuesRecvBuff_(obv.valuesRecvBuff_)
-        , overlap_(obv.overlap_)
-    {
-    }
-
-    ~OverlappingBlockVector()
-    {
-    }
-
-    /*!
-     * \brief Assign an overlapping block vector from a
-     *        non-overlapping one, border entries are added.
-     */
-    void assignAdd(const BlockVector &nbv)
-    {
-        // assign the local rows
-        int numLocal = overlap_->numLocal();
-        for (int rowIdx = 0; rowIdx < numLocal; ++rowIdx) {
-            if (overlap_->iAmMasterOf(rowIdx) ||
-                overlap_->isShared(rowIdx))
-            {
-                (*this)[rowIdx] = nbv[rowIdx];
-            }
-            else
-                (*this)[rowIdx] = 0;
-
-        }
-
-        // set the remote indices to 0
-        int numDomestic = overlap_->numDomestic();
-        for (int rowIdx = numLocal; rowIdx < numDomestic; ++rowIdx) {
-            (*this)[rowIdx] = 0;
-        }
-
-        // add up the contents of overlapping rows
-        syncAdd();
-    }
-
-    /*!
-     * \brief Assign the local values to a non-overlapping block
-     *        vector.
-     */
-    void assignTo(BlockVector &nbv) const
-    {
-        // assign the local rows
-        int numLocal = overlap_->numLocal();
-        for (int rowIdx = 0; rowIdx < numLocal; ++rowIdx) {
-            nbv[rowIdx] = (*this)[rowIdx];
-        }
-    }
-
-    /*!
-     * \brief Syncronize an overlapping block vector by adding up all
-     *        overlapping entries.
-     */
-    void syncAdd()
-    {
-        typename PeerSet::const_iterator peerIt;
-        typename PeerSet::const_iterator peerEndIt = overlap_->peerSet().end();
-
-        // send all entries to all peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            sendEntries_(peerRank);
-        }
-
-        // recieve all entries to the peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            receiveAddEntries_(peerRank);
-        }
-
-        // wait until we have send everything
-        waitSendFinished_();
-    }
-
-    /*!
-     * \brief Syncronize the block vector by taking the arithmetic
-     *        mean of all entries which are not on the front of some
-     *        process
-     *
-     * \todo use specialized send methods for improved
-     *       performance. (i.e. only send the front entries to the
-     *       peers.)
-     */
-    void syncAverageFrontFromMaster()
-    {
-        // first, reset all of our front rows
-        int numLocal = overlap_->numLocal();
-        int numDomestic = overlap_->numDomestic();
-        for (int i = numLocal; i < numDomestic; ++i) {
-            if (overlap_->isFront(i))
-                (*this)[i] = 0;
-        }
-
-        typename PeerSet::const_iterator peerIt;
-        typename PeerSet::const_iterator peerEndIt = overlap_->peerSet().end();
-
-        // send all entries to all peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            sendEntries_(peerRank);
-        }
-
-        // recieve all entries to the peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            receiveAverageFrontFromMaster_(peerRank);
-        }
-
-        // divide each entry by the number of non-front processes
-        for (int i = 0; i < numDomestic; ++i) {
-            (*this)[i] /= overlap_->numNonFrontProcesses(i);
-        }
-
-        // wait until we have send everything
-        waitSendFinished_();
-    }
-
-    /*!
-     * \brief Syncronize an overlapping block vector by copying the
-     *        front entries from their master process
-     *
-     * \todo use specialized send methods for improved
-     *       performance. (i.e. only send the front entries to the
-     *       peers.)
-     */
-    void syncFrontFromMaster()
-    {
-        typename PeerSet::const_iterator peerIt;
-        typename PeerSet::const_iterator peerEndIt = overlap_->peerSet().end();
-
-        // send all entries to all peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            sendEntries_(peerRank);
-        }
-
-        // recieve all entries to the peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            receiveFrontFromMaster_(peerRank);
-        }
-
-        // wait until we have send everything
-        waitSendFinished_();
-    }
-
-    using ParentType::operator=;
-    /*!
-     * \brief Copy constructor.
-     */
-    OverlappingBlockVector &operator=(const OverlappingBlockVector &obv)
-    {
-        ParentType::operator=(obv);
-        overlap_ = obv.overlap_;
-        return *this;
-    }
-
-    /*!
-     * \brief Syncronize an overlapping block vector and take the
-     *        arthmetic mean of the entry values of all processes.
-     */
-    void syncAverage()
-    {
-        syncAdd();
-
-        int numDomestic = overlap_->numDomestic();
-        for (int i = 0; i < numDomestic; ++i) {
-            (*this)[i] /= overlap_->numPeers(i) + 1;
-        }
-    }
-
-    /*!
-     * \brief Set all front entities to a given scalar value
-     */
-    void resetFront(Scalar value = 0.0)
-    {
-        int numDomestic = this->size();
-        for (int i = 0; i < numDomestic; ++i) {
-            if (overlap_->isFront(i)) {
-                (*this)[i] = value;
-            }
-        }
-    }
-
-    /*!
-     * \brief Set all remote entities to a given scalar value
-     */
-    void resetRemote(Scalar value = 0.0)
-    {
-        int numDomestic = overlap_->numDomestic();
-        for (int i = overlap_->numLocal(); i < numDomestic; ++i) {
-            (*this)[i] = value;
-        }
-    }
-
-    void print() const
-    {
-        for (int i = 0; i < this->size(); ++i) {
-            std::cout << "row " << i << (overlap_->isLocal(i)?" ":"*") << ": " << (*this)[i] << "\n";
-        }
-    }
-
-private:
-    void createBuffers_()
-    {
-#if HAVE_MPI
-        // create array for the front indices
-        int numDomestic = overlap_->numDomestic();
-        frontMaster_ = std::make_shared<std::vector<ProcessRank> >(numDomestic, -1);
-
-        typename PeerSet::const_iterator peerIt;
-        typename PeerSet::const_iterator peerEndIt = overlap_->peerSet().end();
-
-        // send all indices to the peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-
-            const DomesticOverlapWithPeer &domesticOverlap = overlap_->domesticOverlapWithPeer(peerRank);
-            int numEntries = domesticOverlap.size();
-            numIndicesSendBuff_[peerRank] = std::make_shared<MpiBuffer<int> >(1);
-            indicesSendBuff_[peerRank] = std::make_shared<MpiBuffer<RowIndex> >(numEntries);
-            valuesSendBuff_[peerRank] = std::make_shared<MpiBuffer<FieldVector> >(numEntries);
-
-            // fill the indices buffer with global indices
-            MpiBuffer<RowIndex> &indicesSendBuff = *indicesSendBuff_[peerRank];
-            typename DomesticOverlapWithPeer::const_iterator domIt = domesticOverlap.begin();
-            typename DomesticOverlapWithPeer::const_iterator domEndIt = domesticOverlap.end();
-            for (int i = 0; domIt != domEndIt; ++domIt, ++i) {
-                int rowIdx = *domIt;
-                indicesSendBuff[i] = overlap_->domesticToGlobal(rowIdx);
-            }
-
-            // first, send the number of indices
-            (*numIndicesSendBuff_[peerRank])[0] = numEntries;
-            numIndicesSendBuff_[peerRank]->send(peerRank);
-
-            // then, send the indices themselfs
-            indicesSendBuff.send(peerRank);
-        }
-
-        // receive the indices from the peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-
-            // receive size of overlap to peer
-            int numRows;
-            MpiBuffer<int> numRowsRecvBuff(1);
-            numRowsRecvBuff.receive(peerRank);
-            numRows = numRowsRecvBuff[0];
-
-            // then, create the MPI buffers
-            indicesRecvBuff_[peerRank] = std::make_shared<MpiBuffer<RowIndex> >(numRows);
-            valuesRecvBuff_[peerRank] = std::make_shared<MpiBuffer<FieldVector> >(numRows);
-            MpiBuffer<RowIndex> &indicesRecvBuff = *indicesRecvBuff_[peerRank];
-
-            // next, receive the actual indices
-            indicesRecvBuff.receive(peerRank);
-
-            // finally, translate the global indices to domestic ones
-            for (int i = 0; i != numRows; ++i) {
-                int globalRowIdx = indicesRecvBuff[i];
-                int domRowIdx = overlap_->globalToDomestic(globalRowIdx);
-                indicesRecvBuff[i] = domRowIdx;
-
-                if (overlap_->isFront(domRowIdx) &&
-                    overlap_->isMasterOf(peerRank, domRowIdx))
-                {
-                    (*frontMaster_)[domRowIdx] = peerRank;
-                }
-            }
-        }
-
-        // wait for all send operations to complete
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            numIndicesSendBuff_[peerRank]->wait();
-            indicesSendBuff_[peerRank]->wait();
-
-            // convert the global indices of the send buffer to
-            // domestic ones
-            MpiBuffer<RowIndex> &indicesSendBuff = *indicesSendBuff_[peerRank];
-            for (int i = 0; i < indicesSendBuff.size(); ++i) {
-                indicesSendBuff[i] = overlap_->globalToDomestic(indicesSendBuff[i]);
-            }
-        }
-#endif // HAVE_MPI
-    }
-
-    void sendEntries_(int peerRank)
-    {
-        // copy the values into the send buffer
-        const MpiBuffer<RowIndex> &indices = *indicesSendBuff_[peerRank];
-        MpiBuffer<FieldVector> &values = *valuesSendBuff_[peerRank];
-        for (int i = 0; i < indices.size(); ++ i)
-            values[i] = (*this)[indices[i]];
-
-        values.send(peerRank);
-    }
-
-    void waitSendFinished_()
-    {
-        typename PeerSet::const_iterator peerIt;
-        typename PeerSet::const_iterator peerEndIt = overlap_->peerSet().end();
-
-        // send all entries to all peers
-        peerIt = overlap_->peerSet().begin();
-        for (; peerIt != peerEndIt; ++peerIt) {
-            int peerRank = *peerIt;
-            valuesSendBuff_[peerRank]->wait();
-        }
-    }
-
-    void receiveAddEntries_(int peerRank)
-    {
-        const MpiBuffer<RowIndex> &indices = *indicesRecvBuff_[peerRank];
-        MpiBuffer<FieldVector> &values = *valuesRecvBuff_[peerRank];
-
-        // receive the values from the peer
-        values.receive(peerRank);
-
-        // copy them into the block vector
-        for (int i = 0; i < indices.size(); ++ i) {
-            (*this)[indices[i]] += values[i];
-        }
-    }
-
-    void receiveFrontFromMaster_(int peerRank)
-    {
-        const MpiBuffer<RowIndex> &indices = *indicesRecvBuff_[peerRank];
-        MpiBuffer<FieldVector> &values = *valuesRecvBuff_[peerRank];
-
-        // receive the values from the peer
-        values.receive(peerRank);
-
-        // copy them into the block vector
-        for (int j = 0; j < indices.size(); ++j) {
-            int domRowIdx = indices[j];
-            if ((*frontMaster_)[domRowIdx] != peerRank)
-                continue;
-
-            (*this)[domRowIdx] = values[j];
-        }
-    }
-
-    void receiveAverageFrontFromMaster_(int peerRank)
-    {
-        const MpiBuffer<RowIndex> &indices = *indicesRecvBuff_[peerRank];
-        MpiBuffer<FieldVector> &values = *valuesRecvBuff_[peerRank];
-
-        // receive the values from the peer
-        values.receive(peerRank);
-
-        // copy them into the block vector
-        for (int j = 0; j < indices.size(); ++j) {
-            int domRowIdx = indices[j];
-            (*this)[domRowIdx] += values[j];
-        }
-    }
-
-    std::shared_ptr<std::vector<ProcessRank> > frontMaster_;
-
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<RowIndex> > > numIndicesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<RowIndex> > > indicesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<RowIndex> > > indicesRecvBuff_;
-
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<FieldVector> > > valuesSendBuff_;
-    std::map<ProcessRank, std::shared_ptr<MpiBuffer<FieldVector> > > valuesRecvBuff_;
-
-    const Overlap *overlap_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/overlappingoperator.hh b/dumux/linear/overlappingoperator.hh
deleted file mode 100644
index b686233..0000000
--- a/dumux/linear/overlappingoperator.hh
+++ /dev/null
@@ -1,76 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A overlapping linear operator for use with ISTL
- */
-#ifndef DUMUX_OVERLAPPING_OPERATOR_HH
-#define DUMUX_OVERLAPPING_OPERATOR_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <dune/istl/operators.hh>
-
-namespace Dumux {
-
-// operator that resets result to zero at constrained DOFS
-template<class OverlappingMatrix, class DomainVector, class RangeVector>
-class OverlappingOperator :
-    public Dune::AssembledLinearOperator<OverlappingMatrix,
-                                         DomainVector,
-                                         RangeVector>
-{
-public:
-    //! export types
-    typedef DomainVector domain_type;
-    typedef typename domain_type::field_type field_type;
-
-    //redefine the category, that is the only difference
-    enum {category=Dune::SolverCategory::overlapping};
-
-    OverlappingOperator (const OverlappingMatrix& A)
-        : A_(A)
-    {}
-
-    //! apply operator to x:  \f$ y = A(x) \f$
-    virtual void apply (const DomainVector& x, RangeVector& y) const
-    {
-        A_.mv(x,y);
-    }
-
-    //! apply operator to x, scale and add:  \f$ y = y + \alpha A(x) \f$
-    virtual void applyscaleadd(field_type alpha, const DomainVector& x, RangeVector& y) const
-    {
-        A_.usmv(alpha, x, y);
-    }
-
-    //! returns the matrix
-    virtual const OverlappingMatrix& getmat() const
-    {
-        return A_;
-    }
-
-private:
-    const OverlappingMatrix &A_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/overlappingpreconditioner.hh b/dumux/linear/overlappingpreconditioner.hh
deleted file mode 100644
index cd6a831..0000000
--- a/dumux/linear/overlappingpreconditioner.hh
+++ /dev/null
@@ -1,121 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A preconditioner for overlapping matrices and vectors
- */
-#ifndef DUMUX_OVERLAPPING_PRECONDITIONER_HH
-#define DUMUX_OVERLAPPING_PRECONDITIONER_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include <dumux/common/exceptions.hh>
-#include <dune/istl/preconditioners.hh>
-
-#include "overlappingscalarproduct.hh"
-
-namespace Dumux {
-
-template <class SeqPreCond, class Overlap>
-class OverlappingPreconditioner :
-    public Dune::Preconditioner<typename SeqPreCond::domain_type,
-                                typename SeqPreCond::range_type>
-{
-public:
-    typedef typename SeqPreCond::domain_type domain_type;
-    typedef typename SeqPreCond::range_type range_type;
-
-    enum { category = Dune::SolverCategory::overlapping };
-
-    OverlappingPreconditioner(SeqPreCond &seqPreCond, const Overlap &overlap)
-        : seqPreCond_(seqPreCond), overlap_(&overlap)
-    {
-    }
-
-    void pre(domain_type &x, range_type &y)
-    {
-        seqPreCond_.pre(x, y);
-
-/*
-        // communicate the results on the overlap
-        x.syncAverage();
-        y.syncAverage();
-*/
-    };
-
-    void apply(domain_type &x, const range_type &d)
-    {
-#if HAVE_MPI
-        if (overlap_->peerSet().size() > 0) {
-            // set the residual and right hand side on the front to zero
-            range_type dd(d);
-            dd.resetFront();
-
-            // make sure that all processes react the same if the
-            // sequential preconditioner on one process throws an
-            // exception
-            short success;
-            try {
-                // execute the sequential preconditioner
-                seqPreCond_.apply(x, dd);
-                short localSuccess = 1;
-                MPI_Allreduce(&localSuccess, // source buffer
-                              &success, // destination buffer
-                              1, // number of objects in buffers
-                              MPI_SHORT, // data type
-                              MPI_MIN, // operation
-                              MPI_COMM_WORLD); // communicator
-            }
-            catch (const Dune::Exception &e) {
-                std::cout << "Process " << overlap_->myRank()
-                          << " threw exception in sequential preconditioner: " << e.what() << "\n";
-                short localSuccess = 0;
-                MPI_Allreduce(&localSuccess, // source buffer
-                              &success, // destination buffer
-                              1, // number of objects in buffers
-                              MPI_SHORT, // data type
-                              MPI_MIN, // operation
-                              MPI_COMM_WORLD); // communicator
-            }
-
-            if (success)
-                x.syncAverage();
-            else
-                DUNE_THROW(NumericalProblem,
-                           "Preconditioner threw an exception on some process.");
-        }
-        else
-#endif // HAVE_MPI
-            seqPreCond_.apply(x, d);
-    };
-
-    void post(domain_type &x)
-    {
-        seqPreCond_.post(x);
-    };
-
-private:
-    SeqPreCond seqPreCond_;
-    const Overlap *overlap_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/overlappingscalarproduct.hh b/dumux/linear/overlappingscalarproduct.hh
deleted file mode 100644
index 9ff5446..0000000
--- a/dumux/linear/overlappingscalarproduct.hh
+++ /dev/null
@@ -1,86 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief A scalar product for overlapping vectors
- */
-#ifndef DUMUX_OVERLAPPING_SCALAR_PRODUCT_HH
-#define DUMUX_OVERLAPPING_SCALAR_PRODUCT_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#if HAVE_MPI
-#include <mpi.h>
-#endif
-
-#include <dune/istl/scalarproducts.hh>
-
-namespace Dumux {
-
-template <class OverlappingBlockVector, class Overlap>
-class OverlappingScalarProduct : public Dune::ScalarProduct<OverlappingBlockVector>
-{
-public:
-    typedef typename OverlappingBlockVector::field_type field_type;
-
-    enum { category = Dune::SolverCategory::overlapping };
-
-    OverlappingScalarProduct(const Overlap &overlap)
-        : overlap_(overlap)
-    {};
-
-    field_type dot(const OverlappingBlockVector &x, const OverlappingBlockVector &y)
-    {
-        double sum = 0;
-        int n = overlap_.numLocal();
-        for (int i = 0; i < n; ++i) {
-            if (overlap_.iAmMasterOf(i))
-                sum += x[i]*y[i];
-        }
-
-        // compute the global sum
-        double sumGlobal = 0.0;
-#if HAVE_MPI
-        MPI_Allreduce(&sum, // source buffer
-                      &sumGlobal, // destination buffer
-                      1, // number of objects in buffers
-                      MPI_DOUBLE, // data type
-                      MPI_SUM, // operation
-                      MPI_COMM_WORLD); // communicator
-#else
-        sumGlobal = sum;
-#endif // HAVE_MPI
-
-        return sumGlobal;
-    };
-
-    double norm(const OverlappingBlockVector &x)
-    {
-        double tmp = dot(x, x);
-        return std::sqrt(tmp);
-    };
-
-private:
-    const Overlap &overlap_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/linear/vertexborderlistfromgrid.hh b/dumux/linear/vertexborderlistfromgrid.hh
deleted file mode 100644
index 60f0dad..0000000
--- a/dumux/linear/vertexborderlistfromgrid.hh
+++ /dev/null
@@ -1,122 +0,0 @@
-// -*- mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
-// vi: set et ts=4 sw=4 sts=4:
-/*****************************************************************************
- *   See the file COPYING for full copying permissions.                      *
- *                                                                           *
- *   This program is free software: you can redistribute it and/or modify    *
- *   it under the terms of the GNU General Public License as published by    *
- *   the Free Software Foundation, either version 2 of the License, or       *
- *   (at your option) any later version.                                     *
- *                                                                           *
- *   This program is distributed in the hope that it will be useful,         *
- *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
- *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the            *
- *   GNU General Public License for more details.                            *
- *                                                                           *
- *   You should have received a copy of the GNU General Public License       *
- *   along with this program.  If not, see <http://www.gnu.org/licenses/>.   *
- *****************************************************************************/
-/*!
- * \file
- *
- * \brief Creates a list of vertex indices on the process border which
- *        can be used to construct the foreign overlap.
- */
-#ifndef DUMUX_VERTEX_BORDER_LIST_FROM_GRID_HH
-#define DUMUX_VERTEX_BORDER_LIST_FROM_GRID_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-
-#include "borderindex.hh"
-
-#include <dune/grid/common/datahandleif.hh>
-#include <dune/grid/common/gridenums.hh>
-#include <dune/common/fmatrix.hh>
-#include <dune/istl/bcrsmatrix.hh>
-#include <dune/istl/scalarproducts.hh>
-#include <dune/istl/operators.hh>
-
-#include <algorithm>
-#include <list>
-#include <set>
-#include <map>
-
-namespace Dumux {
-
-/*!
- * \brief Uses communication on the grid to find the initial seed list
- *        of indices.
- *
- * \todo implement this class generically. For this, it must be
- *       possible to query the mapper whether it contains entities of
- *       a given codimension without the need to hand it an actual
- *       entity.
- */
-template <class GridView, class VertexMapper>
-class VertexBorderListFromGrid : public Dune::CommDataHandleIF<VertexBorderListFromGrid<GridView, VertexMapper>,
-                                                               int >
-{
-    typedef std::list<BorderIndex> BorderList;
-
-public:
-    VertexBorderListFromGrid(const GridView &gridView,
-                             const VertexMapper &map)
-        : gridView_(gridView), map_(map)
-    {
-        gridView.communicate(*this,
-                       Dune::InteriorBorder_InteriorBorder_Interface,
-                       Dune::ForwardCommunication);
-    };
-
-    // data handle methods
-    bool contains (int dim, int codim) const
-    { return dim == codim; }
-
-    bool fixedsize(int dim, int codim) const
-    { return true; }
-
-    template<class EntityType>
-    size_t size(const EntityType &e) const
-    { return 2; }
-
-    template<class MessageBufferImp, class EntityType>
-    void gather(MessageBufferImp &buff, const EntityType &e) const
-    {
-        buff.write(gridView_.comm().rank());
-        buff.write(static_cast<int>(map_.index(e)));
-    }
-
-    template<class MessageBufferImp, class EntityType>
-    void scatter(MessageBufferImp &buff, const EntityType &e, size_t n)
-    {
-        BorderIndex bIdx;
-
-        bIdx.localIdx = map_.index(e);
-        buff.read(bIdx.peerRank);
-        buff.read(bIdx.peerIdx);
-        bIdx.borderDistance = 0;
-        // vertices on the border are always in the interior of more
-        // than one process which means that they are shared.
-        bIdx.isShared = true;
-
-        borderList_.push_back(bIdx);
-    }
-
-    // Access to the foreign border list.
-    const BorderList &foreignBorderList() const
-    { return borderList_; }
-
-    // Access to the domestic border list (same as foreign border list
-    // because all vertices are shared entities)
-    const BorderList &domesticBorderList() const
-    { return borderList_; }
-
-private:
-    const GridView gridView_;
-    const VertexMapper &map_;
-    BorderList borderList_;
-};
-
-} // namespace Dumux
-
-#endif
diff --git a/dumux/material/components/CMakeLists.txt b/dumux/material/components/CMakeLists.txt
index a901821..cde4ee6 100644
--- a/dumux/material/components/CMakeLists.txt
+++ b/dumux/material/components/CMakeLists.txt
@@ -5,7 +5,6 @@ install(FILES
 air.hh
 benzene.hh
 brine.hh
-brinevarsalinity.hh
 ch4.hh
 co2.hh
 co2tables.inc
diff --git a/dumux/material/components/brinevarsalinity.hh b/dumux/material/components/brinevarsalinity.hh
deleted file mode 100644
index 0c04b5d..0000000
--- a/dumux/material/components/brinevarsalinity.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BRINE_VARSALINITY_HH
-#define DUMUX_BRINE_VARSALINITY_HH
-
-#warning this header is deprecated, use dumux/material/components/brine.hh instead
-
-#include <dumux/material/components/brine.hh>
-
-#endif
\ No newline at end of file
diff --git a/dumux/material/fluidstates/2p2cfluidstate.hh b/dumux/material/fluidstates/2p2cfluidstate.hh
deleted file mode 100644
index 5c4b5fe..0000000
--- a/dumux/material/fluidstates/2p2cfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P2C_FLUID_STATE_HH_OLD
-#define DUMUX_2P2C_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/2p2c.hh instead
-
-#include <dumux/material/fluidstates/2p2c.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/CMakeLists.txt b/dumux/material/fluidstates/CMakeLists.txt
index 0491787..a2ba880 100644
--- a/dumux/material/fluidstates/CMakeLists.txt
+++ b/dumux/material/fluidstates/CMakeLists.txt
@@ -1,15 +1,6 @@
 
 #install headers
 install(FILES
-compositionalfluidstate.hh
-immisciblefluidstate.hh
-isothermalimmisciblefluidstate.hh
-nonequilibriumenergyfluidstate.hh
-nonequilibriumfluidstate.hh
-nonequilibriummassfluidstate.hh
-pressureoverlayfluidstate.hh
-saturationoverlayfluidstate.hh
-temperatureoverlayfluidstate.hh
 compositional.hh
 immiscible.hh
 isothermalimmiscible.hh
diff --git a/dumux/material/fluidstates/compositionalfluidstate.hh b/dumux/material/fluidstates/compositionalfluidstate.hh
deleted file mode 100644
index b342cc7..0000000
--- a/dumux/material/fluidstates/compositionalfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_COMPOSITIONAL_FLUID_STATE_HH_OLD
-#define DUMUX_COMPOSITIONAL_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/compositional.hh instead
-
-#include <dumux/material/fluidstates/compositional.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/immisciblefluidstate.hh b/dumux/material/fluidstates/immisciblefluidstate.hh
deleted file mode 100644
index b7d86da..0000000
--- a/dumux/material/fluidstates/immisciblefluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMMISCIBLE_FLUID_STATE_HH_OLD
-#define DUMUX_IMMISCIBLE_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/immiscible.hh instead
-
-#include <dumux/material/fluidstates/immiscible.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/isothermalimmisciblefluidstate.hh b/dumux/material/fluidstates/isothermalimmisciblefluidstate.hh
deleted file mode 100644
index 80e13bb..0000000
--- a/dumux/material/fluidstates/isothermalimmisciblefluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_ISOIMMISCIBLE_FLUID_STATE_HH_OLD
-#define DUMUX_ISOIMMISCIBLE_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/isothermalimmiscible.hh instead
-
-#include <dumux/material/fluidstates/isothermalimmiscible.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/nonequilibriumenergyfluidstate.hh b/dumux/material/fluidstates/nonequilibriumenergyfluidstate.hh
deleted file mode 100644
index e47dc1d..0000000
--- a/dumux/material/fluidstates/nonequilibriumenergyfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NONEQUILIBRIUM_ENERGY_FLUID_STATE_HH_OLD
-#define DUMUX_NONEQUILIBRIUM_ENERGY_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/nonequilibriumenergy.hh instead
-
-#include <dumux/material/fluidstates/nonequilibriumenergy.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/nonequilibriumfluidstate.hh b/dumux/material/fluidstates/nonequilibriumfluidstate.hh
deleted file mode 100644
index 9c9550a..0000000
--- a/dumux/material/fluidstates/nonequilibriumfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_GENERIC_FLUID_STATE_HH_OLD
-#define DUMUX_GENERIC_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/nonequilibrium.hh instead
-
-#include <dumux/material/fluidstates/nonequilibrium.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/nonequilibriummassfluidstate.hh b/dumux/material/fluidstates/nonequilibriummassfluidstate.hh
deleted file mode 100644
index 92d497f..0000000
--- a/dumux/material/fluidstates/nonequilibriummassfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_NONEQUILIBRIUM_MASS_FLUID_STATE_HH_OLD
-#define DUMUX_NONEQUILIBRIUM_MASS_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/nonequilibriummass.hh instead
-
-#include <dumux/material/fluidstates/nonequilibriummass.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/pressureoverlayfluidstate.hh b/dumux/material/fluidstates/pressureoverlayfluidstate.hh
deleted file mode 100644
index 56eacab..0000000
--- a/dumux/material/fluidstates/pressureoverlayfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_PRESSURE_OVERLAY_FLUID_STATE_HH_OLD
-#define DUMUX_PRESSURE_OVERLAY_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/pressureoverlay.hh instead
-
-#include <dumux/material/fluidstates/pressureoverlay.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/pseudo1p2cfluidstate.hh b/dumux/material/fluidstates/pseudo1p2cfluidstate.hh
deleted file mode 100644
index 7d460b6..0000000
--- a/dumux/material/fluidstates/pseudo1p2cfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_PSEUDO1P2C_FLUID_STATE_HH_OLD
-#define DUMUX_PSEUDO1P2C_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/pseudo1p2c.hh instead
-
-#include <dumux/material/fluidstates/pseudo1p2c.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/saturationoverlayfluidstate.hh b/dumux/material/fluidstates/saturationoverlayfluidstate.hh
deleted file mode 100644
index 2681659..0000000
--- a/dumux/material/fluidstates/saturationoverlayfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_SATURATION_OVERLAY_FLUID_STATE_HH_OLD
-#define DUMUX_SATURATION_OVERLAY_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/saturationoverlay.hh instead
-
-#include <dumux/material/fluidstates/saturationoverlay.hh>
-
-#endif
diff --git a/dumux/material/fluidstates/temperatureoverlayfluidstate.hh b/dumux/material/fluidstates/temperatureoverlayfluidstate.hh
deleted file mode 100644
index b318bd7..0000000
--- a/dumux/material/fluidstates/temperatureoverlayfluidstate.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TEMPERATURE_OVERLAY_FLUID_STATE_HH_OLD
-#define DUMUX_TEMPERATURE_OVERLAY_FLUID_STATE_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidstates/temperatureoverlay.hh instead
-
-#include <dumux/material/fluidstates/temperatureoverlay.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/1pfluidsystem.hh b/dumux/material/fluidsystems/1pfluidsystem.hh
deleted file mode 100644
index 220ede7..0000000
--- a/dumux/material/fluidsystems/1pfluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_1P_FLUIDSYSTEM_HH_OLD
-#define DUMUX_1P_FLUIDSYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/1p.hh instead
-
-#include <dumux/material/fluidsystems/1p.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/2pimmisciblefluidsystem.hh b/dumux/material/fluidsystems/2pimmisciblefluidsystem.hh
deleted file mode 100644
index af0dcf0..0000000
--- a/dumux/material/fluidsystems/2pimmisciblefluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2P_IMMISCIBLE_FLUID_SYSTEM_HH_OLD
-#define DUMUX_2P_IMMISCIBLE_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/2pimmiscible.hh instead
-
-#include <dumux/material/fluidsystems/2pimmiscible.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/CMakeLists.txt b/dumux/material/fluidsystems/CMakeLists.txt
index 75a8c10..242b834 100644
--- a/dumux/material/fluidsystems/CMakeLists.txt
+++ b/dumux/material/fluidsystems/CMakeLists.txt
@@ -1,26 +1,6 @@
 
 #install headers
 install(FILES
-1pfluidsystem.hh
-2pimmisciblefluidsystem.hh
-basefluidsystem.hh
-brineairfluidsystem.hh
-brineco2fluidsystem.hh
-defaultcomponents.hh
-gasphase.hh
-h2oairfluidsystem.hh
-h2oairmesitylenefluidsystem.hh
-h2oairxylenefluidsystem.hh
-h2on2fluidsystem.hh
-h2on2fluidsystemkinetic.hh
-h2on2liquidphasefluidsystem.hh
-h2on2o2fluidsystem.hh
-liquidphase.hh
-nullparametercache.hh
-parametercachebase.hh
-purewatersimplefluidsystem.hh
-spe5fluidsystem.hh
-spe5parametercache.hh
 1p.hh
 2pimmiscible.hh
 base.hh
@@ -35,4 +15,5 @@ h2on2liquidphase.hh
 h2on2o2.hh
 purewatersimple.hh
 spe5.hh
+spe5parametercache.hh
 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/material/fluidsystems)
diff --git a/dumux/material/fluidsystems/basefluidsystem.hh b/dumux/material/fluidsystems/basefluidsystem.hh
deleted file mode 100644
index 0e3b87b..0000000
--- a/dumux/material/fluidsystems/basefluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BASE_FLUID_SYSTEM_HH_OLD
-#define DUMUX_BASE_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/base.hh instead
-
-#include <dumux/material/fluidsystems/base.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/brineairfluidsystem.hh b/dumux/material/fluidsystems/brineairfluidsystem.hh
deleted file mode 100644
index c992d0c..0000000
--- a/dumux/material/fluidsystems/brineairfluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BRINE_AIR_SYSTEM_HH_OLD
-#define DUMUX_BRINE_AIR_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/brineair.hh instead
-
-#include <dumux/material/fluidsystems/brineair.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/brineco2fluidsystem.hh b/dumux/material/fluidsystems/brineco2fluidsystem.hh
deleted file mode 100644
index a124093..0000000
--- a/dumux/material/fluidsystems/brineco2fluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BRINE_CO2_SYSTEM_HH_OLD
-#define DUMUX_BRINE_CO2_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/brineco2.hh instead
-
-#include <dumux/material/fluidsystems/brineco2.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/h2oairfluidsystem.hh b/dumux/material/fluidsystems/h2oairfluidsystem.hh
deleted file mode 100644
index 6d984a5..0000000
--- a/dumux/material/fluidsystems/h2oairfluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_H2O_AIR_SYSTEM_HH_OLD
-#define DUMUX_H2O_AIR_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2oair.hh instead
-
-#include <dumux/material/fluidsystems/h2oair.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/h2oairmesitylenefluidsystem.hh b/dumux/material/fluidsystems/h2oairmesitylenefluidsystem.hh
deleted file mode 100644
index 82496aa..0000000
--- a/dumux/material/fluidsystems/h2oairmesitylenefluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_H2O_AIR_MESITYLENE_FLUID_SYSTEM_HH_OLD
-#define DUMUX_H2O_AIR_MESITYLENE_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2oairmesitylene.hh instead
-
-#include <dumux/material/fluidsystems/h2oairmesitylene.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/h2oairxylenefluidsystem.hh b/dumux/material/fluidsystems/h2oairxylenefluidsystem.hh
deleted file mode 100644
index f9a8e20..0000000
--- a/dumux/material/fluidsystems/h2oairxylenefluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_H2O_AIR_XYLENE_FLUID_SYSTEM_HH_OLD
-#define DUMUX_H2O_AIR_XYLENE_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2oairxylene.hh instead
-
-#include <dumux/material/fluidsystems/h2oairxylene.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/h2on2fluidsystem.hh b/dumux/material/fluidsystems/h2on2fluidsystem.hh
deleted file mode 100644
index bb744f8..0000000
--- a/dumux/material/fluidsystems/h2on2fluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_H2O_N2_FLUID_SYSTEM_HH_OLD
-#define DUMUX_H2O_N2_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2on2.hh instead
-
-#include <dumux/material/fluidsystems/h2on2.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/h2on2fluidsystemkinetic.hh b/dumux/material/fluidsystems/h2on2fluidsystemkinetic.hh
deleted file mode 100644
index 678aa06..0000000
--- a/dumux/material/fluidsystems/h2on2fluidsystemkinetic.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_H2O_N2_FLUID_SYSTEM_KINETIC_HH_OLD
-#define DUMUX_H2O_N2_FLUID_SYSTEM_KINETIC_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2on2kinetic.hh instead
-
-#include <dumux/material/fluidsystems/h2on2kinetic.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/h2on2liquidphasefluidsystem.hh b/dumux/material/fluidsystems/h2on2liquidphasefluidsystem.hh
deleted file mode 100644
index 01d1911..0000000
--- a/dumux/material/fluidsystems/h2on2liquidphasefluidsystem.hh
+++ /dev/null
@@ -1,48 +0,0 @@
-#ifndef DUMUX_H2O_N2_LIQUIDPHASE_FLUID_SYSTEM_HH_OLD
-#define DUMUX_H2O_N2_LIQUIDPHASE_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2on2.hh instead
-
-#include <dumux/material/fluidsystems/h2on2.hh>
-
-namespace Dumux
-{
-namespace FluidSystems
-{
-
-/*!
- * \ingroup Fluidsystems
- *
- * \brief A one-phase (water-phase) fluid system with water and nitrogen as components.
- *
- * This FluidSystem can be used without the PropertySystem that is applied in Dumux,
- * as all Parameters are defined via template parameters. Hence it is in an
- * additional namespace Dumux::FluidSystems::.
- * An adapter class using Dumux::FluidSystem<TypeTag> is also provided
- * at the end of this file.
- */
-template <class Scalar, bool useComplexRelations = true>
-DUNE_DEPRECATED_MSG("Class Dumux::FluidSystems::H2ON2LiquidPhase is deprecated. Use Dumux::FluidSystems::H2ON2 instead.")
-class H2ON2LiquidPhase
-    : public H2ON2<Scalar, useComplexRelations>
-{};
-
-} // end namespace FluidSystems
-
-#ifdef DUMUX_PROPERTIES_HH
-/*!
- * \brief A one-phase fluid system with water and nitrogen as components.
- *
- * This is an adapter to use Dumux::H2ON2LiquidPhaseFluidSystem<TypeTag>, as is
- * done with most other classes in Dumux.
- */
-template<class TypeTag>
-DUNE_DEPRECATED_MSG("Class Dumux::H2ON2LiquidPhaseFluidSystem is deprecated. Use Dumux::H2ON2FluidSystem instead.")
-class H2ON2LiquidPhaseFluidSystem
-: public H2ON2FluidSystem<TypeTag>
-{};
-#endif
-
-} // end namespace
-
-#endif
diff --git a/dumux/material/fluidsystems/h2on2o2fluidsystem.hh b/dumux/material/fluidsystems/h2on2o2fluidsystem.hh
deleted file mode 100644
index 88135b7..0000000
--- a/dumux/material/fluidsystems/h2on2o2fluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_H2O_N2_O2_FLUID_SYSTEM_HH_OLD
-#define DUMUX_H2O_N2_O2_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/h2on2o2.hh instead
-
-#include <dumux/material/fluidsystems/h2on2o2.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/purewatersimplefluidsystem.hh b/dumux/material/fluidsystems/purewatersimplefluidsystem.hh
deleted file mode 100644
index dd56eb4..0000000
--- a/dumux/material/fluidsystems/purewatersimplefluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_PURE_WATER_FLUID_SYSTEM_HH_OLD
-#define DUMUX_PURE_WATER_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/purewatersimple.hh instead
-
-#include <dumux/material/fluidsystems/purewatersimple.hh>
-
-#endif
diff --git a/dumux/material/fluidsystems/spe5fluidsystem.hh b/dumux/material/fluidsystems/spe5fluidsystem.hh
deleted file mode 100644
index 4c9666a..0000000
--- a/dumux/material/fluidsystems/spe5fluidsystem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_SPE5_FLUID_SYSTEM_HH_OLD
-#define DUMUX_SPE5_FLUID_SYSTEM_HH_OLD
-
-#warning this header is deprecated, use dumux/material/fluidsystems/spe5.hh instead
-
-#include <dumux/material/fluidsystems/spe5.hh>
-
-#endif
diff --git a/dumux/material/spatialparams/CMakeLists.txt b/dumux/material/spatialparams/CMakeLists.txt
index 54cdaab..5d3a46d 100644
--- a/dumux/material/spatialparams/CMakeLists.txt
+++ b/dumux/material/spatialparams/CMakeLists.txt
@@ -1,10 +1,6 @@
 
 #install headers
 install(FILES
-fvspatialparams1p.hh
-fvspatialparams.hh
-implicitspatialparams1p.hh
-implicitspatialparams.hh
 fv1p.hh
 fv.hh
 implicit1p.hh
diff --git a/dumux/material/spatialparams/fvspatialparams.hh b/dumux/material/spatialparams/fvspatialparams.hh
deleted file mode 100644
index fab3ffc..0000000
--- a/dumux/material/spatialparams/fvspatialparams.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV_SPATIAL_PARAMS_HH_OLD
-#define DUMUX_FV_SPATIAL_PARAMS_HH_OLD
-
-#warning this header is deprecated, use dumux/material/spatialparams/fv.hh instead
-
-#include <dumux/material/spatialparams/fv.hh>
-
-#endif
diff --git a/dumux/material/spatialparams/fvspatialparams1p.hh b/dumux/material/spatialparams/fvspatialparams1p.hh
deleted file mode 100644
index d0acd4d..0000000
--- a/dumux/material/spatialparams/fvspatialparams1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_FV_SPATIAL_PARAMS_ONE_P_HH_OLD
-#define DUMUX_FV_SPATIAL_PARAMS_ONE_P_HH_OLD
-
-#warning this header is deprecated, use dumux/material/spatialparams/fv1p.hh instead
-
-#include <dumux/material/spatialparams/fv1p.hh>
-
-#endif
diff --git a/dumux/material/spatialparams/implicitspatialparams.hh b/dumux/material/spatialparams/implicitspatialparams.hh
deleted file mode 100644
index a39891f..0000000
--- a/dumux/material/spatialparams/implicitspatialparams.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_SPATIAL_PARAMS_HH_OLD
-#define DUMUX_IMPLICIT_SPATIAL_PARAMS_HH_OLD
-
-#warning this header is deprecated, use dumux/material/spatialparams/implicit.hh instead
-
-#include <dumux/material/spatialparams/implicit.hh>
-
-#endif
diff --git a/dumux/material/spatialparams/implicitspatialparams1p.hh b/dumux/material/spatialparams/implicitspatialparams1p.hh
deleted file mode 100644
index 5d13e8e..0000000
--- a/dumux/material/spatialparams/implicitspatialparams1p.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_IMPLICIT_SPATIAL_PARAMS_ONE_P_HH_OLD
-#define DUMUX_IMPLICIT_SPATIAL_PARAMS_ONE_P_HH_OLD
-
-#warning this header is deprecated, use dumux/material/spatialparams/implicit1p.hh instead
-
-#include <dumux/material/spatialparams/implicit1p.hh>
-
-#endif
diff --git a/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cnilocaloperator.hh b/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cnilocaloperator.hh
deleted file mode 100644
index cc15559..0000000
--- a/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cnilocaloperator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOCNISTOKES2P2CNILOCALOPERATOR_HH_OLD
-#define DUMUX_TWOCNISTOKES2P2CNILOCALOPERATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cnistokes2p2cni/localoperator.hh instead
-
-#include <dumux/multidomain/2cnistokes2p2cni/localoperator.hh>
-
-#endif
diff --git a/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cniproperties.hh b/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cniproperties.hh
deleted file mode 100644
index b3f5ec4..0000000
--- a/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cniproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOCNISTOKESTWOPTWOCNI_PROPERTIES_HH_OLD
-#define DUMUX_TWOCNISTOKESTWOPTWOCNI_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cnistokes2p2cni/properties.hh instead
-
-#include <dumux/multidomain/2cnistokes2p2cni/properties.hh>
-
-#endif
diff --git a/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cnipropertydefaults.hh b/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cnipropertydefaults.hh
deleted file mode 100644
index 7765c8d..0000000
--- a/dumux/multidomain/2cnistokes2p2cni/2cnistokes2p2cnipropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOCNISTOKESTWOPTWOCNI_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_TWOCNISTOKESTWOPTWOCNI_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cnistokes2p2cni/propertydefaults.hh instead
-
-#include <dumux/multidomain/2cnistokes2p2cni/propertydefaults.hh>
-
-#endif
diff --git a/dumux/multidomain/2cnistokes2p2cni/CMakeLists.txt b/dumux/multidomain/2cnistokes2p2cni/CMakeLists.txt
index 49749c8..2756ffc 100644
--- a/dumux/multidomain/2cnistokes2p2cni/CMakeLists.txt
+++ b/dumux/multidomain/2cnistokes2p2cni/CMakeLists.txt
@@ -1,9 +1,6 @@
 
 #install headers
 install(FILES
-2cnistokes2p2cnilocaloperator.hh
-2cnistokes2p2cniproperties.hh
-2cnistokes2p2cnipropertydefaults.hh
 localoperator.hh
 properties.hh
 propertydefaults.hh
diff --git a/dumux/multidomain/2cstokes2p2c/2cstokes2p2clocaloperator.hh b/dumux/multidomain/2cstokes2p2c/2cstokes2p2clocaloperator.hh
deleted file mode 100644
index 78aed87..0000000
--- a/dumux/multidomain/2cstokes2p2c/2cstokes2p2clocaloperator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2CSTOKES_2P2C_LOCALOPERATOR_HH_OLD
-#define DUMUX_2CSTOKES_2P2C_LOCALOPERATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cstokes2p2c/localoperator.hh instead
-
-#include <dumux/multidomain/2cstokes2p2c/localoperator.hh>
-
-#endif
diff --git a/dumux/multidomain/2cstokes2p2c/2cstokes2p2cnewtoncontroller.hh b/dumux/multidomain/2cstokes2p2c/2cstokes2p2cnewtoncontroller.hh
deleted file mode 100644
index 38be033..0000000
--- a/dumux/multidomain/2cstokes2p2c/2cstokes2p2cnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_2CSTOKES_2P2C_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_2CSTOKES_2P2C_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cstokes2p2c/newtoncontroller.hh instead
-
-#include <dumux/multidomain/2cstokes2p2c/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/multidomain/2cstokes2p2c/2cstokes2p2cproperties.hh b/dumux/multidomain/2cstokes2p2c/2cstokes2p2cproperties.hh
deleted file mode 100644
index d4d4755..0000000
--- a/dumux/multidomain/2cstokes2p2c/2cstokes2p2cproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOCSTOKESTWOPTWOC_PROPERTIES_HH_OLD
-#define DUMUX_TWOCSTOKESTWOPTWOC_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cstokes2p2c/properties.hh instead
-
-#include <dumux/multidomain/2cstokes2p2c/properties.hh>
-
-#endif
diff --git a/dumux/multidomain/2cstokes2p2c/2cstokes2p2cpropertydefaults.hh b/dumux/multidomain/2cstokes2p2c/2cstokes2p2cpropertydefaults.hh
deleted file mode 100644
index be664a6..0000000
--- a/dumux/multidomain/2cstokes2p2c/2cstokes2p2cpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_TWOCSTOKESTWOPTWOC_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_TWOCSTOKESTWOPTWOC_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/2cstokes2p2c/propertydefaults.hh instead
-
-#include <dumux/multidomain/2cstokes2p2c/propertydefaults.hh>
-
-#endif
diff --git a/dumux/multidomain/2cstokes2p2c/CMakeLists.txt b/dumux/multidomain/2cstokes2p2c/CMakeLists.txt
index 66a70d6..4edbf94 100644
--- a/dumux/multidomain/2cstokes2p2c/CMakeLists.txt
+++ b/dumux/multidomain/2cstokes2p2c/CMakeLists.txt
@@ -1,10 +1,6 @@
 
 #install headers
 install(FILES
-2cstokes2p2clocaloperator.hh
-2cstokes2p2cnewtoncontroller.hh
-2cstokes2p2cproperties.hh
-2cstokes2p2cpropertydefaults.hh
 localoperator.hh
 newtoncontroller.hh
 properties.hh
diff --git a/dumux/multidomain/CMakeLists.txt b/dumux/multidomain/CMakeLists.txt
index 78568b4..cadda95 100644
--- a/dumux/multidomain/CMakeLists.txt
+++ b/dumux/multidomain/CMakeLists.txt
@@ -1,7 +1,5 @@
-add_subdirectory("2cnistokes2p2cni")
-add_subdirectory("2cstokes2p2c")
-add_subdirectory("common")
-add_subdirectory("couplinglocalresiduals")
+add_subdirectory(2cnistokes2p2cni)
+add_subdirectory(2cstokes2p2c)
 
 #install headers
 install(FILES
diff --git a/dumux/multidomain/common/CMakeLists.txt b/dumux/multidomain/common/CMakeLists.txt
deleted file mode 100644
index b6ca492..0000000
--- a/dumux/multidomain/common/CMakeLists.txt
+++ /dev/null
@@ -1,15 +0,0 @@
-
-#install headers
-install(FILES
-multidomainassembler.hh
-multidomainconvergencewriter.hh
-multidomainlocaloperator.hh
-multidomainmodel.hh
-multidomainnewtoncontroller.hh
-multidomainproblem.hh
-multidomainproperties.hh
-multidomainpropertydefaults.hh
-splitandmerge.hh
-subdomainproperties.hh
-subdomainpropertydefaults.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/multidomain/common)
diff --git a/dumux/multidomain/common/boxcouplinglocalresidual.hh b/dumux/multidomain/common/boxcouplinglocalresidual.hh
deleted file mode 100644
index d1c41e2..0000000
--- a/dumux/multidomain/common/boxcouplinglocalresidual.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_BOX_COUPLING_LOCAL_RESIDUAL_HH_OLD
-#define DUMUX_BOX_COUPLING_LOCAL_RESIDUAL_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/boxcouplinglocalresidual.hh instead
-
-#include <dumux/multidomain/boxcouplinglocalresidual.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainassembler.hh b/dumux/multidomain/common/multidomainassembler.hh
deleted file mode 100644
index d5e4f66..0000000
--- a/dumux/multidomain/common/multidomainassembler.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_ASSEMBLER_HH_OLD
-#define DUMUX_MULTIDOMAIN_ASSEMBLER_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/assembler.hh instead
-
-#include <dumux/multidomain/assembler.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainconvergencewriter.hh b/dumux/multidomain/common/multidomainconvergencewriter.hh
deleted file mode 100644
index 98bd359..0000000
--- a/dumux/multidomain/common/multidomainconvergencewriter.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_CONVERGENCEWRITER_HH_OLD
-#define DUMUX_MULTIDOMAIN_CONVERGENCEWRITER_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/convergencewriter.hh instead
-
-#include <dumux/multidomain/convergencewriter.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainlocaloperator.hh b/dumux/multidomain/common/multidomainlocaloperator.hh
deleted file mode 100644
index 14af986..0000000
--- a/dumux/multidomain/common/multidomainlocaloperator.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_LOCAL_OPERATOR_HH_OLD
-#define DUMUX_MULTIDOMAIN_LOCAL_OPERATOR_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/localoperator.hh instead
-
-#include <dumux/multidomain/localoperator.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainmodel.hh b/dumux/multidomain/common/multidomainmodel.hh
deleted file mode 100644
index 107c441..0000000
--- a/dumux/multidomain/common/multidomainmodel.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_MODEL_HH_OLD
-#define DUMUX_MULTIDOMAIN_MODEL_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/model.hh instead
-
-#include <dumux/multidomain/model.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainnewtoncontroller.hh b/dumux/multidomain/common/multidomainnewtoncontroller.hh
deleted file mode 100644
index 2201ded..0000000
--- a/dumux/multidomain/common/multidomainnewtoncontroller.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_NEWTON_CONTROLLER_HH_OLD
-#define DUMUX_MULTIDOMAIN_NEWTON_CONTROLLER_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/newtoncontroller.hh instead
-
-#include <dumux/multidomain/newtoncontroller.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainproblem.hh b/dumux/multidomain/common/multidomainproblem.hh
deleted file mode 100644
index ea174ce..0000000
--- a/dumux/multidomain/common/multidomainproblem.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_PROBLEM_HH_OLD
-#define DUMUX_MULTIDOMAIN_PROBLEM_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/problem.hh instead
-
-#include <dumux/multidomain/problem.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainproperties.hh b/dumux/multidomain/common/multidomainproperties.hh
deleted file mode 100644
index e9875b8..0000000
--- a/dumux/multidomain/common/multidomainproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_PROPERTIES_HH_OLD
-#define DUMUX_MULTIDOMAIN_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/properties.hh instead
-
-#include <dumux/multidomain/properties.hh>
-
-#endif
diff --git a/dumux/multidomain/common/multidomainpropertydefaults.hh b/dumux/multidomain/common/multidomainpropertydefaults.hh
deleted file mode 100644
index 12e10bc..0000000
--- a/dumux/multidomain/common/multidomainpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_MULTIDOMAIN_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_MULTIDOMAIN_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/propertydefaults.hh instead
-
-#include <dumux/multidomain/propertydefaults.hh>
-
-#endif
diff --git a/dumux/multidomain/common/splitandmerge.hh b/dumux/multidomain/common/splitandmerge.hh
deleted file mode 100644
index 78c0950..0000000
--- a/dumux/multidomain/common/splitandmerge.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_SPLIT_AND_MERGE_HH_OLD
-#define DUMUX_SPLIT_AND_MERGE_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/splitandmerge.hh instead
-
-#include <dumux/multidomain/splitandmerge.hh>
-
-#endif
diff --git a/dumux/multidomain/common/subdomainproperties.hh b/dumux/multidomain/common/subdomainproperties.hh
deleted file mode 100644
index 93321d6..0000000
--- a/dumux/multidomain/common/subdomainproperties.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_SUBDOMAIN_PROPERTIES_HH_OLD
-#define DUMUX_SUBDOMAIN_PROPERTIES_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/subdomainproperties.hh instead
-
-#include <dumux/multidomain/subdomainproperties.hh>
-
-#endif
diff --git a/dumux/multidomain/common/subdomainpropertydefaults.hh b/dumux/multidomain/common/subdomainpropertydefaults.hh
deleted file mode 100644
index 67087a5..0000000
--- a/dumux/multidomain/common/subdomainpropertydefaults.hh
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef DUMUX_SUBDOMAIN_PROPERTY_DEFAULTS_HH_OLD
-#define DUMUX_SUBDOMAIN_PROPERTY_DEFAULTS_HH_OLD
-
-#warning this header is deprecated, use dumux/multidomain/subdomainpropertydefaults.hh instead
-
-#include <dumux/multidomain/subdomainpropertydefaults.hh>
-
-#endif
diff --git a/dumux/multidomain/couplinglocalresiduals/2p2ccouplinglocalresidual.hh b/dumux/multidomain/couplinglocalresiduals/2p2ccouplinglocalresidual.hh
deleted file mode 100644
index bd5b04b..0000000
--- a/dumux/multidomain/couplinglocalresiduals/2p2ccouplinglocalresidual.hh
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef DUMUX_2P2C_COUPLING_LOCAL_RESIDUAL_OLD_HH
-#define DUMUX_2P2C_COUPLING_LOCAL_RESIDUAL_OLD_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-#include "../2cstokes2p2c/2p2ccouplinglocalresidual.hh"
-
-#endif // DUMUX_2P2C_COUPLING_LOCAL_RESIDUAL_OLD_HH
diff --git a/dumux/multidomain/couplinglocalresiduals/2p2cnicouplinglocalresidual.hh b/dumux/multidomain/couplinglocalresiduals/2p2cnicouplinglocalresidual.hh
deleted file mode 100644
index c6a7133..0000000
--- a/dumux/multidomain/couplinglocalresiduals/2p2cnicouplinglocalresidual.hh
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef DUMUX_2P2CNI_COUPLING_LOCAL_RESIDUAL_OLD_HH
-#define DUMUX_2P2CNI_COUPLING_LOCAL_RESIDUAL_OLD_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-#include "../2cnistokes2p2cni/2p2cnicouplinglocalresidual.hh"
-
-#endif // DUMUX_2P2CNI_COUPLING_LOCAL_RESIDUAL_OLD_HH
diff --git a/dumux/multidomain/couplinglocalresiduals/CMakeLists.txt b/dumux/multidomain/couplinglocalresiduals/CMakeLists.txt
deleted file mode 100644
index 402bfb6..0000000
--- a/dumux/multidomain/couplinglocalresiduals/CMakeLists.txt
+++ /dev/null
@@ -1,9 +0,0 @@
-
-#install headers
-install(FILES
-2p2ccouplinglocalresidual.hh
-2p2cnicouplinglocalresidual.hh
-boxcouplinglocalresidual.hh
-stokesnccouplinglocalresidual.hh
-stokesncnicouplinglocalresidual.hh
-DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/multidomain/couplinglocalresiduals)
diff --git a/dumux/multidomain/couplinglocalresiduals/boxcouplinglocalresidual.hh b/dumux/multidomain/couplinglocalresiduals/boxcouplinglocalresidual.hh
deleted file mode 100644
index 4e1455e..0000000
--- a/dumux/multidomain/couplinglocalresiduals/boxcouplinglocalresidual.hh
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef DUMUX_BOX_COUPLING_LOCAL_RESIDUAL_OLD_HH
-#define DUMUX_BOX_COUPLING_LOCAL_RESIDUAL_OLD_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-#include "../common/boxcouplinglocalresidual.hh"
-
-#endif // DUMUX_BOX_COUPLING_LOCAL_RESIDUAL_OLD_HH
diff --git a/dumux/multidomain/couplinglocalresiduals/stokesnccouplinglocalresidual.hh b/dumux/multidomain/couplinglocalresiduals/stokesnccouplinglocalresidual.hh
deleted file mode 100644
index 1f6079a..0000000
--- a/dumux/multidomain/couplinglocalresiduals/stokesnccouplinglocalresidual.hh
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef DUMUX_STOKESNC_COUPLING_LOCAL_RESIDUAL_OLD_HH
-#define DUMUX_STOKESNC_COUPLING_LOCAL_RESIDUAL_OLD_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-#include "../2cstokes2p2c/stokesnccouplinglocalresidual.hh"
-
-#endif // DUMUX_STOKESNC_COUPLING_LOCAL_RESIDUAL_OLD_HH
diff --git a/dumux/multidomain/couplinglocalresiduals/stokesncnicouplinglocalresidual.hh b/dumux/multidomain/couplinglocalresiduals/stokesncnicouplinglocalresidual.hh
deleted file mode 100644
index 5561be7..0000000
--- a/dumux/multidomain/couplinglocalresiduals/stokesncnicouplinglocalresidual.hh
+++ /dev/null
@@ -1,7 +0,0 @@
-#ifndef DUMUX_STOKESNCNI_COUPLING_LOCAL_RESIDUAL_OLD_HH
-#define DUMUX_STOKESNCNI_COUPLING_LOCAL_RESIDUAL_OLD_HH
-
-#warning This file is deprecated and will be removed after Dumux 2.9
-#include "../2cnistokes2p2cni/stokesncnicouplinglocalresidual.hh"
-
-#endif // DUMUX_STOKESNCNI_COUPLING_LOCAL_RESIDUAL_OLD_HH
diff --git a/dumux/porousmediumflow/2p2c/sequential/CMakeLists.txt b/dumux/porousmediumflow/2p2c/sequential/CMakeLists.txt
index 7d852b7..2974d84 100644
--- a/dumux/porousmediumflow/2p2c/sequential/CMakeLists.txt
+++ b/dumux/porousmediumflow/2p2c/sequential/CMakeLists.txt
@@ -2,7 +2,6 @@
 #install headers
 install(FILES
 adaptiveproperties.hh
-fluidstate.hh
 problem.hh
 properties.hh
 celldataadaptive.hh
@@ -19,6 +18,5 @@ fvpressuremultiphysics.hh
 fvpressurecompositional.hh
 fvtransport.hh
 fvtransportmultiphysics.hh
-pseudo1p2cfluidstate.hh
 variableclassadaptive.hh
 DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/dumux/porousmediumflow/2p2c/sequential)
diff --git a/dumux/porousmediumflow/2p2c/sequential/fluidstate.hh b/dumux/porousmediumflow/2p2c/sequential/fluidstate.hh
deleted file mode 100644
index 1331b29..0000000
--- a/dumux/porousmediumflow/2p2c/sequential/fluidstate.hh
+++ /dev/null
@@ -1,4 +0,0 @@
-#ifndef DUMUX_2P2C_FLUID_STATE_HH
-#warning "dumux/porousmediumflow/2p2c/sequential/fluidstate.hh is deprecated, use dumux/material/fluidstates/2p2c.hh instead."
-#include <dumux/material/fluidstates/2p2c.hh>
-#endif
diff --git a/dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh b/dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh
deleted file mode 100644
index 2aedd8f..0000000
--- a/dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh
+++ /dev/null
@@ -1,4 +0,0 @@
-#ifndef DUMUX_PSEUDO1P2C_FLUID_STATE_HH
-#warning "dumux/porousmediumflow/2p2c/sequential/pseudo1p2cfluidstate.hh is deprecated, use dumux/material/fluidstates/pseudo1p2c.hh instead."
-#include <dumux/material/fluidstates/pseudo1p2c.hh>
-#endif
