default:
  image: $IMAGE

stages:
  - configure
  - build
  - test

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE=="parent_pipeline"

# variables that should be overwritten by the trigger
variables:
  TRIGGER_SOURCE: "undefined"
  COMMIT_BRANCH: "undefined"
  MR_TARGET_BRANCH_NAME: "undefined"

select tests:
  stage: configure
  script:
    - dunecontrol --opts=$DUNE_OPTS_FILE --current all
    - |
      getLastSuccesful() {
          python3 .gitlab-ci/getpipelineinfo.py \
                      --access-token $CI_JOB_API_READ_TOKEN \
                      --look-for latest-merge \
                      --print-format commit-sha
      }

      if [[ "$TRIGGER_SOURCE" == "merge_request_event" ]]; then
          echo "Detecting changes w.r.t to target branch '$MR_TARGET_BRANCH_NAME'"
          python3 bin/testing/getchangedfiles.py --outfile changedfiles.txt \
                                                 --target-tree origin/$MR_TARGET_BRANCH_NAME
          python3 bin/testing/findtests.py --outfile affectedtests.json \
                                           --file-list changedfiles.txt \
                                           --build-dir build-cmake

      elif [[ "$TRIGGER_SOURCE" == "schedule" ]]; then
          echo "Starting scheduled pipeline"
          echo "Skipping test selection, build/test stages will consider all tests!"
          touch affectedtests.json

      elif [ -n $TEST_AGAINST_LAST_SUCCESSFUL ]; then
          echo "Determining sha of the last successful pipeline to test against"

          if ! getLastSuccesful; then
              echo "Could not find a successful pipeline, will build/run all tests"
              touch affectedtests.json
          else
              COMMIT_SHA=$(getLastSuccesful)
              echo "Comparing against sha $COMMIT_SHA"
              python3 bin/testing/getchangedfiles.py --outfile changedfiles.txt \
                                                     --source-tree HEAD \
                                                     --target-tree $COMMIT_SHA
              python3 bin/testing/findtests.py --outfile affectedtests.json \
                                               --file-list changedfiles.txt \
                                               --build-dir build-cmake
          fi

      else
          echo "Unknown pipeline trigger event"
          echo "Skipping test selection, build/test stages will consider all tests!"
          touch affectedtests.json
      fi
  artifacts:
    paths:
      - build-cmake
      - affectedtests.json
    expire_in: 3 hours

build dumux:
  stage: build
  script:
    - |
      pushd build-cmake
        make clean && make all
        if [ -s ../affectedtests.json ]; then
          python3 ../bin/testing/runselectedtests.py -c ../affectedtests.json -b
        else
          python3 ../bin/testing/runselectedtests.py --all -b
        fi
      popd
  artifacts:
    paths:
      - build-cmake
      - affectedtests.json
    expire_in: 3 hours
  needs:
    - job: select tests
      artifacts: true

test dumux:
  stage: test
  variables:
    OMPI_ALLOW_RUN_AS_ROOT: 1
    OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1
  script:
    - |
      pushd build-cmake
        if [ -s ../affectedtests.json ]; then
          python3 ../bin/testing/runselectedtests.py -c ../affectedtests.json -t
        else
          python3 ../bin/testing/runselectedtests.py --all -t
        fi
      popd
  needs:
    - job: build dumux
      artifacts: true
  artifacts:
    reports:
      junit: junit/dumux-cmake.xml
