/*!
 * \file
 *
 * \brief This file contains all module definitions for the doxygen documentation.
 *
 */

/* ***************** Porousmediumflow ******************/
/*!
 * \defgroup PorousmediumflowModels Porous-Medium Flow Models
 * \brief Single and multi-phase models for flow and transport in porous materials
 */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup OnePModel 1p
     * \brief Single-phase (immiscible) Darcy flow
     * \copydetails ./porousmediumflow/1p/model.hh
     */
       /*!
        * \ingroup OnePModel
        * \defgroup SequentialOnePModel Sequential
        * \brief Sequential single-phase (immiscible) Darcy flow
        *
        * # Pressure
        * \copydetails ./porousmediumflow/1p/sequential/diffusion/cellcentered/pressure.hh
        *
        * # Velocity
        * \copydetails ./porousmediumflow/1p/sequential/diffusion/cellcentered/velocity.hh
        */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup OnePNCModel 1pnc
     * \brief Single-phase, multi-component Darcy flow
     * \copydetails ./porousmediumflow/1pnc/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup OnePNCMinModel 1pncmin
     * \brief Single-phase, multi-component Darcy flow with mineralization
     * \copydetails ./porousmediumflow/1pncmin/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup TwoPModel 2p
     * \brief Two-phase (immiscible) Darcy flow
     * \copydetails ./porousmediumflow/2p/model.hh
     */
        /*!
         * \ingroup TwoPModel
         * \defgroup SequentialTwoPModel Sequential
         * \brief Sequential two-phase (immiscible) Darcy flow
         *
         * # Pressure
         * \copydetails ./porousmediumflow/2p/sequential/diffusion/cellcentered/pressure.hh
         *
         * # Velocity
         * \copydetails ./porousmediumflow/2p/sequential/diffusion/cellcentered/velocity.hh
         */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup TwoPOneCModel 2p1c
     * \brief Two-phase, one-component Darcy flow
     * \copydetails ./porousmediumflow/2p1c/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup TwoPTwoCModel 2p2c
     * \brief Two-phase, two-component Darcy flow
     * \copydetails ./porousmediumflow/2p2c/model.hh
     */
        /*!
         * \ingroup TwoPTwoCModel
         * \defgroup SequentialTwoPTwoCModel Sequential
         * \brief Sequential two-phase, two-component Darcy flow
         *
         * # Pressure
         * \copydetails ./porousmediumflow/2p2c/sequential/fvpressure.hh
         *
         * # Velocity
         * \copydetails ./porousmediumflow/2p2c/sequential/fvtransport.hh
         */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup TwoPNCModel 2pnc
     * \brief two-phase, multi-component Darcy flow
     * \copydetails ./porousmediumflow/2pnc/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup TwoPNCMinModel 2pncmin
     * \brief Two-phase, multi-component Darcy flow with mineralization
     * \copydetails ./porousmediumflow/2pncmin/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup ThreePModel 3p
     * \brief Three-phase (immiscible) Darcy flow
     * \copydetails ./porousmediumflow/3p/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup ThreePThreeCModel 3p3c
     * \brief Three-phase, three-component Darcy flow
     * \copydetails ./porousmediumflow/3p3c/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup ThreePWaterOilModel 3pwateroil
     * \brief Three-phase, two-component Darcy flow with water (liquid & gas) and oil
     * \copydetails ./porousmediumflow/3pwateroil/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup CO2Model CO2
     * \brief Two-phase, two-component Darcy flow specialized for supercritical CO<sub>2</sub> storage
     * \copydetails ./porousmediumflow/co2/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup MineralizationModel mineralization
     * \brief Model adding components that can precipitate as a solid phase to a standard Darcy flow model
     *
     * \copydetails ./porousmediumflow/mineralization/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup MPNCModel mpnc
     * \brief Generalized multi-phase, multi-component Darcy flow
     *
     * \copydetails ./porousmediumflow/mpnc/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup PorousmediumNonEquilibriumModel NonEquilibrium
     * \brief Model that adds nonequilibrium equations to another porous medium flow model (only used in MPNCModel currently)
     * \copydetails ./porousmediumflow/nonequilibrium/model.hh
     */
        /*!
         * \ingroup PorousmediumNonEquilibriumModel
         * \defgroup PorousmediumThermalNonEquilibriumModel ThermalNonEquilibrium
         * \brief Model that adapts the energy localresidual to thermal nonequilibrium
         * \copydetails ./porousmediumflow/nonequilibrium/thermal/localresidual.hh
         */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup NIModel nonisothermal
     * \brief Model that adds an energy equation (thermal equilibrium) to another porous medium flow model
     *
     * \copydetails ./porousmediumflow/nonisothermal/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup RichardsModel Richards
     * \brief Richards flow
     * \copydetails ./porousmediumflow/richards/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup RichardsNCModel Richards nc
     * \brief Richards multi-component flow
     * \copydetails ./porousmediumflow/richardsnc/model.hh
     */
    /*!
     * \ingroup PorousmediumflowModels
     * \defgroup TracerModel Tracer
     * \brief Multi-component advection-diffusion-reaction model with given velocity field
     * \copydetails ./porousmediumflow/tracer/model.hh
     */

/* ***************** FreeflowModels ******************/
/*!
 * \defgroup FreeflowModels Free Flow Models
 * \brief Single-phase models basing on the Navier-Stokes equation
 */
    /*!
     * \ingroup FreeflowModels
     * \defgroup NavierStokesModel Navier-Stokes
     * \brief Single-phase Navier-Stokes flow
     * \copydetails ./freeflow/navierstokes/model.hh
     */
    /*!
     * \ingroup FreeflowModels
     * \defgroup RANSModel Reynolds-Averaged Navier-Stokes
     * \brief Single-phase Reynolds-Averaged Navier-Stokes flow
     * \copydetails ./freeflow/rans/model.hh
     */
      /*!
       * \ingroup RANSModel
       * \defgroup ZeroEqModel 0-Eq. Models
       * \brief Zero-equation or algebraic turbulence models
       * \copydetails ./freeflow/rans/zeroeq/model.hh
       */
      /*!
       * \ingroup RANSModel
       * \defgroup OneEqModel 1-Eq. Models
       * \brief One-equation turbulence model by Spalart-Allmaras
       * \copydetails ./freeflow/rans/oneeq/model.hh
       */
      /*!
       * \ingroup RANSModel
       * \defgroup TwoEqModel 2-Eq. Models
       * \brief Two-equation turbulence models
       */
        /*!
         * \ingroup TwoEqModel
         * \defgroup KEpsilonModel K-epsilon model
         * \brief K-epsilon model
         * \copydetails ./freeflow/rans/twoeq/kepsilon/model.hh
         */
        /*!
         * \ingroup TwoEqModel
         * \defgroup KOmegaModel K-omega model
         * \brief K-omega model
         * \copydetails ./freeflow/rans/twoeq/komega/model.hh
         */
        /*!
         * \ingroup TwoEqModel
         * \defgroup LowReKEpsilonModel Low-Re k-epsilon model
         * \brief Low-Re k-epsilon model
         * \copydetails ./freeflow/rans/twoeq/lowrekepsilon/model.hh
         */
    /*!
     * \ingroup FreeflowModels
     * \defgroup FreeflowNCModel Compositional
     * \brief Single-phase multi-component free-flow flow models
     * \copydetails ./freeflow/compositional/navierstokesncmodel.hh
     */
    /*!
     * \ingroup FreeflowModels
     * \defgroup FreeflowNIModel Nonisothermal
     * \brief An energy equation adaptor for isothermal free-flow models
     * \copydetails ./freeflow/nonisothermal/model.hh
     */

/* ***************** Benchmarks and Tests ******************/
/*!
 * \defgroup BenchmarksAndTests Benchmarks and Tests
 * \brief Benchmarks and tests used for (automated) testing and demonstration purposes
 */
     /*!
      * \ingroup BenchmarksAndTests
      * \defgroup PorousmediumflowTests Porous-Medium Flow Tests
      * \brief Single and multi-phase tests for flow and transport in porous materials
      */
          /*!
          * \ingroup PorousmediumflowTests
           * \defgroup OnePTests 1p (one phase) benchmarks and tests
          * \brief Various tests using a OnePModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
           * \defgroup OnePNCTests 1pnc (one phase, multi-component) benchmarks and tests
           * \brief Various tests using a OnePNCModel. The files are listed below.
           */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup OnePNCMinTests 1pncmin (one phase, multi-component mineralization) benchmarks and tests
         * \brief Various tests using the OnePNCMinModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup TwoPTests 2p (two phase) benchmarks and tests
          * \brief Various tests using a TwoPModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup TwoPOneCTests 2p1c (two phase, one component) benchmarks and tests
           * \brief Various tests using the TwoPOneCModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup TwoPTwoCTests 2p2c (two phase, two component) benchmarks and tests
          * \brief Various tests using a TwoPTwoCModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup TwoPNCTests 2pnc (two phase, multi-component) benchmarks and tests
          * \brief A fuel cell test problem using the TwoPNCModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup TwoPNCMinTests 2pncmin (two phase, multi-component mineralization) benchmarks and tests
          * \brief A salt dissolution test problem using the TwoPNCMinModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup ThreePTests 3p (three phase) benchmarks and tests
          * \brief Various tests using a ThreePModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup ThreePThreeCTests 3p3c (three phase, three component) benchmarks and tests
          * \brief Various tests using a ThreePThreeCModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup ThreePWaterOilTests 3pwateroil (three phase, water oil) benchmarks and tests
          * \brief A SAGD test problem using the ThreePWaterOilModel. The files are listed below.
          */
        /*!
          * \ingroup PorousmediumflowTests
          * \defgroup CO2Tests CO2 (two phase, two component) benchmarks and tests
          * \brief A CO2 injection test problem using the TwoPTwoCModel and heterogeneous spatial parameters. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup MPNCTests MPNC (multi-phase, multi-component) benchmarks and tests
         * \brief Various tests using the MPNCModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup RichardsTests Richards benchmarks and tests
          * \brief Various tests using a RichardsModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup RichardsNCTests Richards multi-component benchmarks and tests
          * \brief A multi-component transport problem in the unsaturated zone using the RichardsNCModel. The files are listed below.
          */
         /*!
          * \ingroup PorousmediumflowTests
          * \defgroup TracerTests Tracer benchmarks and tests
          * \brief Various tests using a TracerModel. The files are listed below.
          */
    /*!
      * \ingroup BenchmarksAndTests
      * \defgroup FreeflowTests Free Flow Tests
      * \brief Varios tests for single-phase Navier-Stokes / Stokes tests
      */
           /*!
          * \ingroup FreeflowTests
          * \defgroup NavierStokesTests Single-phase Navier-Stokes tests
          * \brief Various tests using a Single-phase Navier-Stokes flow. The files are listed below.
          */
           /*!
          * \ingroup FreeflowTests
          * \defgroup NavierStokesNCTests Single-phase Navier-Stokes nc tests
          * \brief Various tests using a Single-phase Navier-Stokes flow. The files are listed below.
          */
    /*!
      * \ingroup BenchmarksAndTests
      * \defgroup MaterialTests Material system tests
      * \brief Benchmarks and Test(s) for the material system.
      */

/* ***************** Discretization ******************/
/*!
 * \defgroup Discretization Discretization schemes
 * \brief The discretization schemes available in DuMu<sup>x</sup>
 */
    /*!
     * \ingroup Discretization
     * \defgroup BoxDiscretization Box FV scheme
     * \brief The box method is a collocated finite volume scheme with control volumes centered at grid nodes.
     */
    /*!
     * \ingroup Discretization
     * \defgroup CCDiscretization Cell-centered FV scheme
     * \brief Finite volume schemes with degrees of freedom located at grid cell centers.
     */
        /*!
         * \ingroup CCDiscretization
         * \defgroup CCTpfaDiscretization Two-point flux approximation (Tpfa)
         * \brief A cell-centered finite volume scheme with two-point flux approximation.
         */
        /*!
         * \ingroup CCDiscretization
         * \defgroup CCMpfaDiscretization Multi-point flux approximation (Mpfa)
         * \brief A cell-centered finite volume scheme with multi-point flux approximation.
         */
    /*!
     * \ingroup Discretization
     * \defgroup StaggeredDiscretization Staggered FV scheme
     * \brief A staggered finite volume scheme with degrees of freedom at cell-centers and facets.
     */

/* ***************** Material ******************/
/*!
 * \defgroup Material Material and Fluid Framework
 * \brief The DuMu<sup>x</sup> material and fluid framework with constitutive laws and physics
 * \par
 * Short description of the most important concepts of the material and fluid framework:
 *
 *  - __Binary coefficient:__ <br>  @copydoc Binarycoefficients
 *  - __Chemistry:__ <br> @copydoc Chemistry
 *  - __Component:__ <br> @copydoc Components
 *  - __Constraint solver:__ <br> @copydoc ConstraintSolver
 *  - __Equation of state:__ <br> @copydoc EOS
 *  - __Fluid-Matrix Interactions:__ <br> @copydoc Fluidmatrixinteractions
 *  - __Fluid state:__ <br> @copydoc FluidStates
 *  - __Fluid system:__ <br> @copydoc Fluidsystems
 *  - __Spatial Parameters:__ <br> @copydoc SpatialParameters
 */
    /*!
     * \ingroup Material
     * \defgroup Binarycoefficients Binary Coefficients
     * \brief Binary coefficients
     *
     *  Binary coefficients describe the relations
     *  of a mixture of two components. Typical binary coefficients are
     *  Henry coefficients or binary molecular diffusion
     *  coefficients. So far, the programming interface for accessing binary
     *  coefficients has not been standardized in Dumux.
     */
    /*!
     * \ingroup Material
     * \defgroup Chemistry Chemistry
     * \brief Chemical reactions
     *
     * Chemical reactions can be relevant for all thermodynamic relations
     * for the liquid and gas phase of multiple chemical species
     * The main purpose is to provide a convenient way to access these
     * relationships via source or sink terms.
     */
    /*!
     * \ingroup Material
     * \defgroup Components Components
     * \brief thermodynamics of single chemical species or fixed mixtures of species
     *
     * Components provide the thermodynamic relations for the liquid,
     * gaseous and/or solid state of a single
     * chemical species or a _fixed_ mixture of species.
     * Fluid systems use components to compute thermodynamic quantities of phases.
     */
        /*!
         * \ingroup Components
         * \defgroup IAPWS IAPWS
         * \brief Tabulated values according to the International Association for the Properties of Water and Steam (IAPWS)
         */
    /*!
     * \ingroup Material
     * \defgroup ConstraintSolver Constraint Solver
     * \brief Constraint solvers converting primary to secondary variables
     *
     * Constraint solvers are auxiliary tools to
     * make sure that a fluid state is consistent with some thermodynamic
     * constraints. All constraint solvers specify a well defined set of
     * input variables and make sure that the resulting fluid state is
     * consistent with a given set of thermodynamic equations.
     * Constraint solvers connect the thermodynamic relations expressed by
     * fluid systems with the thermodynamic quantities stored by fluid
     * states. Using them is not mandatory for models, but given the fact
     * that some thermodynamic constraints can be quite complex to solve,
     * sharing this code between models makes sense.
     */
    /*!
     * \ingroup Material
     * \defgroup EOS Equation of State
     * \brief Equations of state
     *
     * Equations of state (EOS) are auxiliary
     * classes which provide relations between a fluid phase's temperature,
     * pressure, composition and density. Since these classes are only used
     * internally in fluid systems, their programming interface is
     * currently ad-hoc.
     */
    /*!
     * \ingroup Material
     * \defgroup Fluidmatrixinteractions Fluid-Matrix Interactions
     * \brief e.g. pc-Sw, kr-Sw relations, effective diffusion coefficients
     *
     * Some parameters are functions of the fluid state as well as parameters of
     * the matrix. For example the capillary pressure is a function of the phase saturation
     * and the shape parameter \f$\lambda\f$ which is dependent on the material. All such relations
     * are gathered in this module.
     */
    /*!
     * \ingroup Material
     * \defgroup FluidStates Fluid States
     * \brief Fluid states are responsible for representing the
     * complete thermodynamic configuration of a system at a given spatial
     * and temporal position.
     *
     * A fluid state always provides access methods
     * to __all__ thermodynamic quantities, but the concept of a fluid state does not
     * mandate what assumptions are made to store these thermodynamic
     * quantities. What fluid states also do __not__ do is to make sure
     * that the thermodynamic state which they represent is physically
     * possible.
     */
    /*!
     * \ingroup Material
     * \defgroup Fluidsystems Fluid Systems
     * \brief Fluid systems express the thermodynamic relations (functions).
     *
     * Since functions do
     *  not exhibit any internal state, fluid systems are stateless classes,
     *  i.e. all member functions are static. This is a conscious
     *  decision since the thermodynamic state of the system is expressed by
     *  a fluid state!
     */
    /*!
     * \ingroup Material
     * \defgroup SpatialParameters Spatial Parameters
     * \brief Parameters of the porous matrix and other parameter varying with position (e.g. porosity)
     *
     * All parameters which depend on the matrix and
     * therefore on the position within the model domain are defined as spatial
     * parameters. For example permeability, porosity etc.
     *
     */

/* ***************** Adaptive ******************/
/*!
 * \defgroup Adaptive Adaptive
 * \brief Adaptive grids
 */

/* ***************** Assembly ******************/
/*!
 * \defgroup Assembly Assembly
 * \brief Assembly of linear systems (Jacobian and residual)
 */

/* ***************** Common ******************/
/*!
 * \defgroup Common Common
 * \brief Common classes, functions, properties and concepts
 */
     /*!
       * \ingroup Common
       * \defgroup Properties Properties
       * \brief Basic properties of all models in DuMu<sup>x</sup>
       */

/* ***************** InputOutput ******************/
/*!
 * \defgroup InputOutput Input Output
 * \brief Classes and functions dealing with input and output of data and grids
 */

/* ***************** Linear ******************/
/*!
 * \defgroup Linear Linear
 * \brief Linear solvers and helpers
 */

/* ***************** Nonlinear ******************/
/*!
 * \defgroup Nonlinear Nonlinear
 * \brief Nonlinear solvers: Newton method
 */

/* ***************** Parallel ******************/
/*!
 * \defgroup Parallel Parallel
 * \brief Helpers for parallel runs with MPI
 */

/* ***************** MultiDomain ******************/
/*!
 * \defgroup MultiDomain Multidomain simulations
 * \brief Classes to run problems with multiple domains
 *
 * The multi domain module allows to couple regular DuMu<sup>x</sup> problems.
 * Several coupling modes are currently available.
 */
     /*!
      * \ingroup MultiDomain
      * \defgroup EmbeddedCoupling Embedded mixed-dimension coupling mode
      * \brief Couples problems of different dimensions where one or more lower-dimensional problems (lowdim) are embedded in a          higher-dimensional domain (bulk). Examples are embedded one-dimensional networks for the simulation of blood tissue perfusion, or root-soil interaction, and embedded fracture models.
      */
     /*!
      * \ingroup MultiDomain
      * \defgroup FacetCoupling Conforming mixed-dimension facet coupling mode
      * \brief Couples problems of different dimensions where one or more lower-dimensional problems (lowdim) live on the facets of the          higher-dimensional domain (bulk). Examples are discrete facet conforming fracture models and problems with physics on a domain surface.
      */
     /*!
      * \ingroup MultiDomain
      * \defgroup BoundaryCoupling Boundary coupling mode
      * \brief Couples problems of different or equal dimension that touch at the domain boundary. Examples are equal-dimension multi-physics problems like Darcy-Stokes coupling or PNM (pore network model)-Darcy coupling.
      */
