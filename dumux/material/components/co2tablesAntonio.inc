struct TabulatedDensityTraits {
   typedef double Scalar;
   static const char  *name;
   static const int    numTempSteps = 51;
   static constexpr Scalar minTemp = 3.04;
   static constexpr Scalar maxTemp = 103.04;
   static const int    numPressSteps = 127;
   static constexpr Scalar minPress = 100000.0;
   static constexpr Scalar maxPress = 60000000.0;
   static const Scalar vals[51][127];
};

const char  *TabulatedDensityTraits::name = "density";

const double TabulatedDensityTraits::vals[51][127] =
{
   {
       1.929280e+00,   9.909770e+00,   1.836300e+01,   2.736320e+01,   3.702580e+01,   
       4.748640e+01,   5.895930e+01,   7.175170e+01,   8.640570e+01,   1.038980e+02,   
       -9.076620e+02,   9.098240e+02,   9.119860e+02,   9.142610e+02,   9.164230e+02,   
       9.186980e+02,   9.209730e+02,   9.233630e+02,   9.256380e+02,   9.280270e+02,   
       9.304160e+02,   9.329190e+02,   9.353080e+02,   9.378110e+02,   9.403140e+02,   
       9.419530e+02,   9.449040e+02,   9.477030e+02,   9.505020e+02,   9.531520e+02,   
       9.558030e+02,   9.584560e+02,   9.609650e+02,   9.633310e+02,   9.658480e+02,   
       9.680810e+02,   9.704650e+02,   9.727120e+02,   9.748260e+02,   9.770890e+02,   
       9.792200e+02,   9.812230e+02,   9.832370e+02,   9.852620e+02,   9.872980e+02,   
       9.892120e+02,   9.911380e+02,   9.929450e+02,   9.948980e+02,   9.967340e+02,   
       9.984560e+02,   1.000190e+03,   1.001950e+03,   1.003720e+03,   1.005380e+03,   
       1.007060e+03,   1.008760e+03,   1.010360e+03,   1.011980e+03,   1.013610e+03,   
       1.015150e+03,   1.016710e+03,   1.018170e+03,   1.019780e+03,   1.021290e+03,   
       1.022710e+03,   1.024150e+03,   1.025630e+03,   1.027130e+03,   1.028540e+03,   
       1.029870e+03,   1.031230e+03,   1.032620e+03,   1.034040e+03,   1.035380e+03,   
       1.036650e+03,   1.038050e+03,   1.039280e+03,   1.040700e+03,   1.041900e+03,   
       1.043140e+03,   1.044410e+03,   1.045720e+03,   1.046870e+03,   1.048060e+03,   
       1.049290e+03,   1.050560e+03,   1.051680e+03,   1.053040e+03,   1.054070e+03,   
       1.055320e+03,   1.056440e+03,   1.057610e+03,   1.058650e+03,   1.059920e+03,   
       1.061060e+03,   1.062080e+03,   1.063160e+03,   1.064290e+03,   1.065320e+03,   
       1.066400e+03,   1.067540e+03,   1.068580e+03,   1.069680e+03,   1.070690e+03,   
       1.071770e+03,   1.072750e+03,   1.073810e+03,   1.074790e+03,   1.075850e+03,   
       1.076830e+03,   1.077750e+03,   1.078740e+03,   1.079820e+03,   1.080710e+03,   
       1.081680e+03,   1.082740e+03,   1.083630e+03,   1.084610e+03,   1.085560e+03,   
       1.086480e+03,   1.087380e+03,   1.088390e+03,   1.089260e+03,   1.090250e+03,   
       1.091120e+03,   1.150100e+03
   },
   {
       1.915060e+00,   9.830420e+00,   1.820150e+01,   2.710050e+01,   3.662770e+01,   
       4.690800e+01,   5.813630e+01,   7.057400e+01,   8.469090e+01,   1.012460e+02,   
       1.048210e+02,   -8.948060e+02,   8.971960e+02,   8.996980e+02,   9.022010e+02,   
       9.048180e+02,   9.073210e+02,   9.099380e+02,   9.124410e+02,   9.150570e+02,   
       9.176740e+02,   9.204050e+02,   9.230210e+02,   9.257520e+02,   9.284820e+02,   
       9.302300e+02,   9.333830e+02,   9.365320e+02,   9.395270e+02,   9.423710e+02,   
       9.452150e+02,   9.479110e+02,   9.506090e+02,   9.531630e+02,   9.557210e+02,   
       9.582820e+02,   9.607040e+02,   9.629900e+02,   9.652830e+02,   9.675830e+02,   
       9.698910e+02,   9.720680e+02,   9.741170e+02,   9.763130e+02,   9.783830e+02,   
       9.803300e+02,   9.824230e+02,   9.843950e+02,   9.862480e+02,   9.882470e+02,   
       9.899980e+02,   9.918960e+02,   9.936800e+02,   9.954810e+02,   9.972980e+02,   
       9.990070e+02,   1.000730e+03,   1.002480e+03,   1.004120e+03,   1.005790e+03,   
       1.007350e+03,   1.008930e+03,   1.010540e+03,   1.012170e+03,   1.013700e+03,   
       1.015260e+03,   1.016730e+03,   1.018220e+03,   1.019740e+03,   1.021180e+03,   
       1.022640e+03,   1.024020e+03,   1.025420e+03,   1.026860e+03,   1.028220e+03,   
       1.029610e+03,   1.031040e+03,   1.032390e+03,   1.033670e+03,   1.035030e+03,   
       1.036280e+03,   1.037570e+03,   1.038890e+03,   1.040250e+03,   1.041450e+03,   
       1.042690e+03,   1.043970e+03,   1.045100e+03,   1.046270e+03,   1.047490e+03,   
       1.048760e+03,   1.049880e+03,   1.051060e+03,   1.052280e+03,   1.053370e+03,   
       1.054510e+03,   1.055710e+03,   1.056780e+03,   1.057910e+03,   1.059100e+03,   
       1.060180e+03,   1.061310e+03,   1.062340e+03,   1.063440e+03,   1.064590e+03,   
       1.065660e+03,   1.066630e+03,   1.067670e+03,   1.068790e+03,   1.069820e+03,   
       1.070790e+03,   1.071820e+03,   1.072800e+03,   1.073850e+03,   1.074850e+03,   
       1.075790e+03,   1.076820e+03,   1.077800e+03,   1.078740e+03,   1.079780e+03,   
       1.080660e+03,   1.081640e+03,   1.082600e+03,   1.083540e+03,   1.084470e+03,   
       1.085400e+03,   1.141830e+03
   },
};

typedef TabulatedCO2Properties< TabulatedDensityTraits > TabulatedDensity;

struct TabulatedViscosityTraits {
   typedef double Scalar;
   static const char  *name;
   static const int    numTempSteps = 51;
   static constexpr Scalar minTemp = 3.04;
   static constexpr Scalar maxTemp = 103.04;
   static const int    numPressSteps = 127;
   static constexpr Scalar minPress = 100000.0;
   static constexpr Scalar maxPress = 60000000.0;
   static const Scalar vals[51][127];
};

const char  *TabulatedViscosityTraits::name = "viscosity";

const double TabulatedViscosityTraits::vals[51][127] =
{
   {
       1.389520e-05,   1.396130e-05,   1.404020e-05,   1.413390e-05,   1.424580e-05,   
       1.437980e-05,   1.454220e-05,   1.474220e-05,   1.499570e-05,   1.533250e-05,   
       9.505830e-05,   9.560870e-05,   9.616320e-05,   9.675150e-05,   9.731470e-05,   
       9.791230e-05,   9.851460e-05,   9.915240e-05,   9.976490e-05,   1.004130e-04,   
       1.010680e-04,   1.017590e-04,   1.024250e-04,   1.031290e-04,   1.038390e-04,   
       1.043080e-04,   1.051590e-04,   1.059750e-04,   1.068000e-04,   1.075880e-04,   
       1.083850e-04,   1.091910e-04,   1.099610e-04,   1.106930e-04,   1.114800e-04,   
       1.121850e-04,   1.129430e-04,   1.136650e-04,   1.143500e-04,   1.150900e-04,   
       1.157920e-04,   1.164580e-04,   1.171330e-04,   1.178170e-04,   1.185110e-04,   
       1.191680e-04,   1.198340e-04,   1.204640e-04,   1.211510e-04,   1.218010e-04,   
       1.224150e-04,   1.230390e-04,   1.236750e-04,   1.243210e-04,   1.249310e-04,   
       1.255530e-04,   1.261860e-04,   1.267850e-04,   1.273950e-04,   1.280170e-04,   
       1.286060e-04,   1.292070e-04,   1.297750e-04,   1.304010e-04,   1.309960e-04,   
       1.315570e-04,   1.321330e-04,   1.327230e-04,   1.333270e-04,   1.339000e-04,   
       1.344430e-04,   1.350020e-04,   1.355760e-04,   1.361660e-04,   1.367280e-04,   
       1.372610e-04,   1.378570e-04,   1.383810e-04,   1.389890e-04,   1.395050e-04,   
       1.400400e-04,   1.405940e-04,   1.411680e-04,   1.416750e-04,   1.422020e-04,   
       1.427510e-04,   1.433210e-04,   1.438270e-04,   1.444420e-04,   1.449090e-04,   
       1.454860e-04,   1.460020e-04,   1.465430e-04,   1.470270e-04,   1.476210e-04,   
       1.481580e-04,   1.486410e-04,   1.491530e-04,   1.496940e-04,   1.501850e-04,   
       1.507070e-04,   1.512610e-04,   1.517680e-04,   1.523090e-04,   1.528050e-04,   
       1.533380e-04,   1.538300e-04,   1.543600e-04,   1.548520e-04,   1.553850e-04,   
       1.558830e-04,   1.563500e-04,   1.568610e-04,   1.574170e-04,   1.578740e-04,   
       1.583800e-04,   1.589350e-04,   1.593990e-04,   1.599170e-04,   1.604200e-04,   
       1.609100e-04,   1.613910e-04,   1.619330e-04,   1.624030e-04,   1.629390e-04,   
       1.634100e-04,   2.010120e-04
   },
   {
       1.399370e-05,   1.405970e-05,   1.413800e-05,   1.423090e-05,   1.434120e-05,   
       1.447270e-05,   1.463100e-05,   1.482440e-05,   1.506650e-05,   1.538130e-05,   
       1.545360e-05,   9.179820e-05,   9.237930e-05,   9.299310e-05,   9.361230e-05,   
       9.426530e-05,   9.489540e-05,   9.556000e-05,   9.620150e-05,   9.687810e-05,   
       9.756100e-05,   9.828040e-05,   9.897640e-05,   9.970960e-05,   1.004500e-04,   
       1.009280e-04,   1.017970e-04,   1.026760e-04,   1.035210e-04,   1.043320e-04,   
       1.051520e-04,   1.059370e-04,   1.067310e-04,   1.074900e-04,   1.082570e-04,   
       1.090330e-04,   1.097740e-04,   1.104790e-04,   1.111930e-04,   1.119160e-04,   
       1.126470e-04,   1.133430e-04,   1.140040e-04,   1.147180e-04,   1.153970e-04,   
       1.160400e-04,   1.167380e-04,   1.174000e-04,   1.180280e-04,   1.187090e-04,   
       1.193120e-04,   1.199690e-04,   1.205910e-04,   1.212250e-04,   1.218680e-04,   
       1.224780e-04,   1.230990e-04,   1.237310e-04,   1.243290e-04,   1.249390e-04,   
       1.255170e-04,   1.261060e-04,   1.267080e-04,   1.273220e-04,   1.279050e-04,   
       1.285000e-04,   1.290650e-04,   1.296430e-04,   1.302350e-04,   1.307970e-04,   
       1.313730e-04,   1.319200e-04,   1.324830e-04,   1.330610e-04,   1.336110e-04,   
       1.341770e-04,   1.347590e-04,   1.353150e-04,   1.358450e-04,   1.364140e-04,   
       1.369370e-04,   1.374780e-04,   1.380390e-04,   1.386180e-04,   1.391330e-04,   
       1.396670e-04,   1.402230e-04,   1.407160e-04,   1.412310e-04,   1.417690e-04,   
       1.423290e-04,   1.428310e-04,   1.433570e-04,   1.439070e-04,   1.444020e-04,   
       1.449220e-04,   1.454700e-04,   1.459650e-04,   1.464880e-04,   1.470400e-04,   
       1.475420e-04,   1.480760e-04,   1.485620e-04,   1.490820e-04,   1.496340e-04,   
       1.501440e-04,   1.506130e-04,   1.511180e-04,   1.516610e-04,   1.521670e-04,   
       1.526400e-04,   1.531530e-04,   1.536350e-04,   1.541610e-04,   1.546590e-04,   
       1.551330e-04,   1.556540e-04,   1.561540e-04,   1.566360e-04,   1.571690e-04,   
       1.576210e-04,   1.581290e-04,   1.586270e-04,   1.591190e-04,   1.596080e-04,   
       1.600960e-04,   1.946480e-04
   },
};

typedef TabulatedCO2Properties< TabulatedViscosityTraits > TabulatedViscosity;

struct TabulatedEnthalpyTraits {
   typedef double Scalar;
   static const char  *name;
   static const int    numTempSteps = 51;
   static constexpr Scalar minTemp = 3.04;
   static constexpr Scalar maxTemp = 103.04;
   static const int    numPressSteps = 127;
   static constexpr Scalar minPress = 100000.0;
   static constexpr Scalar maxPress = 60000000.0;
   static const Scalar vals[51][127];
};

const char  *TabulatedEnthalpyTraits::name = "enthalpy";

const double TabulatedEnthalpyTraits::vals[51][127] =
{
   {
       7.899020e+05,   7.854180e+05,   7.807000e+05,   7.757070e+05,   7.703760e+05,   
       7.646340e+05,   7.583640e+05,   7.514000e+05,   7.434530e+05,   7.340030e+05,   
       5.099090e+05,   5.096390e+05,   5.093730e+05,   5.090960e+05,   5.088370e+05,   
       5.085680e+05,   5.083030e+05,   5.080300e+05,   5.077730e+05,   5.075090e+05,   
       5.072490e+05,   5.069830e+05,   5.067330e+05,   5.064770e+05,   5.062270e+05,   
       5.060660e+05,   5.057830e+05,   5.055220e+05,   5.052680e+05,   5.050350e+05,   
       5.048090e+05,   5.045900e+05,   5.043900e+05,   5.042070e+05,   5.040190e+05,   
       5.038580e+05,   5.036920e+05,   5.035410e+05,   5.034040e+05,   5.032630e+05,   
       5.031360e+05,   5.030210e+05,   5.029110e+05,   5.028040e+05,   5.027020e+05,   
       5.026110e+05,   5.025240e+05,   5.024460e+05,   5.023660e+05,   5.022960e+05,   
       5.022340e+05,   5.021750e+05,   5.021200e+05,   5.020680e+05,   5.020230e+05,   
       5.019810e+05,   5.019420e+05,   5.019100e+05,   5.018800e+05,   5.018540e+05,   
       5.018330e+05,   5.018140e+05,   5.018000e+05,   5.017880e+05,   5.017800e+05,   
       5.017760e+05,   5.017740e+05,   5.017760e+05,   5.017800e+05,   5.017880e+05,   
       5.017970e+05,   5.018100e+05,   5.018250e+05,   5.018440e+05,   5.018650e+05,   
       5.018870e+05,   5.019150e+05,   5.019410e+05,   5.019740e+05,   5.020050e+05,   
       5.020390e+05,   5.020760e+05,   5.021170e+05,   5.021560e+05,   5.021980e+05,   
       5.022440e+05,   5.022930e+05,   5.023400e+05,   5.023980e+05,   5.024450e+05,   
       5.025040e+05,   5.025590e+05,   5.026180e+05,   5.026730e+05,   5.027420e+05,   
       5.028070e+05,   5.028660e+05,   5.029310e+05,   5.030020e+05,   5.030670e+05,   
       5.031390e+05,   5.032160e+05,   5.032880e+05,   5.033670e+05,   5.034420e+05,   
       5.035230e+05,   5.035990e+05,   5.036820e+05,   5.037620e+05,   5.038490e+05,   
       5.039320e+05,   5.040110e+05,   5.040990e+05,   5.041960e+05,   5.042770e+05,   
       5.043680e+05,   5.044690e+05,   5.045550e+05,   5.046530e+05,   5.047480e+05,   
       5.048430e+05,   5.049370e+05,   5.050440e+05,   5.051380e+05,   5.052470e+05,   
       5.053430e+05,   5.157810e+05
   },
   {
       7.915710e+05,   7.871620e+05,   7.825310e+05,   7.776390e+05,   7.724340e+05,   
       7.668490e+05,   7.607800e+05,   7.540880e+05,   7.465280e+05,   7.377050e+05,   
       7.358060e+05,   5.149740e+05,   5.146610e+05,   5.143380e+05,   5.140190e+05,   
       5.136910e+05,   5.133810e+05,   5.130620e+05,   5.127610e+05,   5.124520e+05,   
       5.121490e+05,   5.118380e+05,   5.115450e+05,   5.112460e+05,   5.109540e+05,   
       5.107700e+05,   5.104450e+05,   5.101290e+05,   5.098370e+05,   5.095670e+05,   
       5.093050e+05,   5.090640e+05,   5.088300e+05,   5.086150e+05,   5.084060e+05,   
       5.082040e+05,   5.080190e+05,   5.078500e+05,   5.076870e+05,   5.075280e+05,   
       5.073750e+05,   5.072360e+05,   5.071100e+05,   5.069800e+05,   5.068630e+05,   
       5.067570e+05,   5.066490e+05,   5.065510e+05,   5.064640e+05,   5.063740e+05,   
       5.063000e+05,   5.062230e+05,   5.061550e+05,   5.060910e+05,   5.060300e+05,   
       5.059770e+05,   5.059270e+05,   5.058810e+05,   5.058400e+05,   5.058030e+05,   
       5.057720e+05,   5.057430e+05,   5.057180e+05,   5.056960e+05,   5.056780e+05,   
       5.056630e+05,   5.056530e+05,   5.056450e+05,   5.056410e+05,   5.056390e+05,   
       5.056410e+05,   5.056450e+05,   5.056530e+05,   5.056630e+05,   5.056760e+05,   
       5.056920e+05,   5.057110e+05,   5.057320e+05,   5.057540e+05,   5.057810e+05,   
       5.058070e+05,   5.058380e+05,   5.058710e+05,   5.059090e+05,   5.059440e+05,   
       5.059830e+05,   5.060260e+05,   5.060660e+05,   5.061090e+05,   5.061570e+05,   
       5.062090e+05,   5.062570e+05,   5.063100e+05,   5.063670e+05,   5.064200e+05,   
       5.064780e+05,   5.065410e+05,   5.065990e+05,   5.066630e+05,   5.067320e+05,   
       5.067960e+05,   5.068670e+05,   5.069330e+05,   5.070040e+05,   5.070830e+05,   
       5.071570e+05,   5.072260e+05,   5.073020e+05,   5.073860e+05,   5.074660e+05,   
       5.075410e+05,   5.076250e+05,   5.077050e+05,   5.077930e+05,   5.078790e+05,   
       5.079610e+05,   5.080540e+05,   5.081430e+05,   5.082310e+05,   5.083300e+05,   
       5.084150e+05,   5.085110e+05,   5.086080e+05,   5.087040e+05,   5.088010e+05,   
       5.088980e+05,   5.182960e+05
   },
};

typedef TabulatedCO2Properties< TabulatedEnthalpyTraits > TabulatedEnthalpy;

// this class collects all the tabulated quantities in one convenient place
struct CO2Tables {
   static const TabulatedEnthalpy   tabulatedEnthalpy;
   static const TabulatedDensity    tabulatedDensity;
   static const TabulatedViscosity  tabulatedViscosity;
};

const TabulatedEnthalpy  CO2Tables::tabulatedEnthalpy;
const TabulatedDensity   CO2Tables::tabulatedDensity;
const TabulatedViscosity CO2Tables::tabulatedViscosity;
